{
  "version": 3,
  "sources": ["../../../lib/ui/layers/view.mjs", "../../../lib/ui/layers/listview.mjs", "../../../lib/ui/layers/filters.mjs", "../../../lib/ui/layers/panels/meta.mjs", "../../../lib/ui/layers/panels/draw.mjs", "../../../lib/ui/layers/panels/filter.mjs", "../../../lib/ui/layers/panels/gazetteer.mjs", "../../../lib/ui/layers/panels/dataviews.mjs", "../../../lib/ui/layers/panels/reports.mjs", "../../../lib/ui/layers/panels/style.mjs", "../../../lib/ui/layers/legends/categorized.mjs", "../../../lib/ui/layers/legends/graduated.mjs", "../../../lib/ui/layers/legends/basic.mjs", "../../../lib/ui/layers/_layers.mjs", "../../../lib/ui/locations/view.mjs", "../../../lib/ui/locations/listview.mjs", "../../../lib/ui/locations/infoj.mjs", "../../../lib/ui/locations/entries/boolean.mjs", "../../../lib/ui/locations/entries/cloudinary.mjs", "../../../lib/ui/locations/entries/dataview.mjs", "../../../lib/ui/locations/entries/date.mjs", "../../../lib/ui/locations/entries/defaults.mjs", "../../../lib/ui/locations/entries/geometry.mjs", "../../../lib/ui/locations/entries/json.mjs", "../../../lib/ui/locations/entries/mvt_clone.mjs", "../../../lib/ui/locations/entries/numeric.mjs", "../../../lib/ui/locations/entries/pin.mjs", "../../../lib/ui/locations/entries/pills.mjs", "../../../lib/ui/locations/entries/link.mjs", "../../../lib/ui/locations/entries/tab.mjs", "../../../lib/ui/locations/entries/text.mjs", "../../../lib/ui/locations/entries/textarea.mjs", "../../../lib/ui/locations/entries/time.mjs", "../../../lib/ui/locations/entries/vector_layer.mjs", "../../../lib/ui/locations/entries/key.mjs", "../../../lib/ui/locations/entries/title.mjs", "../../../lib/ui/locations/entries/query_button.mjs", "../../../lib/ui/locations/entries/_entries.mjs", "../../../lib/ui/locations/_locations.mjs", "../../../lib/ui/Dataview.mjs", "../../../lib/ui/Tabview.mjs", "../../../lib/ui/elements/card.mjs", "../../../lib/ui/elements/chkbox.mjs", "../../../lib/ui/elements/contextMenu.mjs", "../../../lib/ui/elements/drawer.mjs", "../../../lib/ui/elements/drawing.mjs", "../../../lib/ui/elements/dropdown.mjs", "../../../lib/ui/elements/dropdown_multi.mjs", "../../../lib/ui/elements/btnPanel.mjs", "../../../lib/ui/elements/legendIcon.mjs", "../../../lib/ui/elements/dialog.mjs", "../../../lib/ui/elements/helpDialog.mjs", "../../../lib/ui/elements/searchbox.mjs", "../../../lib/ui/elements/slider.mjs", "../../../lib/ui/elements/slider_ab.mjs", "../../../lib/ui/elements/pills.mjs", "../../../lib/ui/elements/numericInput.mjs", "../../../lib/ui/elements/_elements.mjs", "../../../lib/ui/utils/idleLogout.mjs", "../../../lib/ui/utils/imagePreview.mjs", "../../../lib/ui/utils/resizeHandler.mjs", "../../../lib/ui/utils/_utils.mjs", "../../../lib/ui/Gazetteer.mjs", "../../../lib/ui.mjs"],
  "sourcesContent": ["mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_zoom_to_extent: 'Zoom to filtered layer extent',\n    layer_visibility: 'Toggle visibility',\n    zoom_to: 'Zoom to',\n  },\n  de: {\n    layer_zoom_to_extent: 'Zoom zum Ausma\u00DF des gefilterten Datensatzes',\n    layer_visibility: 'Umschalten der Ansicht',\n    zoom_to: 'Heranzoomen',\n  },\n  zn: {\n    layer_zoom_to_extent: '\u7F29\u653E\u81F3\u7B5B\u9009\u56FE\u5C42\u7684\u76F8\u5E94\u8303\u56F4',\n    layer_visibility: '\u53EF\u89C1\u6027\u5207\u6362',\n    zoom_to: '\u7F29\u653E\u81F3',\n  },\n  zn_tw: {\n    layer_zoom_to_extent: '\u7E2E\u653E\u81F3\u7BE9\u9078\u5716\u5C64\u7684\u76F8\u61C9\u7BC4\u570D',\n    layer_visibility: '\u53EF\u898B\u6027\u5207\u63DB',\n    zoom_to: '\u7E2E\u653E\u81F3',\n  },\n  pl: {\n    layer_zoom_to_extent: 'Przybli\u017C do odfiltrowanej wastwy',\n    layer_visibility: 'Zmodyfikuj widzialno\u015B\u0107',\n    zoom_to: 'Przybli\u017C do',\n  },\n  fr: {\n    layer_zoom_to_extent: 'Zoom sur la couche filtr\u00E9e',\n    layer_visibility: 'Modifier la visibilit\u00E9',\n    zoom_to: 'Zoom sur',\n  },\n  ja: {\n    layer_zoom_to_extent: '\u30D5\u30A3\u30EB\u30BF\u30FC\u3055\u308C\u305F\u30EC\u30A4\u30E4\u30FC\u7BC4\u56F2\u3092\u30BA\u30FC\u30E0\u306B',\n    layer_visibility: '\u8868\u793A\u5207\u66FF',\n    zoom_to: '\u30BA\u30FC\u30E0\u3078',\n  },\n  es: {\n    layer_zoom_to_extent: 'Zoom a capa filtrada',\n    layer_visibility: 'Alternar visibilidad',\n    zoom_to: 'Acercar a',\n  },\n  tr: {\n    layer_zoom_to_extent: 'Filtrelenmis katman kapsamina yaklas',\n    layer_visibility: 'Gorunurlugu degistir',\n    zoom_to: 'Yaklas',\n  },\n  it: {\n    layer_zoom_to_extent: 'Zoom sul layer',\n    layer_visibility: 'Attiva/Disattiva visibilit\u00E0',\n    zoom_to: 'Zoom a',\n  },\n  th: {\n    layer_zoom_to_extent: '\u0E0B\u0E39\u0E21\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E02\u0E2D\u0E1A\u0E40\u0E02\u0E15\u0E40\u0E25\u0E40\u0E22\u0E2D\u0E23\u0E4C\u0E17\u0E35\u0E48\u0E01\u0E23\u0E2D\u0E07',\n    layer_visibility: '\u0E2A\u0E25\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E21\u0E2D\u0E07\u0E40\u0E2B\u0E47\u0E19',\n    zoom_to: '\u0E0B\u0E39\u0E21\u0E44\u0E1B\u0E17\u0E35\u0E48',\n  },\n})\n\nexport default (layer) => {\n\n  if (layer.view === null) {\n\n    // Do not create a layer view.\n    return layer;\n  }\n\n  layer.view = mapp.utils.html.node`<div class=\"layer-view\">`\n\n  // Create content from layer view panels and plugins\n  const content = Object.keys(layer)\n    .map(key => mapp.ui.layers.panels[key] && mapp.ui.layers.panels[key](layer))\n    .filter(panel => typeof panel !== 'undefined')\n\n  // Set default order for panel if not explicit in layer config.\n  layer.panelOrder = layer.panelOrder || ['draw-drawer', 'dataviews-drawer', 'filter-drawer', 'style-drawer', 'meta']\n\n  content.sort((a, b) => {\n\n    // Sort according to data-id in panelOrder array.\n    return layer.panelOrder.findIndex(chk => chk === a.dataset?.id)\n      < layer.panelOrder.findIndex(chk => chk === b.dataset?.id)\n      ? 1 : -1;\n  })\n\n  if (layer.drawer !== null) {\n\n    layer.zoomToExtentBtn = layer.filter.zoomToExtent && mapp.utils.html`\n      <button\n        data-id=zoomToExtent\n        title=${mapp.dictionary.layer_zoom_to_extent}\n        class=\"mask-icon fullscreen\"\n        onclick=${async e => {\n\n          // disable button if no locations were found.\n          e.target.disabled = !await layer.zoomToExtent()\n\n          layer.show()\n        }}>`\n\n    // Create layer.displayToggle button for header.\n    layer.displayToggle = mapp.utils.html.node`\n      <button\n        data-id=display-toggle\n        title=${mapp.dictionary.layer_visibility}\n        class=\"${`mask-icon toggle ${(layer.zoomDisplay || layer.display)? 'on': ''}`}\"\n        onclick=${e => {\n          const toggle = e.target.classList.toggle('on')\n          toggle? layer.show(): layer.hide()\n        }}>`\n\n    // Create a div for the magnifying glass icon\n    layer.zoomBtn = layer.tables && mapp.utils.html.node`\n      <button \n        data-id=\"zoom-to\"\n        title=${mapp.dictionary.zoom_to}\n        class=\"mask-icon search\"\n        onclick=${()=>{\n\n          const minZoom = Object.entries(layer.tables).find(entry => !!entry[1])[0]\n\n          const maxZoom = Object.entries(layer.tables).reverse().find(entry => !!entry[1])[0]\n\n          const view = layer.mapview.Map.getView()\n\n          view.getZoom() < minZoom ?\n            view.setZoom(minZoom) :\n            view.setZoom(maxZoom)\n\n          layer.show()\n        }}>`        \n\n    // Add on callback for toggle button.\n    layer.showCallbacks.push(() => {\n      layer.displayToggle.classList.add('on')\n    })\n\n    // Remove on callback for toggle button.\n    layer.hideCallbacks.push(() => {\n      !layer.zoomDisplay && layer.displayToggle.classList.remove('on')\n    })\n\n    const header = mapp.utils.html`\n      <h2>${layer.name || layer.key}</h2>\n      ${layer.zoomToExtentBtn}\n      ${layer.displayToggle}\n      ${layer.zoomBtn}\n      <div class=\"mask-icon expander\"></div>`\n\n    // Create layer drawer node.\n    layer.drawer = mapp.ui.elements.drawer({\n      data_id: `layer-drawer`,\n      class: `layer-view raised ${layer.classList || ''} ${content.length ? '' : 'empty'}`,\n      header: header,\n      content: content\n    })\n\n    // Render layer.drawer into layer.view\n    mapp.utils.render(layer.view, layer.drawer)\n\n  } else {\n\n    // Append elements directly to layer.view\n    content.forEach(el => layer.view.append(el))\n  }\n\n  // The layer may be zoom level restricted.\n  layer.tables && layer.mapview.Map.getTargetElement().addEventListener('changeEnd', () => {\n\n    if (!layer.tableCurrent()) {\n      \n      layer.zoomBtn.style.display = 'block'\n\n      // Collapse drawer and disable layer.view.\n      layer.view.querySelector('[data-id=layer-drawer]').classList.remove('expanded')\n      \n      // Disable layer display toggle.\n      layer.displayToggle.classList.add('disabled')\n\n      // Disable layer.view content.\n      content.forEach(el => el.classList.add('disabled'))\n      \n    } else {\n\n      layer.zoomBtn.style.display = 'none'\n\n      // Enable layer display toggle.\n      layer.displayToggle.classList.remove('disabled')\n\n      // Enable layer.view content.\n      content.forEach(el => el.classList.remove('disabled'))\n    }\n\n  })\n\n  return layer\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_group_hide_layers: 'Hide all layers in group',\n  },\n  de: {\n    layer_group_hide_layers: 'Ausschalten aller Ebenen in Gruppe',\n  },\n  zh: {\n    layer_group_hide_layers: '\u9690\u85CF\u6574\u7EC4\u56FE\u5C42',\n  },\n  zh_tw: {\n    layer_group_hide_layers: '\u96B1\u85CF\u6574\u7D44\u5716\u5C64',\n  },\n  pl: {\n    layer_group_hide_layers: 'Ukryj wszystkie warstwy w grupie',\n  },\n  fr: {\n    layer_group_hide_layers: 'Masquer toutes les couches du groupe',\n  },\n  ja: {\n    layer_group_hide_layers: '\u30B0\u30EB\u30FC\u30D7\u304B\u3089\u30EC\u30A4\u30E4\u30FC\u3092\u96A0\u3059',\n  },\n  es: {\n    layer_group_hide_layers: 'Ocultar todas las capas del grupo',\n  },\n  tr: {\n    layer_group_hide_layers: 'Gruptaki tum katmanlari gizle',\n  },\n  it: {\n    layer_group_hide_layers: 'Nascondi tutti i layer nel gruppo',\n  },\n  th: {\n    layer_group_hide_layers: '\u0E0B\u0E48\u0E2D\u0E19\u0E17\u0E38\u0E01\u0E0A\u0E31\u0E49\u0E19\u0E43\u0E19\u0E01\u0E25\u0E38\u0E48\u0E21',\n  }\n})\n\nexport default function (params){\n\n  if (!params.mapview) return\n\n  if (!params.target) return\n\n  const listview = {\n    node: params.target,\n    groups: {}\n  }\n\n  // Loop through the layers and add to layers list.\n  Object.values(params.mapview.layers).forEach(layer => add(layer))\n\n  // Loop through the layers and add to layers list.\n  function add(layer){\n\n    // Do not create a layer view.\n    if (layer.hidden) return;\n\n    // Create the layer view.\n    mapp.ui.layers.view(layer)\n\n    if (!layer.group) {\n      listview.node.appendChild(layer.view)\n      listview.node.dispatchEvent(new CustomEvent('addLayerView', {\n        detail: layer\n      }))\n      return\n    }\n\n    // Create new layer group if group does not exist yet.\n    if (!listview.groups[layer.group]) createGroup(layer)\n\n    // Add layer to group.\n    listview.groups[layer.group].addLayer(layer)\n\n    listview.node.dispatchEvent(new CustomEvent('addLayerView', {\n      detail: layer\n    }))\n  }\n\n  function createGroup(layer) {\n\n    // Create group object.\n    const group = {\n      list: []\n    }\n  \n    // Assign layer group to listview object.\n    listview.groups[layer.group] = group\n\n    // Create hide all group layers button.\n    const hideLayers = mapp.utils.html.node`\n      <button\n        class=\"mask-icon on visibility-off\"\n        title=${mapp.dictionary.layer_group_hide_layers}\n        onclick=${e => {\n\n          e.target.style.visibility = 'hidden'\n\n          group.list\n            .filter(layer => layer.display)\n            .forEach(layer => layer.hide())\n\n        }}>`\n \n    group.meta = mapp.utils.html.node`<div class=\"meta\">`\n\n    group.drawer = mapp.ui.elements.drawer({\n      data_id: `layer-drawer`,\n      class: `layer-group ${layer.groupClassList || ''}`,\n      header: mapp.utils.html`\n        <h2>${layer.group}</h2>\n        ${hideLayers}\n        <div class=\"mask-icon expander\"></div>`,\n      content: group.meta\n    })\n\n    listview.node.appendChild(group.drawer)\n\n    // Check whether some layers group are visible and toggle visible button display accordingly.\n    group.chkVisibleLayer = () => {\n\n      hideLayers.style.visibility = group.list.some(layer => layer.display) ?\n        'visible' : 'hidden'\n    }\n\n    group.addLayer = (layer) => {\n\n      layer.group = group\n  \n      if (layer.groupmeta) {\n        const metaContent = group.meta.appendChild(mapp.utils.html.node`<div>`)\n        metaContent.innerHTML = layer.groupmeta\n      }\n  \n      group.list.push(layer)\n  \n      group.drawer.appendChild(layer.view)\n\n      group.chkVisibleLayer()\n\n      layer.showCallbacks.push(()=>group.chkVisibleLayer())\n\n      layer.hideCallbacks.push(()=>group.chkVisibleLayer())      \n    }\n  \n  }\n}", "/**\n## mapp.ui.layers.filters[type](layer, filter)\n\nThe ui/layers/filters module exports a lookup object for the different layer filter type methods.\n\n- like\n- match\n- numeric\n- integer\n- in\n- ni\n- date\n- datetime\n- boolean\n- null\n\n@module /ui/layers/filters\n*/\n\nexport default {\n  like: filter_text,\n  match: filter_text,\n  numeric: filter_numeric,\n  integer: filter_numeric,\n  in: filter_in,\n  ni: filter_in,\n  date: filter_date,\n  datetime: filter_date,\n  boolean: filter_boolean,\n  null: filter_null,\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    no_data_filter: 'This field contains no data and cannot be filtered on.',\n    filter_searchbox_placeholder: 'Search',\n    identical_values_filter: 'This field contains only one distinct value and cannot be filtered on.'\n  },\n  de: {\n    no_data_filter: 'Dieses Feld enth\u00E4lt keine Daten und kann nicht gefiltert werden.'\n  }\n});\n\n/**\n### applyFilter(layer)\n\nThe applyFilter method reloads the layer data and legend.\n\nThe method is debounce through the module `timeout` variable.\n\n@function applyFilter\n@param {Object} layer Decorated MAPP Layer Object.\n*/\n\nlet timeout;\n\nfunction applyFilter(layer) {\n\n  clearTimeout(timeout);\n\n  // Debounce layer reload by 500\n  timeout = setTimeout(() => {\n    if (layer.style.legend) {\n      mapp.ui.layers.legends[layer.style.theme.type](layer)\n    }\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }, 500);\n}\n\n/**\n * @function filter_text\n * @description Creates an input element for filtering text values.\n * @param {Object} layer - The layer object to apply the filter to.\n * @param {Object} filter - The filter configuration object.\n * @returns {HTMLElement} The input element for text filtering.\n */\nfunction filter_text(layer, filter) {\n  return mapp.utils.html.node`\n  <input\n    type=\"text\"\n    onkeyup=${(e) => {\n      if (!e.target.value.length) {\n\n        // Delete filter for empty input.\n        delete layer.filter.current[filter.field][filter.type]\n\n        if (!Object.keys(layer.filter.current[filter.field])) {\n          delete layer.filter.current[filter.field]\n        }\n\n      } else {\n\n        layer.filter.current[filter.field] ??= {}\n        layer.filter.current[filter.field][filter.type] = encodeURIComponent(`${filter.leading_wildcard && '%' || ''}${e.target.value}`)\n      }\n      applyFilter(layer)\n    }}>`;\n}\n\n/**\n * @function filter_boolean\n * @description Creates a checkbox element for filtering boolean values.\n * @param {Object} layer - The layer object to apply the filter to.\n * @param {Object} filter - The filter configuration object.\n * @returns {HTMLElement} The checkbox element for boolean filtering.\n */\nfunction filter_boolean(layer, filter) {\n\n  function booleanFilter(checked) {\n    layer.filter.current[filter.field] = {\n      boolean: checked\n    }\n    applyFilter(layer)\n  }\n\n  booleanFilter(false)\n\n  return mapp.ui.elements.chkbox({\n    label: filter.label || filter.title || 'chkbox',\n    onchange: booleanFilter\n  })\n}\n\n/**\n * @function filter_null\n * @description Creates a checkbox element for filtering null values.\n * @param {Object} layer - The layer object to apply the filter to.\n * @param {Object} filter - The filter configuration object.\n * @returns {HTMLElement} The checkbox element for null filtering.\n */\nfunction filter_null(layer, filter) {\n\n  function nullFilter(checked) {\n    layer.filter.current[filter.field] = {\n      null: checked\n    }\n    applyFilter(layer)\n  }\n\n  nullFilter(false)\n\n  return mapp.ui.elements.chkbox({\n    label: filter.label || filter.title || 'chkbox',\n    onchange: nullFilter\n  })\n}\n\n/**\n@function generateMinMax\n@description\nQuery the min and max values for a numeric filter field.\n\n@param {layer} layer MAPP layer typedef object.\n@param {Object} filter Filter object.\n@property {string} filter.field Field to filter.\n@property {numeric} [filter.min] Min bounds.\n@property {numeric} [filter.max] Max bounds.\n*/\nasync function generateMinMax(layer, filter) {\n\n  const response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?${mapp.utils.paramString({\n    template: `field_minmax`,\n    locale: layer.mapview.locale.key,\n    layer: layer.key,\n    table: layer.tableCurrent(),\n    field: filter.field,\n  })}`);\n\n  // Assign min, max from response if not a number.\n  const min = isNaN(filter.min) ? response.minmax[0]: filter.min\n  const max = isNaN(filter.max) ? response.minmax[1]: filter.max\n\n  // Parse min, max as interger or float depending on type.\n  // Round integer to be correct up or down.\n  filter.min = filter.type === 'integer'? Math.round(min) : parseFloat(min)\n  filter.max = filter.type === 'integer'? Math.round(max) : parseFloat(max)\n}\n\n/**\n@function filter_numeric\n\n@description\nReturns numeric inputs and range slider element as UI for numeric layer filter.\n\nNumeric layer filter are a combination of an LTE (less-than-[or]equal) and GTE (greater-than-[or]equal) filter for a field defined in a matching entry field.\n\n@param {layer} layer MAPP layer typedef object.\n@param {Object} filter Filter object.\n@property {string} filter.field Field to filter.\n@property {numeric} [filter.min] Min bounds.\n@property {numeric} [filter.max] Max bounds.\n@property {numeric} [filter.step] Step for renage slider.\n\n@returns {Promise<HTMLElement>}\nThe filter UI elements.\n*/\n\nasync function filter_numeric(layer, filter) {\n\n  // Find infoj entry and merge into the filter object.\n  const entry = layer.infoj.find(entry => entry.field === filter.field)\n\n  Object.assign(filter, entry)\n\n  if (isNaN(filter.max) || isNaN(filter.min)) {\n\n    // Query min and max if not implicit.\n    await generateMinMax(layer, filter);\n  }\n\n  filter.step ??= filter.type === 'integer' ? 1 : 0.01;\n\n  // Assign the range min / max as layer filter if not already defined.\n  layer.filter.current[filter.field] = Object.assign(\n    {\n      gte: Number(filter.min),\n      lte: Number(filter.max)\n    },\n    layer.filter.current[filter.field]);\n\n  applyFilter(layer);\n\n  // If filter.min and filter.max are identical, return a message.\n  if (filter.min === filter.max) {\n\n    // Return text to indicate that the field contains only one distinct value.\n    return mapp.utils.html.node`<div>${mapp.dictionary.identical_values_filter}</div>`\n  };\n  \n  // Only if filter.min and filter.max are not numeric values, return a message.\n  if (isNaN(filter.min) || isNaN(filter.max)) {\n\n    // Return text to indicate that the min and max values are not defined.\n    return mapp.utils.html.node`<div>${mapp.dictionary.no_data_filter}</div>`\n  };\n\n  // Create affix for rangeslider input label.\n  const affix = (filter.prefix || filter.suffix)\n    ? `(${(filter.prefix || filter.suffix).trim()})`\n    : ''\n\n  filter.label_a ??= `${mapp.dictionary.layer_filter_greater_than} ${affix}`\n\n  filter.label_b ??= `${mapp.dictionary.layer_filter_less_than} ${affix}`\n\n  filter.val_a = layer.filter.current?.[filter.field]?.gte || filter.min\n\n  filter.val_b = layer.filter.current?.[filter.field]?.lte || filter.max\n\n  filter.callback_a = val => {\n    layer.filter.current[filter.field].gte = val\n    applyFilter(layer)\n  }\n\n  filter.callback_b = val => {\n    layer.filter.current[filter.field].lte = val\n    applyFilter(layer)\n  }\n\n  // Create the range slider element.\n  return mapp.ui.elements.slider_ab(filter)\n}\n\n/**\n@function filter_in\n\n@description\nFilter interface elements for `in` and `ni` type layer filter are returned from the filter_in() method.\n\nThe method is async to wait for a distinct values query to populate the filter type [eg. in or ni] values array.\n\nA list of checkbox elements will be returned as default interface without a `dropdown`, `dropdown_pills`, or `searchbox` flag.\n\n@param {Object} layer Decorated MAPP Layer Object.\n@param {Object} filter The filter object.\n@param {string} filter.field The filter field.\n@param {Array} [filter.in] Array of values for in type filter.\n@param {Array} [filter.ni] Array of values for ni type filter.\n@param {Boolean} [filter.dropdown] Create dropdown [pills] filter interface.\n@param {Boolean} [filter.dropdown_pills] Create dropdown [pills] filter interface.\n@param {Boolean} [filter.searchbox] Create searchbox [pills] filter interface.\n@returns {Promise<HTMLElement>} Filter interface elements.\n*/\n\nasync function filter_in(layer, filter) {\n\n  // Check whether a filter type values array has been provided.\n  if (!Array.isArray(filter[filter.type])) {\n\n    // Query distinct field values from the layer table.\n    const response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'distinct_values',\n        dbs: layer.dbs,\n        locale: layer.mapview.locale.key,\n        layer: layer.key,\n        table: layer.tableCurrent(),\n        field: filter.field,\n        filter: layer.filter?.current\n      }))\n\n    if (!response) {\n      console.warn(`Distinct values query did not return any values for field ${filter.field}`)\n\n      // Set a div with a message that the field contains no data. \n      return mapp.utils.html.node`<div>${mapp.dictionary.no_data_filter}</div>`\n    }\n\n    filter[filter.type] = [response]\n\n      // Flatten response in array to account for the response being a single record and not an array.\n      .flat()\n\n      // Map the entry field from response records.\n      .map(record => record[filter.field])\n\n      // Filter out null values.\n      .filter(val => val !== null)\n  }\n\n  // Create set to check for current values in the filter array.\n  const chkSet = new Set(layer.filter?.current[filter.field]?.[filter.type] || []);\n\n  if (filter.dropdown || filter.dropdown_pills) {\n\n    const dropdown = mapp.ui.elements.dropdown({\n      pills: filter.dropdown_pills,\n      multi: true,\n      inputfilter: true,\n      placeholder: 'Select Multiple',\n      maxHeight: 300,\n      entries: filter[filter.type].map(val => ({\n        title: val,\n        option: val,\n        selected: chkSet.has(val)\n      })),\n      callback: async (e, options) => {\n\n        if (!options.length) {\n\n          // Remove empty array filter.\n          delete layer.filter.current[filter.field]\n        } else {\n\n          // Set filter values array from options.\n          Object.assign(layer.filter.current, {\n            [filter.field]: {\n              [filter.type]: options\n            }\n          })\n        }\n\n        applyFilter(layer)\n      }\n    })\n\n    return mapp.utils.html.node`<div class=\"filter\">${dropdown}`\n  }\n\n  if(filter.searchbox) {\n\n    const searchbox_filter = mapp.utils.html.node`<div class=\"filter\">`\n\n    const pillComponent = mapp.ui.elements.pills({\n      target: searchbox_filter,\n      addCallback: (val, pills) => {\n        Object.assign(layer.filter.current, {\n          [filter.field]: {\n            [filter.type]: [...pills]\n          }\n        });\n        applyFilter(layer);\n      },\n      removeCallback: (val, pills) => {\n\n        if(pills.size === 0) {\n          searchbox.input.value = null;\n\n          //if nothing left selected delete the entire filter\n          delete layer.filter.current[filter.field];\n\n        } else {\n          Object.assign(layer.filter.current, {\n            [filter.field]: {\n              [filter.type]: [...pills]\n            }\n          })\n        }\n\n        applyFilter(layer);\n      }});\n\n    const searchbox = mapp.ui.elements.searchbox({\n      target: searchbox_filter,\n      placeholder: mapp.dictionary.filter_searchbox_placeholder,\n      searchFunction: (e) => {\n\n        searchbox.list.innerHTML = '';\n\n        if(!e.target.value) return; // nothing to match\n\n        const pattern = e.target.value;\n\n        let filtered = filter[filter.type].filter(val =>\n\n          // val may not be string.\n          val.toString().toLowerCase().startsWith(pattern.toLowerCase()))\n\n        if (!filtered.length) {\n\n          searchbox.list.append(mapp.utils.html.node`\n            <li><span>${mapp.dictionary.no_results}`);\n\n          return;\n        }\n\n        filtered\n          .filter(val => !pillComponent.pills.has(val)) // only those not selected already\n          .filter((val, i) => i < 9)\n          .forEach(val => {\n\n            // Append li element to searchbox.list\n            searchbox.list.append(mapp.utils.html.node`\n              <li onclick=${() => {\n\n                // Add pill not yet in pillComponent\n                !pillComponent.pills.has(val) && pillComponent.add(val);\n              }}>${val}`)\n          });\n      }\n    });\n\n    return mapp.utils.html.node`${searchbox_filter}`;\n  }\n\n  const chkBoxes = filter[filter.type].map(val => mapp.ui.elements.chkbox({\n    val: val,\n    label: val,\n    checked: chkSet.has(val),\n    onchange: (checked, val) => {\n\n      if (checked) {\n\n        // Create filter object if it doesn't exist.\n        if (!layer.filter.current[filter.field]) {\n          layer.filter.current[filter.field] = {}\n        }\n\n        // Create empty in array if it doesn't exist.\n        if (!layer.filter.current[filter.field][filter.type]) {\n          layer.filter.current[filter.field][filter.type] = []\n        }\n\n        // Add value to filter array.\n        layer.filter.current[filter.field][filter.type].push(val);\n\n      } else {\n\n        // Get index of value in filter array.\n        const idx = layer.filter.current[filter.field][filter.type].indexOf(val);\n\n        // Splice filter array on idx.\n        layer.filter.current[filter.field][filter.type].splice(idx, 1);\n\n        // Remove filter object if it is empty.\n        if (!layer.filter.current[filter.field][filter.type].length) {\n          delete layer.filter.current[filter.field]\n        }\n      }\n\n      applyFilter(layer)\n    }\n  }))\n\n  return mapp.utils.html.node`<div class=\"filter\">${chkBoxes}`\n}\n\n/**\n * @function filter_date\n * @description Creates input elements for filtering date values.\n * @param {Object} layer - The layer object to apply the filter to.\n * @param {Object} filter - The filter configuration object.\n * @returns {HTMLElement} The input elements for date filtering.\n */\nfunction filter_date(layer, filter) {\n\n  const inputAfter = mapp.utils.html.node`\n    <input\n      data-id=\"inputAfter\"\n      onchange=${onClose}\n      type=${filter.type === 'datetime' && 'datetime-local' || 'date'}>`;\n\n  const inputBefore = mapp.utils.html.node`\n    <input\n      data-id=\"inputBefore\"\n      onchange=${onClose}\n      type=${filter.type === 'datetime' && 'datetime-local' || 'date'}>`;\n\n  function onClose(e) {\n\n    if (e.target.dataset.id === 'inputAfter') {\n\n      layer.filter.current[filter.field] = Object.assign(\n        layer.filter.current[filter.field] || {},\n        {\n          gt: new Date(e.target.value).getTime() / 1000\n        })\n\n    }\n\n    if (e.target.dataset.id === 'inputBefore') {\n\n      layer.filter.current[filter.field] = Object.assign(\n        layer.filter.current[filter.field] || {},\n        {\n          lt: new Date(e.target.value).getTime() / 1000\n        })\n\n    }\n\n    applyFilter(layer)\n  }\n\n  return mapp.utils.html`\n    <div style=\"\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n      grid-gap: 5px;\">\n      <label>Date after\n        ${inputAfter}</label>\n      <label>Date before\n        ${inputBefore}</label>`\n\n}", "export default layer => {\n\n    const meta = mapp.utils.html.node`<p data-id=\"meta\" class=\"meta\">`\n    meta.innerHTML = layer.meta\n    return meta\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_add_new_location: 'Add new locations',\n  },\n  de: {\n    layer_add_new_location: 'Erstelle neue Lage',\n  },\n  zh: {\n    layer_add_new_location: '\u6DFB\u52A0\u65B0\u5730\u70B9',\n  },\n  zh_tw: {\n    layer_add_new_location: '\u6DFB\u52A0\u65B0\u5730\u9EDE',\n  },\n  pl: {\n    layer_add_new_location: 'Dodaj now\u0105 lokalizacj\u0119',\n  },\n  fr: {\n    layer_add_new_location: 'Ajouter un site',\n  },\n  ja: {\n    layer_add_new_location: '\u65B0\u3057\u3044\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u8FFD\u52A0',\n  },\n  es: {\n    layer_add_new_location: 'Agregar nuevos sitios',\n  },\n  tr: {\n    layer_add_new_location: 'Yeni konum ekle',\n  },\n  it: {\n    layer_add_new_location: 'Aggiungi nuovo elemento',\n  },\n  th: {\n    layer_add_new_location: '\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E2A\u0E16\u0E32\u0E19\u0E17\u0E35\u0E48\u0E43\u0E2B\u0E21\u0E48',\n  },\n})\n\nexport default layer => {\n\n  if (typeof layer.draw !== 'object') return;\n\n  // Do not create the panel.\n  if (layer.draw.hidden) return;\n \n  const elements = Object.keys(layer.draw)\n    .map(key => {\n\n      // Return element from drawing method.\n      return mapp.ui.elements.drawing[key] && mapp.ui.elements.drawing[key](layer)\n    })\n    .filter(node => !!node)\n\n  // Short circuit panel creation without elements.\n  if (!elements.length) return;\n\n  const panel = mapp.ui.elements.drawer({\n    data_id: `draw-drawer`,\n    class: `raised ${layer.draw.classList || ''}`,\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_add_new_location}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`\n      ${elements}`,\n  });\n\n  return panel;\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_filter_header: 'Filter',\n    layer_filter_select: 'Select filter from list',\n    layer_filter_clear_all: 'Clear all filters',\n    layer_filter_greater_than: 'Greater than',\n    layer_filter_less_than: 'Less than',\n    layer_filter_set_filter: 'Set filter',\n  },\n  de: {\n    layer_filter_header: 'Filter',\n    layer_filter_select: 'Filter Auswahl',\n    layer_filter_clear_all: 'Entferne alle Filter',\n    layer_filter_greater_than: 'Mehr als',\n    layer_filter_less_than: 'Weniger als',\n    layer_filter_set_filter: 'Filter einstellen',\n  },\n  zh: {\n    layer_filter_header: '\u7B5B\u9009',\n    layer_filter_select: '\u4ECE\u5217\u8868\u7B5B\u9009',\n    layer_filter_clear_all: '\u6E05\u9664\u6240\u6709\u7B5B\u9009',\n    layer_filter_greater_than: '\u5927\u4E8E',\n    layer_filter_less_than: '\u5C0F\u4E8E',\n    layer_filter_set_filter: '\u8BBE\u7F6E\u7B5B\u9009',\n  },\n  zh_tw: {\n    layer_filter_header: '\u7BE9\u9078',\n    layer_filter_select: '\u5F9E\u5217\u8868\u7BE9\u9078',\n    layer_filter_clear_all: '\u6E05\u9664\u6240\u6709\u7BE9\u9078',\n    layer_filter_greater_than: '\u5927\u65BC',\n    layer_filter_less_than: '\u5C0F\u65BC',\n    layer_filter_set_filter: '\u8A2D\u7F6E\u7BE9\u9078',\n  },\n  pl: {\n    layer_filter_header: 'Filtruj',\n    layer_filter_select: 'Wybierz z listy',\n    layer_filter_clear_all: 'Wyczy\u015B\u0107 wszystkie filtry',\n    layer_filter_greater_than: 'Wi\u0119ksze ni\u017C',\n    layer_filter_less_than: 'Mniejsze ni\u017C',\n    layer_filter_set_filter: 'Ustaw filtr',\n  },\n  fr: {\n    layer_filter_header: 'Filtre',\n    layer_filter_select: 'S\u00E9lectionner un filtre de la liste',\n    layer_filter_clear_all: 'Enlever tous les filtres',\n    layer_filter_greater_than: 'Plus grand que',\n    layer_filter_less_than: 'Moins que',\n    layer_filter_set_filter: 'D\u00E9finir le filtre',\n  },\n  ja: {\n    layer_filter_header: '\u30D5\u30A3\u30EB\u30BF\u30FC',\n    layer_filter_select: '\u30EA\u30B9\u30C8\u304B\u3089\u30D5\u30A3\u30EB\u30BF\u30FC\u3092\u9078\u629E',\n    layer_filter_clear_all: '\u5168\u30D5\u30A3\u30EB\u30BF\u30FC\u3092\u30AF\u30EA\u30A2',\n    layer_filter_greater_than: '\u4EE5\u4E0A',\n    layer_filter_less_than: '\u4EE5\u4E0B',\n    layer_filter_set_filter: '\u30D5\u30A3\u30EB\u30BF\u30FC\u3092\u8A2D\u5B9A',\n  },\n  es: {\n    layer_filter_header: 'Filtro',\n    layer_filter_select: 'Seleccionar filtro de la lista',\n    layer_filter_clear_all: 'Anular todos los filtros',\n    layer_filter_greater_than: 'Mas grande que',\n    layer_filter_less_than: 'Menos que',\n    layer_filter_set_filter: 'Definir el filtro',\n  },\n  tr: {\n    layer_filter_header: 'Filtrele',\n    layer_filter_select: 'Listeden filtre sec',\n    layer_filter_clear_all: 'Tum filtreleri kaldir',\n    layer_filter_greater_than: 'Buyuktur',\n    layer_filter_less_than: 'Kucuktur',\n    layer_filter_set_filter: 'Filtreyi ayarla',\n  },\n  it: {\n    layer_filter_header: 'Filtro',\n    layer_filter_select: 'Seleziona filtro dalla lista',\n    layer_filter_clear_all: 'Elimina tutti i filtri',\n    layer_filter_greater_than: 'Maggiore di',\n    layer_filter_less_than: 'Minore di',\n    layer_filter_set_filter: 'Imposta filtro',\n  },\n  th: {\n    layer_filter_header: '\u0E01\u0E23\u0E2D\u0E07',\n    layer_filter_select: '\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E01\u0E23\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23',\n    layer_filter_clear_all: '\u0E25\u0E49\u0E32\u0E07\u0E15\u0E31\u0E27\u0E01\u0E23\u0E2D\u0E07\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14',\n    layer_filter_greater_than: '\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32',\n    layer_filter_less_than: '\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32',\n    layer_filter_set_filter: '\u0E15\u0E31\u0E49\u0E07\u0E04\u0E48\u0E32\u0E15\u0E31\u0E27\u0E01\u0E23\u0E2D\u0E07',\n  },\n})\n\nexport default layer => {\n\n  // Do not create the panel.\n  if (layer.filter.hidden) return;\n\n  // Layer without an infoj array of entries do not have a filter panel.\n  if (!layer.infoj) return;\n\n  layer.filter.list = layer.infoj\n    .filter(entry => entry.filter !== undefined)\n    .filter(entry => entry.field !== undefined)\n    .filter(entry => !layer.filter?.exclude?.includes(entry.field))\n    .filter(entry => !entry.skipEntry)\n    .map(entry => {\n\n      // The filter is defined as a string e.g. \"like\"\n      if (typeof entry.filter === 'string') {\n\n        // Create filter object with the filter key value as type.\n        entry.filter = {\n          type: entry.filter,\n          field: entry.field\n        }\n      }\n\n      // Assign entry.title as filter title if not explicit in filter config.\n      entry.filter.title ??= entry.title\n\n      // Assign entry.field as filter field if not explicit in filter config.\n      entry.filter.field ??= entry.field\n\n      return structuredClone(entry.filter)\n    })\n\n  if (!layer.filter.list.length) return;\n\n  const dropdown = mapp.ui.elements.dropdown({\n    data_id: `${layer.key}-filter-dropdown`,\n    placeholder: mapp.dictionary.layer_filter_select,\n    keepPlaceholder: true,\n    entries: layer.filter.list,\n    callback: async (e,filter) => {\n\n      \n      // Return if no interface method for the filter type exists.\n      if (!mapp.ui.layers.filters[filter.type]) return;\n\n      // Return if filter card already exists.\n      if (filter?.card) return;\n\n      // Display clear all button.\n      layer.filter.view.querySelector('[data-id=clearall]').style.display = 'block';\n      e.target.classList.add('selected')\n\n      filter.remove = () => {\n\n        // Delete filter for empty input.\n        if(layer.filter.current[filter.field]){\n          if(!layer.filter.current[filter.field][filter.type]){\n            delete layer.filter.current[filter.field]\n          }\n          else{\n            delete layer.filter.current[filter.field][filter.type]\n          }\n          if (layer.filter.current[filter.field] && !Object.keys(layer.filter.current[filter.field]).length) {\n            delete layer.filter.current[filter.field]\n          }\n        }\n        \n        delete filter.card\n        e.target.classList.remove('selected')\n\n        if (layer.style.legend) {\n          mapp.ui.layers.legends[layer.style.theme.type](layer)\n        }\n        \n        layer.reload();\n\n        // The changeEnd event will trigger dataview updates if set.\n        layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n\n        // Only show the clearall filter button when filter cards are displayed as children to the filter view.\n        layer.filter.view.querySelector('[data-id=clearall]').style.display = layer.filter.view.children.length === 3 ? 'none' : 'block';\n        \n      };\n\n      // Get interface content for filter card.\n      const content = [await mapp.ui.layers.filters[filter.type](layer, filter)].flat()\n\n      // Add meta element to beginning of contents array.\n      filter.meta && content.unshift(mapp.utils.html.node`<p>${filter.meta}`)\n\n      filter.card = layer.filter.view.appendChild(mapp.ui.elements.card({\n        header: filter.title,\n        close: filter.remove,\n        content\n      }))\n    }\n  })\n\n  const clearAll = mapp.utils.html`\n    <button\n      data-id=clearall\n      class=\"primary-colour\"\n      style=\"display: none; margin-bottom: 5px;\"\n      onclick=${e => {\n      layer.filter.list\n        .filter((filter) => filter.card)\n        .forEach(filter => {\n          filter.card.querySelector('[data-id=close]').click()\n        })\n\n    }}>${mapp.dictionary.layer_filter_clear_all}`\n\n  layer.filter.view = mapp.ui.elements.drawer({\n    data_id: `filter-drawer`,\n    class: `raised ${layer.filter.classList || ''}`,\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_filter_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`\n      ${dropdown}\n      ${clearAll}`\n  })\n\n  return layer.filter.view\n}\n", "export default layer => {\n\n  const gazetteer = Object.assign({\n    mapview: layer.mapview,\n    target: mapp.utils.html.node`<div>`,\n    layer: layer.key\n  }, layer.gazetteer)\n\n  mapp.ui.Gazetteer(gazetteer);\n  \n  return gazetteer.target\n}", "/**\n## ui/layers/panels/dataviews\n\nThe dataviews panel module exports the dataviews method.\n\n@requires /ui/Dataview\n\n@module /ui/layers/panels/dataviews\n*/\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_dataview_header: 'Data Views',\n  },\n  de: {\n    layer_dataview_header: 'Datenansichten',\n  },\n  zh: {\n    layer_dataview_header: '\u663E\u793A\u6570\u636E',\n  },\n  zh_tw: {\n    layer_dataview_header: '\u986F\u793A\u6578\u64DA',\n  },\n  pl: {\n    layer_dataview_header: 'Widok danych',\n  },\n  fr: {\n    layer_dataview_header: 'Voir les donn\u00E9es',\n  },\n  ja: {\n    layer_dataview_header: '\u30C7\u30FC\u30BF\u30D3\u30E5\u30FC',\n  },\n  es: {\n    layer_dataview_header: 'Ver los datos',\n  },\n  tr: {\n    layer_dataview_header: 'Veri gorunumleri',\n  },\n  it: {\n    layer_dataview_header: 'Visualizzazione dei dati',\n  },\n  th: {\n    layer_dataview_header: '\u0E21\u0E38\u0E21\u0E21\u0E2D\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25',\n  },\n})\n\n/**\n@function dataviews\n\n@description\n### mapp.ui.layers.panels.dataviews(layer)\n\nThe dataviews method returns a drawer with checkbox elements for each dataview object in `layer.dataviews{}`.\n\nThe dataviews will be decorated with the `mapp.ui.Dataview()` method.\n\n@param {layer} layer The decorated mapp layer object.\n@property {Object} dataviews The layer dataviews.\n\n@return {HTMLElement}\n*/\n\nexport default function dataviews(layer) {\n  \n  // Create chkbox controls for each dataview entry.\n  const dataviewChkboxes = Object.entries(layer.dataviews).map(entry => {\n\n    // The layer.dataviews{} object may include a hide flag.\n    if (typeof entry[1] !== 'object') return;\n\n    // Assign key, host, and layer to dataview object.\n    const dataview = Object.assign(entry[1],\n      {\n        key: entry[0],\n        host: layer.mapview.host,\n        layer,\n      })\n\n    // Find tabview element from data-id attribute.\n    dataview.tabview = document.querySelector(`[data-id=${dataview.target}]`)\n\n    // Return if the named tabview is not found in document.\n    if (!dataview.tabview) return;\n\n    // Assign target html element for dataview.\n    dataview.target = mapp.utils.html.node`<div class=\"dataview-target\">`\n\n    // Assign label for dataview.chkbox\n    dataview.label ??= dataview.title || dataview.key\n\n    dataview.show ??= () => {\n\n      // Create tab after dataview creation is complete.\n      dataview.tabview.dispatchEvent(new CustomEvent('addTab', {\n        detail: dataview\n      }))\n\n      // Show the dataview tab.\n      dataview.show()\n    }\n\n    dataview.hide ??= () => {\n\n      dataview.display = false\n\n      dataview.remove()\n    }\n\n    if (mapp.ui.Dataview(dataview) instanceof Error) return;\n\n    // Display dataview if layer and dv have display flag.\n    layer.display\n      && dataview.display\n      && dataview.show()\n\n    layer.showCallbacks.push(()=>{\n      dataview.display && dataview.show()\n    })\n\n    return dataview.chkbox\n  })\n\n  // The dataviews are created but no panel is returned.\n  if (layer.dataviews.hide) return;\n\n  // Create a drawer with the dataview chkbox controls.\n  const drawer = mapp.ui.elements.drawer({\n    data_id: `dataviews-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_dataview_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`${dataviewChkboxes.filter(dv => !!dv)}`\n  })\n\n  return drawer\n}\n", "export default layer => {\n\n  // Create chkbox controls for each dataview entry.\n  const reportLinks = Object.keys(layer.reports).map(key => {\n\n    const report = layer.reports[key]\n  \n    report.key = key\n  \n    report.host = layer.mapview.host\n  \n    const href = `${report.host}/view?${mapp.utils.paramString({\n      template: report.template,\n      locale: layer.mapview.locale.key,\n      lat: mapp.hooks.current?.lat,\n      lng: mapp.hooks.current?.lng,\n      z: mapp.hooks.current?.z,\n    })}`;\n  \n    return mapp.utils.html`\n      <a\n        class=\"link-with-img\"\n        target=\"_blank\"\n        href=\"${href}\">\n        <div class=\"mask-icon event-note\"></div>\n        <span>${report.title || report.key}`;\n  \n  });\n  \n  // Create a drawer with the dataview chkbox controls.\n  const drawer = mapp.ui.elements.drawer({\n    data_id: `reports-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>Reports</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`${reportLinks}`\n  })\n  \n  return drawer\n}", "/**\n### /ui/layers/panels/style\n\nThe style panel module exports the stylePanel method for the `mapp.ui.layers.panels{}` library object.\n\n@requires /ui/elements/drawer\n\n@module /ui/layers/panels/style\n*/\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_style_header: 'Style',\n    layer_style_select_theme: 'Select thematic style',\n    layer_style_display_labels: 'Display labels',\n    layer_style_display_hover: 'Enable hover',\n    layer_style_switch_caption: 'Click on labels to switch visibility or',\n    layer_style_switch_all: 'switch all',\n    layer_grid_legend_ratio: 'Display colour as a ratio to the size',\n    layer_style_cluster: 'Multiple locations',\n  },\n  de: {\n    layer_style_header: 'Stil',\n    layer_style_select_theme: 'Auswahl eines thematischen Stiles',\n    layer_style_display_labels: 'Umschalten der Label Ansicht',\n    layer_style_display_hover: 'Hover Einschalten',\n    layer_style_switch_caption: 'Auswahl der Label schaltet Ansicht um oder',\n    layer_style_switch_all: 'Alle ausw\u00E4hlen',\n    layer_grid_legend_ratio: 'Farbe im Verh\u00E4ltnis zur Gr\u00F6\u00DFe',\n    layer_style_cluster: 'Mehrere Lagen',\n  },\n  zh: {\n    layer_style_header: '\u98CE\u683C',\n    layer_style_select_theme: '\u9009\u62E9\u4E3B\u9898\u98CE\u683C',\n    layer_style_display_labels: '\u663E\u793A\u6807\u7B7E',\n    layer_style_display_hover: '\u542F\u7528\u60AC\u505C',\n    layer_style_switch_caption: '\u5355\u51FB\u6807\u7B7E\u5207\u6362\u53EF\u89C1\u6027',\n    layer_style_switch_all: '\u5168\u90E8\u5207\u6362\uFF08\u5F00\u5173\uFF09',\n    layer_grid_legend_ratio: '\u989C\u8272\u968F\u56FE\u70B9\u5927\u5C0F\u5448\u6BD4\u4F8B\u53D8\u5316',\n    layer_style_cluster: '\u591A\u4E2A\u5730\u70B9',\n  },\n  zh_tw: {\n    layer_style_header: '\u98A8\u683C',\n    layer_style_select_theme: '\u9078\u64C7\u4E3B\u984C\u98A8\u683C',\n    layer_style_display_labels: '\u986F\u793A\u6A19\u7C64',\n    layer_style_display_hover: '\u555F\u7528\u61F8\u505C',\n    layer_style_switch_caption: '\u6309\u4E00\u4E0B\u6A19\u7C64\u5207\u63DB\u53EF\u898B\u6027',\n    layer_style_switch_all: '\u5168\u90E8\u5207\u63DB\uFF08\u958B\u95DC\uFF09',\n    layer_grid_legend_ratio: '\u984F\u8272\u96A8\u5716\u9EDE\u5927\u5C0F\u5448\u6BD4\u4F8B\u8B8A\u5316',\n    layer_style_cluster: '\u591A\u500B\u5730\u9EDE',\n  },\n  pl: {\n    layer_style_header: 'Styl',\n    layer_style_select_theme: 'Wybierz styl tematyczny',\n    layer_style_display_labels: 'Wy\u015Bwietl etykiety',\n    layer_style_display_hover: 'Wy\u015Bwietl etykiety pod kursorem',\n    layer_style_switch_caption: 'Kliknij na etykiet\u0119 aby w\u0142\u0105czy\u0107 widzialno\u015B\u0107 lub',\n    layer_style_switch_all: 'w\u0142\u0105cz wszystkie',\n    layer_grid_legend_ratio: 'Wy\u015Bwietlaj kolory jako stosunek do wielko\u015Bci',\n    layer_style_cluster: 'Lokalizacje wielkokrotne',\n  },\n  fr: {\n    layer_style_header: 'Style',\n    layer_style_select_theme: 'S\u00E9lectionner le style de th\u00E9matique',\n    layer_style_display_labels: 'Afficher les \u00E9tiquettes',\n    layer_style_display_hover: 'Afficher via le curseur',\n    layer_style_switch_caption: 'Cliquez sur les \u00E9tiquettes pour changer de visibilit\u00E9 ou',\n    layer_style_switch_all: 'changer pour tous',\n    layer_grid_legend_ratio: 'Afficher la couleur en fonction de la taille',\n    layer_style_cluster: 'Emplacements multiples',\n  },\n  ja: {\n    layer_style_header: '\u30B9\u30BF\u30A4\u30EB',\n    layer_style_select_theme: '\u30C6\u30FC\u30DE\u30B9\u30BF\u30A4\u30EB\u3092\u9078\u629E',\n    layer_style_display_labels: '\u30E9\u30D9\u30EB\u3092\u8868\u793A',\n    layer_style_display_hover: '\u30DB\u30D0\u30EA\u30F3\u30B0\u3092\u3092\u6709\u52B9\u306B\u3059\u308B',\n    layer_style_switch_caption: '\u8868\u793A\u5207\u66FF\u3048\u306B\u306F\u5404\u30E9\u30D9\u30EB\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u304B',\n    layer_style_switch_all: '\u5168\u3066\u3092\u5909\u66F4',\n    layer_grid_legend_ratio: '\u30B5\u30A4\u30BA\u306B\u5BFE\u3059\u308B\u8272\u3092\u6BD4\u7387\u3067\u8868\u793A\u3057\u307E\u3059',\n    layer_style_cluster: '\u591A\u6570\u306E\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3',\n  },\n  es: {\n    layer_style_header: 'Estilo',\n    layer_style_select_theme: 'Seleccionar estilo tem\u00E1tico',\n    layer_style_display_labels: 'Mostrar etiquetas',\n    layer_style_display_hover: 'Ver a trav\u00E9s del curso',\n    layer_style_switch_caption: 'Clic en las etiquetas para cambiar la visibilidad o',\n    layer_style_switch_all: 'Cambiar todo',\n    layer_grid_legend_ratio: 'Mostrar el color como una relaci\u00F3n con el tama\u00F1o',\n    layer_style_cluster: 'M\u00FAltiples localizaciones',\n  },\n  tr: {\n    layer_style_header: 'Stil',\n    layer_style_select_theme: 'Tematik stil sec',\n    layer_style_display_labels: 'Etiketleri goster',\n    layer_style_display_hover: 'Imlec uzerindeyken goster',\n    layer_style_switch_caption: 'Gorunurlugu degistirmek icin etikete tiklayiniz veya',\n    layer_style_switch_all: 'Hepsini degistir',\n    layer_grid_legend_ratio: 'Rengi boyuta orantili goster',\n    layer_style_cluster: 'Coklu konum',\n  },\n  it: {\n    layer_style_header: 'Stile',\n    layer_style_select_theme: 'Seleziona lo stile tematico',\n    layer_style_display_labels: 'Mostrare etichette',\n    layer_style_display_hover: 'Mostra tramite il cursore',\n    layer_style_switch_caption: 'Clicca sull etichetta per cambiare viibilit\u00E0 o',\n    layer_style_switch_all: 'Cambiare tutto',\n    layer_grid_legend_ratio: 'Visualizza il colore proporzionale alla dimensione',\n    layer_style_cluster: 'Localit\u00E0 multiple',\n  },\n  th: {\n    layer_style_header: '\u0E2A\u0E44\u0E15\u0E25\u0E4C',\n    layer_style_select_theme: '\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2A\u0E44\u0E15\u0E25\u0E4C\u0E43\u0E08\u0E04\u0E27\u0E32\u0E21',\n    layer_style_display_labels: '\u0E41\u0E2A\u0E14\u0E07\u0E09\u0E25\u0E32\u0E01',\n    layer_style_display_hover: '\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E42\u0E2E\u0E40\u0E27\u0E2D\u0E23\u0E4C',\n    layer_style_switch_caption: '\u0E04\u0E25\u0E34\u0E01\u0E17\u0E35\u0E48\u0E1B\u0E49\u0E32\u0E22\u0E01\u0E33\u0E01\u0E31\u0E1A\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E2A\u0E25\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E21\u0E2D\u0E07\u0E40\u0E2B\u0E47\u0E19\u0E2B\u0E23\u0E37\u0E2D',\n    layer_style_switch_all: '\u0E2A\u0E25\u0E31\u0E1A\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14',\n    layer_grid_legend_ratio: '\u0E41\u0E2A\u0E14\u0E07\u0E2A\u0E35\u0E40\u0E1B\u0E47\u0E19\u0E2D\u0E31\u0E15\u0E23\u0E32\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E48\u0E2D\u0E02\u0E19\u0E32\u0E14',\n    layer_style_cluster: '\u0E2B\u0E25\u0E32\u0E22\u0E41\u0E2B\u0E48\u0E07',\n  },\n})\n\n/**\n@function stylePanel\n\n@description\nThe stylePanel method will shortcircuit `layer.style{}` configuration has a `hidden` flag.\n\nThe method assembles the individual style UI elements in a content array for the style panel drawer.\n\n@param {layer} layer A decorated mapp layer with a style object.\n@property {Object} layer.style The layer style configuration.\n*/\n\nexport default function stylePanel(layer) {\n\n  // Do not create the panel.\n  if (layer.style.hidden) return;\n\n  const content = []\n\n  // Handle setLabel and labels in layer style.\n  if (layer.style.theme?.setLabel && layer.style.labels) {\n    layer.style.label = layer.style.labels[layer.style.theme.setLabel];\n  }\n\n  // Handle setHover and hovers in layer style.\n  if (layer.style.theme?.setHover && layer.style.hovers) {\n    layer.style.hover = layer.style.hovers[layer.style.theme.setHover];\n  }\n\n  if (layer.style.opacitySlider) {\n\n    content.push(mapp.ui.elements.slider({\n      label: 'Change layer opacity:',\n      min: 0,\n      max: 100,\n      val: parseInt(layer.L.getOpacity() * 100),\n      callback: e => {\n        layer.L.setOpacity(parseFloat(e.target.value / 100))\n      }\n    }))\n  }\n\n  if (layer.style.scaleSlider) {\n\n    content.push(mapp.ui.elements.slider({\n      label: 'Change icon scale:',\n      min: layer.style.scaleSlider.min,\n      max: layer.style.scaleSlider.max,\n      step: layer.style.scaleSlider.step,\n      val: layer.style.default.icon.scale,\n      callback: e => {\n        layer.style.default.icon.scale = e.target.value\n        layer.L.changed()\n      }\n    }))\n  }\n\n  if (layer.style.hover && !layer.style.hover.hidden) {\n\n    // Add checkbox to toggle label display.\n    layer.style.hoverCheckbox = mapp.ui.elements.chkbox({\n      data_id: 'hoverCheckbox',\n      label: layer.style.hovers && mapp.dictionary.layer_style_display_hover\n        || layer.style.hover.title || mapp.dictionary.layer_style_display_hover,\n      checked: !!layer.style.hover.display,\n      onchange: (checked) => {\n        layer.style.hover.display = checked\n      }\n    })\n\n    content.push(layer.style.hoverCheckbox)\n\n    if (Object.keys(layer.style.hovers || 0).length > 1) {\n\n      // Add dropdown to switch label.\n      content.push(mapp.ui.elements.dropdown({\n        placeholder: layer.style.hover.title,\n        entries: Object.keys(layer.style.hovers)\n           // Check if that label is set to be hidden. \n           .filter(key => !layer.style.hovers[key].hidden)\n           .map(key => ({\n          title: layer.style.hovers[key].title || key,\n          option: key\n        })),\n        callback: (e, entry) => {\n\n          const display = layer.style.hover.display\n\n          // Set hover from dropdown option.\n          layer.style.hover = layer.style.hovers[entry.option]\n\n          // Assign default featureHover method if non is provided.\n          layer.style.hover.method ??= mapp.layer.featureHover;\n\n          layer.style.hover.display = display\n        }\n      }))\n    }\n  }\n\n  if (layer.style.label && !layer.style.label.hidden) {\n\n    // Add checkbox to toggle label display.\n    layer.style.labelCheckbox = mapp.ui.elements.chkbox({\n      data_id: 'labelCheckbox',\n      label: layer.style.labels && mapp.dictionary.layer_style_display_labels\n        || layer.style.label.title || mapp.dictionary.layer_style_display_labels,\n      checked: !!layer.style.label.display,\n      onchange: (checked) => {\n        layer.style.label.display = checked\n        layer.reload()\n      }\n    })\n\n    content.push(layer.style.labelCheckbox)\n\n    if (Object.keys(layer.style.labels || 0).length > 1) {\n\n      content.push(mapp.ui.elements.dropdown({\n        placeholder: layer.style.label.title,\n        entries: Object.keys(layer.style.labels)\n          // Check if that label is set to be hidden. \n          .filter(key => !layer.style.labels[key].hidden)\n          .map(key => ({\n            title: layer.style.labels[key].title || key,\n            option: key\n          })),\n        callback: (e, entry) => {\n\n          const display = layer.style.label.display\n\n          // Set label from dropdown option.\n          layer.style.label = layer.style.labels[entry.option]\n\n          layer.style.label.display = display\n\n          layer.reload()\n        }\n      }))\n    }\n  }\n\n  // Add zoom level check for label display\n  layer.style.label && layer.mapview.Map.getTargetElement().addEventListener('changeEnd', () => {\n    const z = layer.mapview.Map.getView().getZoom();\n\n    if (z <= layer.style.label.minZoom || z >= layer.style.label.maxZoom) {\n      layer.style.labelCheckbox?.classList.add('disabled');\n    } else {\n      layer.style.labelCheckbox?.classList.remove('disabled');\n    }\n  });\n\n  // Add theme control\n  if (Object.keys(layer.style.themes || 0).length > 1) {\n\n    content.push(mapp.utils.html`\n      <div>${mapp.dictionary.layer_style_select_theme}</div>\n        ${mapp.ui.elements.dropdown({\n      placeholder: layer.style.theme.title,\n      entries: Object.keys(layer.style.themes).map(key => ({\n        title: layer.style.themes[key].title || key,\n        option: key\n      })),\n      callback: (e, entry) => {\n\n        // Set theme from dropdown option.\n        layer.style.theme = layer.style.themes[entry.option]\n\n        if (layer.style.theme.setLabel && layer.style.labels) {\n\n          layer.style.label = layer.style.labels[layer.style.theme.setLabel]\n        }\n\n        if (layer.style.theme.setHover && layer.style.hovers) {\n\n          layer.style.hover = layer.style.hovers[layer.style.theme.setHover]\n\n          // Assign default featureHover method if non is provided.\n          layer.style.hover.method ??= mapp.layer.featureHover;\n        }\n\n        const stylePanel = mapp.ui.layers.panels.style(layer)\n\n        // Replace the children of the style panel.\n        layer.view.querySelector('[data-id=style-drawer]')\n          .replaceChildren(...stylePanel.children)\n\n        layer.reload()\n      }\n    })}`)\n  } else if (layer.style.theme?.title) {\n\n    // Add theme title before legend.\n    content.push(mapp.utils.html`\n      <h3>${layer.style.theme.title}`)\n\n  }\n\n  if (layer.style.theme?.meta) {\n    content.push(mapp.utils.html`<p>${layer.style.theme.meta}`)\n  }\n\n  if (Object.hasOwn(mapp.ui.layers.legends, layer.style.theme?.type)) {\n\n    mapp.ui.layers.legends[layer.style.theme?.type](layer)\n\n    layer.style.legend && content.push(layer.style.legend)\n  }\n\n  // There are no elements for the style panel.\n  if (!content.length) return;\n\n  const header = mapp.utils.html`\n    <h3>${mapp.dictionary.layer_style_header}</h3>\n    <div class=\"mask-icon expander\">`\n\n  // Create a drawer for multiple panel elements on content array.\n  layer.style.drawer = mapp.ui.elements.drawer({\n    data_id: `style-drawer`,\n    class: `raised ${layer.style.classList || ''}`,\n    header,\n    content\n  })\n\n  return layer.style.drawer\n}", "/**\n### /ui/layers/legends/categorized\n\nThe categorized theme legend module exports the categorizedTheme to the `ui.layers.legend{}` library object.\n\n@requires /ui/elements/legendIcon\n\n@module /ui/layers/legends/categorized\n*/\n\n/**\n@function categorizedTheme\n\n@description\nThe categorizedTheme method creates and returns a categorized theme legend for the current layer.style.theme.\n\n@param {layer} layer The decorated mapp layer.\n\n@returns {HTMLElement} The categorized theme legend element.\n*/\n\nexport default function categorizedTheme(layer) {\n\n  const theme = layer.style.theme\n\n  theme.legend ??= {}\n\n  theme.legend.grid = []\n\n  // Make 'left' default alignment.\n  theme.legend.alignContents ??= 'left'\n  theme.legend.alignContents += ' contents'\n\n  let timeout;\n\n  // Switch all control\n  theme.legend.switch = theme.field && layer.filter && mapp.utils.html`\n    <div\n      class=\"switch-all\"\n      style=\"grid-column: 1/3;\">\n      ${mapp.dictionary.layer_style_switch_caption}\n      <button\n        class=\"primary-colour bold\"\n        onclick=${e => {\n\n          let allSwitches = [...e.target.closest('.legend').querySelectorAll('.switch')];\n          let disabledSwitches = allSwitches.filter((switch_) => switch_.classList.contains('disabled'));\n\n          if (disabledSwitches.length == 0 || disabledSwitches.length == allSwitches.length) {\n\n            // if all switches are either enabled or disabled, click on all \n            allSwitches.forEach(switch_ => switch_.click());\n\n          } else {\n\n            // if only some of them are enabled, click only on disabled ones\n            disabledSwitches.forEach(switch_ => switch_.click());\n          }\n\n        }}>${mapp.dictionary.layer_style_switch_all}\n      </button>.`\n\n  theme.categories.forEach(cat => {\n\n    const field = cat.field || theme.field\n\n    // Check whether cat is in current filter.\n    cat.disabled = layer.filter?.current[field]?.ni?.indexOf(cat.value) >= 0\n\n    if (layer.featureFields && theme.distribution === 'count') {\n      cat.count = layer.featureFields[field]?.[cat.value]\n\n      if (!cat.disabled && !cat.count) return;\n    }\n\n    let catLegendIcon = mapp.ui.elements.legendIcon({\n      width: 24,\n      height: 24,\n      ...cat.style\n    })\n\n    // Cat icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 24px; width: 24px; grid-column: 1;\">\n        ${catLegendIcon}`;\n\n    let classList = `label ${layer.filter && 'switch' ||''} ${cat.disabled &&  'disabled' ||''}`;\n\n    let cat_label = cat.label + (cat.count? ` [${cat.count}]`:'')\n\n    // Cat label with filter function.\n    let label = mapp.utils.html`\n      <div\n        class=${classList}\n        style=\"grid-column: 2;\"\n        onclick=${e => {\n\n          if (!layer.filter) return;\n\n          const filter = layer.filter.list?.find(f => f.type === 'ni' && f.field === field)\n\n          e.target.classList.toggle('disabled')\n\n          // Add cat value to current NI (not in) field filter.\n          if (e.target.classList.contains('disabled')) {\n\n            // Create empty field filter object if non exists.\n            if (!layer.filter.current[field]) {\n              layer.filter.current[field] = {}\n            }\n\n            // Create empty NI filter array for field if non exists.\n            if (!layer.filter.current[field].ni) {\n              layer.filter.current[field].ni = []\n            }\n\n            // Push cat value into the NI filter array.\n            layer.filter\n              .current[field].ni\n              .push(cat.keys || cat.value)\n           \n            // Flatten the filter in case of arrays filter.\n            layer.filter\n              .current[field].ni = layer.filter.current[field].ni.flat()\n\n          // Remove cat value from current NI field filter.\n          } else {\n\n            if (Array.isArray(cat.keys)) {\n\n              cat.keys.forEach(key => {\n\n                // Splice key out of the NI array.\n                layer.filter\n                  .current[field].ni\n                  .splice(layer.filter.current[field].ni.indexOf(key), 1)\n\n              })\n\n            } else {\n\n              // Splice value out of the NI array.\n              layer.filter\n                .current[field].ni\n                .splice(layer.filter.current[field].ni.indexOf(cat.value), 1)\n\n            }\n \n            // Delete current field filter if NI array is empty.\n            if (!layer.filter.current[field].ni.length) {\n              delete layer.filter.current[field].ni\n              if (!Object.keys(layer.filter.current[field]).length) {\n                delete layer.filter.current[field]\n              }\n            }\n          }\n\n          if (timeout) clearTimeout(timeout)\n\n          timeout = setTimeout(async () => {\n\n            if (filter?.card) {\n\n              filter.card\n                .querySelector('.filter')\n                .replaceWith(await mapp.ui.layers.filters[filter.type](layer, filter))\n            }\n\n            // theme flag is set in styles or theme.\n            (layer.style.filter || theme.filter)\n              ? layer.L.changed()\n              : layer.reload()\n\n          }, 400)\n\n        }}>${cat_label}`\n\n    cat.node = mapp.utils.html.node`<div \n      data-id=${cat.value}\n      class=\"${theme.legend.alignContents}\">\n      ${icon}${label}`\n\n    // Push icon and label into legend grid.\n    theme.legend.grid.push(cat.node)\n  })\n\n  // Attach row for cluster locations.\n  if (layer.style.cluster) {\n\n    // Create cluster icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 40px; width: 40px;\">\n        ${mapp.ui.elements.legendIcon({\n          width: 40,\n          height: 40,\n          icon: layer.style.cluster.icon\n        })}`\n   \n    // Create cluster label.\n    let label = mapp.utils.html`\n      <div\n        class=\"label\">\n        ${mapp.dictionary.layer_style_cluster}`\n\n    // Push icon and label into legend grid.\n    theme.legend.grid.push(mapp.utils.html`<div \n      data-id=\"cluster\"\n      class=${theme.legend.alignContents}>\n      ${icon}${label}`)\n  }\n\n  // Default layout to 'grid'\n  theme.legend.layout ??= 'grid'\n\n  theme.legend.node = mapp.utils.html.node`\n    <div class=\"legend\">\n      ${theme.legend.switch || ''}\n      <div class=${`contents-wrapper ${theme.legend.layout}`}>\n        ${theme.legend.grid}`\n\n  layer.style.legend ??= theme.legend.node\n\n  if (layer.style.legend) {\n\n    layer.style.legend.replaceChildren(...theme.legend.node.children)\n  }\n\n  return theme.legend.node;\n}\n", "/**\n### /ui/layers/legends/graduated\n\nThe graduated theme legend module exports the graduatedTheme to the `ui.layers.legend{}` library object.\n\n@requires /ui/elements/legendIcon\n\n@module /ui/layers/legends/graduated\n*/\n\n/**\n@function graduatedTheme\n\n@description\nThe graduatedTheme method creates a `catElements[]` array with icons for each graduated theme category. The elements array is passed into a legend element assigned as `layer.style.legend` and returned from the method.\n\n@param {layer} layer The decorated mapp layer.\n\n@returns {HTMLElement} The graduated theme legend element.\n*/\n\nexport default function graduatedTheme(layer) {\n\n  const theme = layer.style.theme\n\n  theme.legend ??= {}\n\n  const catElements = theme.categories\n    .filter(cat => cat.value !== undefined)\n    .map(cat => {\n\n      const catClass = `contents ${theme.legend?.horizontal ? 'horizontal' : ''}`\n\n      const catIcon = mapp.ui.elements.legendIcon({\n        width: 24,\n        height: 24,\n        ...cat.style\n      })\n\n      cat.label ??= cat.value\n\n      return mapp.utils.html`<div \n        data-id=${cat.value}\n        class=${catClass}>\n        <div style=\"height: 24px; width: 24px; grid-column: 1;\">\n          ${catIcon}\n        </div>\n        <div class=\"label\" style=\"grid-column: 2;\">\n          ${cat.label}\n        </div>`\n    })\n\n  const classList = `contents-wrapper ${theme.legend?.layout || 'grid'} ${theme.legend?.nowrap ? 'nowrap' : ''}`    \n\n  theme.legend.node = mapp.utils.html.node`\n    <div class=\"legend\">\n      <div class=${classList}>\n        ${catElements}\n      </div>`\n\n  layer.style.legend ??= theme.legend.node\n\n  if (layer.style.legend) {\n\n    layer.style.legend.replaceChildren(...theme.legend.node.children)\n  }\n\n  return theme.legend.node;\n}", "/**\n### /ui/layers/legends/basic\n\nThe basic theme legend module exports the basicTheme to the `ui.layers.legend{}` library object.\n\n@requires /ui/elements/legendIcon\n\n@module /ui/layers/legends/basic\n*/\n\n/**\n@function basicTheme\n\n@description\nThe basicTheme method creates and returns a basic theme legend for the current layer.style.theme.\n\n@param {layer} layer The decorated mapp layer.\n\n@returns {HTMLElement} The categorized theme legend element.\n*/\n\nexport default function basicTheme(layer) {\n\n  const theme = layer.style.theme\n\n  theme.legend ??= {}\n\n  theme.legend.grid = []\n\n  // Make 'left' default alignment.\n  theme.legend.alignContents ??= 'left'\n  theme.legend.alignContents += ' contents'\n\n  layer.style.theme.style ??= {}\n  layer.style.theme.style.width ??= 24\n  layer.style.theme.style.height ??= 24\n\n  const legendIcon = mapp.ui.elements.legendIcon(layer.style.theme.style)\n\n  const icon = mapp.utils.html`<div>${legendIcon}`;\n\n  theme.legend.grid.push(mapp.utils.html`\n    <div \n      class=\"contents\">\n      ${icon}<div class=\"label\" style=\"grid-column: 2\";>${layer.style.theme.label}`)\n\n  theme.legend.node = mapp.utils.html.node`\n    <div class=\"legend\">\n    <div class=\"contents-wrapper grid\">${theme.legend.grid}`\n\n  if (layer.style.legend) {\n\n    layer.style.legend.replaceChildren(...theme.legend.node.children)\n  }\n\n  return theme.legend.node;\n}", "/**\n## /ui/layers\n\n@module /ui/layers\n*/\n\nimport view from './view.mjs'\n\nimport listview from './listview.mjs'\n\nimport filters from './filters.mjs'\n\n// Panels\nimport meta from './panels/meta.mjs'\n\nimport draw from './panels/draw.mjs'\n\nimport filter from './panels/filter.mjs'\n\nimport gazetteer from './panels/gazetteer.mjs'\n\nimport dataviews from './panels/dataviews.mjs'\n\nimport reports from './panels/reports.mjs'\n\nimport style from './panels/style.mjs'\n\n// Styles\nimport categorized from './legends/categorized.mjs'\n\nimport graduated from './legends/graduated.mjs'\n\nimport basic from './legends/basic.mjs'\n\nexport default {\n  view,\n  listview,\n  filters,\n  panels: {\n    meta,\n    draw,\n    style,\n    filter,\n    gazetteer,\n    reports,\n    dataviews\n  },\n  legends: {\n    categorized,\n    graduated,\n    basic,\n  },\n  styles: {\n    categorized: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return categorized(layer)},\n    graduated: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return graduated(layer)},\n    grid: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return grid(layer)},\n    basic: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return basic(layer)},\n  }\n}", "/**\n@module /ui/locations/view\n*/\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    location_zoom: 'Zoom map to feature bounds',\n    location_save: 'Save changes to cloud',\n    location_remove: 'Remove feature from selection',\n    location_delete: 'Delete location',\n    location_save_changes: 'Save your changes to this location?',\n    location_close_without_save: 'Close location without saving changes?'\n  },\n  de: {\n    location_zoom: 'Ansicht den Lagen Geometrien anpassen',\n    location_save: 'Speichern der Daten\u00E4nderungen',\n    location_remove: 'Lagen Auswahl aufheben',\n    location_delete: 'L\u00F6schen der Lage',\n    location_save_changes: 'Ihre \u00C4nderungen an dieser Lage speichern?',\n  },\n  zh: {\n    location_zoom: '\u5730\u56FE\u7F29\u653E\u81F3\u8981\u7D20\u8FB9\u754C',\n    location_save: '\u4FDD\u5B58\u66F4\u6539\u5E76\u4E0A\u4F20\u81F3\u4E91\u7AEF',\n    location_remove: '\u5220\u9664\u5DF2\u9009\u8981\u7D20',\n    location_delete: '\u5220\u9664\u4F4D\u7F6E\u70B9',\n    location_save_changes: '\u4FDD\u5B58\u5BF9\u6B64\u4F4D\u7F6E\u7684\u66F4\u6539\u5417\uFF1F',\n  },\n  zh_tw: {\n    location_zoom: '\u5730\u5716\u7E2E\u653E\u81F3\u8981\u7D20\u908A\u754C',\n    location_save: '\u4FDD\u5B58\u66F4\u6539\u4E26\u4E0A\u50B3\u81F3\u96F2\u7AEF',\n    location_remove: '\u522A\u9664\u5DF2\u9078\u8981\u7D20',\n    location_delete: '\u522A\u9664\u4F4D\u7F6E\u9EDE',\n    location_save_changes: '\u4FDD\u5B58\u5C0D\u6B64\u4F4D\u7F6E\u7684\u66F4\u6539\u55CE\uFF1F',\n  },\n  pl: {\n    location_zoom: 'Przybli\u017C do granic warstwy',\n    location_save: 'Zapisz zmiany w chmurze',\n    location_remove: 'Usu\u0144 funkcj\u0119 z wyboru',\n    location_delete: 'Usu\u0144 lokalizacj\u0119',\n    location_save_changes: 'Czy zapisac zmiany dla tej lokalizacji',\n  },\n  fr: {\n    location_zoom: 'Zoomer sur les contours',\n    location_save: 'Enregistrer les modifications',\n    location_remove: 'Supprimer depuis la s\u00E9lection',\n    location_delete: 'Supprimer l\\'emplacement',\n    location_save_changes: 'Sauvegarder les modifications pour ce site ?',\n  },\n  ja: {\n    location_zoom: '\u30D5\u30A3\u30FC\u30C1\u30E3\u7BC4\u56F2\u306B\u306F\u30DE\u30C3\u30D7\u3092\u30BA\u30FC\u30E0',\n    location_save: '\u30AF\u30E9\u30A6\u30C9\u306B\u5909\u66F4\u3092\u4FDD\u5B58',\n    location_remove: '\u9078\u629E\u304B\u3089\u30D5\u30A3\u30FC\u30C1\u30E3\u30FC\u3092\u524A\u9664',\n    location_delete: '\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u524A\u9664',\n    location_save_changes: '\u3053\u306E\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u5909\u66F4\u3092\u4FDD\u5B58',\n  },\n  es: {\n    location_zoom: 'Ampliar los contornos del objeto.',\n    location_save: 'Registrar modificaciones',\n    location_remove: 'Eliminar de la selecci\u00F3n',\n    location_delete: 'Eliminar ubicaci\u00F3n',\n    location_save_changes: '\u00BFGuardar los cambios en esta ubicaci\u00F3n?',\n  },\n  tr: {\n    location_zoom: 'Haritada sekil sinirlarina yaklas',\n    location_save: 'Degisiklikleri buluta kaydet',\n    location_remove: 'Sekli secilenlerden cikar',\n    location_delete: 'Konumu sil',\n    location_save_changes: 'Konum degisikliklerini kaydetmek ister misiniz?',\n  },\n  it: {\n    location_zoom: 'Zoom sull\\'elemento',\n    location_save: 'Salva le modifiche',\n    location_remove: 'Rimuovere elemento dalla selezione',\n    location_delete: 'Elimina localit\u00E0',\n    location_save_changes: 'Vuoi salvare le modifiche in questa localit\u00E0?',\n  },\n  th: {\n    location_zoom: '\u0E0B\u0E39\u0E21\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E02\u0E2D\u0E1A\u0E40\u0E02\u0E15\u0E40\u0E25\u0E40\u0E22\u0E2D\u0E23\u0E4C',\n    location_save: '\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E44\u0E1B\u0E22\u0E31\u0E07\u0E23\u0E30\u0E1A\u0E1A\u0E04\u0E25\u0E32\u0E27\u0E14\u0E4C',\n    location_remove: ' \u0E25\u0E1A\u0E04\u0E38\u0E13\u0E2A\u0E21\u0E1A\u0E31\u0E15\u0E34\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E40\u0E25\u0E37\u0E2D\u0E01',\n    location_delete: '\u0E25\u0E1A\u0E15\u0E33\u0E41\u0E2B\u0E19\u0E48\u0E07',\n    location_save_changes: '\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E43\u0E19\u0E15\u0E33\u0E41\u0E2B\u0E19\u0E48\u0E07\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48',\n  },\n})\n\n/**\n@function view\n\n@description\nThe view method creates a location view element group.\n\n@param {location} location A mapp location object.\n\n@returns {HTMLElement} The location.view element.\n*/\nexport default function view(location) {\n\n  location.removeCallbacks?.push(function () {\n    location.view.remove()\n  })\n\n  // Header with expander icon. \n  const header = [\n    mapp.utils.html`<h2>${location.record.symbol}`,\n    mapp.utils.html`<div class=\"mask-icon expander\">`\n  ]\n\n  // Zoom to location bounds.\n  if (location.infoj\n    .filter(entry => new Set(['pin', 'geometry']).has(entry.type))\n    .some(entry => !!entry.value)) {\n    header.push(mapp.utils.html`<button\n      title = ${mapp.dictionary.location_zoom}\n      class = \"mask-icon search\"\n      onclick = ${() => location.flyTo()}>`)\n  }\n\n  if (toggleLocationViewEdits(location)) {\n\n    // Toggling locationViewEdits are enabled.\n    header.push(location.editToggle)\n  }\n\n  // Update icon.\n  header.push(mapp.utils.html`<button\n    title = ${mapp.dictionary.location_save}\n    class = \"btn-save mask-icon done\"\n    style = \"display: none;\"\n    onclick = ${() => {\n      location.view.classList.add('disabled')\n      location.update()\n    }}>`);\n\n  // The updateInfo event must be called after the editToggle callback.\n  location.updateCallbacks?.push(function () {\n    location.view.dispatchEvent(new Event('updateInfo'))\n  })\n\n  // Trash icon.\n  if (location.layer?.edit?.delete || location.layer?.deleteLocation) {\n\n    header.push(mapp.utils.html`<button\n      title = ${mapp.dictionary.location_delete}\n      class = \"mask-icon trash\"\n      onclick = ${()=>location.trash()}>`)\n  }\n\n  // Clear selection.\n  header.push(mapp.utils.html`<button\n    title = ${mapp.dictionary.location_remove}\n    class = \"mask-icon close no\"\n    onclick = ${() => {\n\n      if (location.infoj.some(entry => typeof entry.newValue !== 'undefined')) {\n\n        if (!confirm(`${mapp.dictionary.location_close_without_save}`)) return;\n      }\n\n      location.remove()\n    }}>`)\n\n  location.view = mapp.ui.elements.drawer({\n    class: 'location-view raised expanded',\n    header: header\n  })\n\n  location.viewEntries = location.view.appendChild(mapp.ui.locations.infoj(location))\n\n  // Assign location.record.colour as border to the location.view header.\n  location.view.querySelector('.header').style.borderBottom = `3px solid ${location.record.colour}`\n\n  // Add listener for custom valChange event.\n  location.view.addEventListener('valChange', valChange)\n\n  location.renderLocationView = renderLocationView\n\n  location.view.addEventListener('render', () => location.renderLocationView())\n\n  location.view.addEventListener('updateInfo', () => {\n\n    // Hides the upload icon.\n    location.view.querySelector('.btn-save').style.display = 'none'\n\n    // Location has toggle editing.\n    if (location.editToggle) {\n\n      location.editToggle.classList.remove('on')\n\n      // Remove edits from infoj entries.\n      location.removeEdits()\n    }\n\n    // Refresh dataviews\n    if (location.layer?.dataviews) {\n      Object.values(location.layer.dataviews).forEach(dv => {\n        if (dv.display === true) {\n          dv.update();\n        }\n      });\n    }\n\n    location.renderLocationView()\n  })\n}\n\n/**\n@function toggleLocationViewEdits\n\n@description\nThe toggleLocationViewEdits checks whether the location.layer has the toggleLocationViewEdits flag.\n\nAt least one entry of the location must be editable.\n\nNew locations must always be editable.\n\nThe location.editToggle button element for the location view header is created.\n\n@param {location} location Mapp Location typedef\n\n@return {Boolean} Returns true if toggleLocationViewEdits should be possible.\n*/\nfunction toggleLocationViewEdits(location) {\n\n  if (!location.layer?.toggleLocationViewEdits) {\n\n    // Toggle has not been set for layer.\n    return false;\n  }\n\n  if (!location.infoj.some(entry => entry.edit)) {\n\n    // The location has no editable entries.\n    return false;\n  }\n\n  // Remove edits if location is not new.\n  !location.new && location.removeEdits()\n\n  // Create edit toggle button.\n  location.editToggle = mapp.utils.html.node`<button\n    title=\"Enable edits\"\n    class=${`mask-icon edit ${location.new && 'on' || ''}`}\n    onclick=${onClickEditToggle}>`\n\n  /**\n  @function onClickEditToggle\n\n  @description\n  The location.editToggle onclick event method toggles location.view edits.\n\n  A confirmation is required for entries with newValues.\n\n  If cancelled the newValues will removed.\n\n  A location.update() will be attempted on confirmation.\n\n  An alert will be shown if the location.update() errs.\n\n  The location.renderLocationView() will be called on successful update or cancellation.\n  \n  @param {Event} e The location.editToggle onclick event.\n  */\n  async function onClickEditToggle(e) {\n\n    // There are edits to be saved.\n    if (location.infoj.some(entry => typeof entry.newValue !== 'undefined')\n\n      // Confirm whether to save edits.\n      && confirm(mapp.dictionary.location_save_changes)) {\n\n      const update = await location.update()\n\n      // The update may err due to invalid entries.\n      if (update instanceof Error) {\n\n        return;\n      }\n       \n    // There are no unsaved edits.\n    } else if (e.target.classList.toggle('on')) {\n\n      // Button is toggled on.\n      location.restoreEdits()\n  \n    } else {\n\n      // Button is toggled off.\n      location.removeEdits()\n      location.view.querySelector('.btn-save').style.display = 'none'\n    }\n\n    location.renderLocationView()\n  }\n\n  return true;\n}\n\n/**\n@function valChange\n\n@description\nThe valChange method is assigned to the valChange custom event listener of the location.view element.\n\nAn infoj-entry must be provided as detail when the valChange custom event is dispatched.\n\nThe valChange method will check whether an entry has a newValue which is different from the current value and assign a class to show the change on the input element.\n\nThe valChange event controls the display of the location.update button (.btn-save).\n\nThe update button will not be displayed if no entry has a newValue or if some entry is invalid.\n\n@param {Event} e A custom event from the location.view eventlistener.\n@property {infoj-entry} e.detail The detail passed to the valChange event must be an info-entry typedef.\n*/\nfunction valChange(e) {\n\n  const entry = e.detail;\n\n  // Get location from entry\n  const location = entry.location;\n\n  if (entry.valChangeMethod instanceof Function) {\n\n    // Execute a custom valChangeMethod.\n    entry.valChangeMethod(entry)\n    return;\n  }\n\n  if (entry.value != entry.newValue) {\n\n    // newValue is different from value.\n    entry.node.classList.add('val-changed')\n\n  } else {\n\n    // newValue is the same as value.\n    delete entry.newValue\n    entry.node.classList.remove('val-changed')\n  }\n\n  if (location.infoj.some(entry => entry.invalid)) {\n\n    // Hide save button if some location entry is invalid.\n    location.view.querySelector('.btn-save').style.display = 'none';\n    return;\n  }\n\n  // Hide upload button if no location entry has a newValue.\n  location.view.querySelector('.btn-save').style\n    .display = location.infoj\n      .some(entry => typeof entry.newValue !== 'undefined')\n      ? 'inline-block'\n      : 'none';\n}\n\n/**\n@function renderLocationView\n\n@description\nThe renderLocationView method will remove all location.viewEntries and the `.disabled` class from the location.view before recreating the location.viewEntries and appending these to the location.view element.\n*/\nfunction renderLocationView() {\n\n  const location = this\n\n  // Remove location.viewEntries.\n  location.viewEntries.remove()\n\n  // Enables the location view node and child elements.\n  location.view.classList.remove('disabled')\n  \n  // Recreate location.viewEntries.\n  location.viewEntries = location.view.appendChild(mapp.ui.locations.infoj(location))\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    location_clear_all: 'Clear locations',\n    location_listview_full: 'The listview for locations is full.',\n  },\n  de: {\n    location_clear_all: 'Entferne Auswahl',\n    location_listview_full: 'Lagenliste ist voll.',\n  },\n  zh: {\n    location_clear_all: '\u6E05\u9664\u4F4D\u7F6E\u70B9',\n    location_listview_full: '\u4F4D\u7F6E\u5217\u8868\u89C6\u56FE\u5DF2\u6EE1',\n  },\n  zh_tw: {\n    location_clear_all: '\u6E05\u9664\u4F4D\u7F6E\u9EDE',\n    location_listview_full: '\u4F4D\u7F6E\u5217\u8868\u8996\u5716\u5DF2\u6EFF',\n  },\n  pl: {\n    location_clear_all: 'Usu\u0144 lokalizacje',\n    location_listview_full: 'Lista dla lokalizacji jest pe\u0142na',\n  },\n  fr: {\n    location_clear_all: 'Effacer les emplacements',\n    location_listview_full: 'La liste des emplacements est pleine.',\n  },\n  ja: {\n    location_clear_all: '\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u30AF\u30EA\u30A2',\n    location_listview_full: '\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u30EA\u30B9\u30C8\u30D3\u30E5\u30FC\u304C\u3044\u3063\u3071\u3044\u3067\u3059',\n  },\n  es: {\n    location_clear_all: 'Borrar localizaciones',\n    location_listview_full: 'La vista de lista de ubicaciones est\u00E1 llena.',\n  },\n  tr: {\n    location_clear_all: 'Konumlari temizle',\n    location_listview_full: 'Konum listesi dolu',\n  },\n  it: {\n    location_clear_all: 'Elimina localit\u00E0',\n    location_listview_full: 'L elenco delle localit\u00E0 \u00E8 pieno',\n  },\n  th: {\n    location_clear_all: '\u0E25\u0E1A\u0E2A\u0E16\u0E32\u0E19\u0E17\u0E35\u0E48\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14',\n    location_listview_full: '\u0E21\u0E38\u0E21\u0E21\u0E2D\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E2A\u0E16\u0E32\u0E19\u0E17\u0E35\u0E48\u0E40\u0E15\u0E47\u0E21',\n  },\n})\n\nexport default params => {\n\n  if (!params.mapview) {\n\n    console.warn('A mapview is required in the locations listview params argument.')\n  }\n\n  if (!params.target) {\n\n    console.warn('A target element is required in the locations listview params argument.')\n  }\n\n  const records = params.mapview.locale?.listview_records || [\n    {\n      symbol: 'A',\n      colour: '#2E6F9E'\n    },\n    {\n      symbol: 'B',\n      colour: '#EC602D'\n    },\n    {\n      symbol: 'C',\n      colour: '#5B8C5A'\n    },\n    {\n      symbol: 'D',\n      colour: '#B84444'\n    },\n    {\n      symbol: 'E',\n      colour: '#514E7E'\n    },\n    {\n      symbol: 'F',\n      colour: '#E7C547'\n    },\n    {\n      symbol: 'G',\n      colour: '#368F8B'\n    },\n    {\n      symbol: 'H',\n      colour: '#841C47'\n    },\n    {\n      symbol: 'I',\n      colour: '#61A2D1'\n    },\n    {\n      symbol: 'J',\n      colour: '#37327F'\n    }\n  ]\n\n  const clearAll = params.target.appendChild(mapp.utils.html.node`\n    <button \n      style=\"display: none; width: 100%; text-align: right;\"\n      class=\"tab-display bold primary-colour text-shadow\"\n      onclick=${e => {\n\n      // Remove all mapview locations\n      Object.values(params.mapview.locations)\n        .forEach(location => location.remove())\n    }}>\n      ${mapp.dictionary.location_clear_all}`)\n\n  // Create proxy for mapview.locations\n  params.mapview.locations = new Proxy(params.mapview.locations, {\n    set: function (target, key, location) {\n\n      // Find a free record for location.\n      const record = records.find(record => !record.hook)\n\n      // No empty record found.\n      if (!record) {\n\n        alert(mapp.dictionary.location_listview_full)\n        return true;\n      }\n\n      // Proxy default.\n      Reflect.set(...arguments)\n\n      // Set record hook from location.\n      record.hook = location.hook\n\n      // Assign record to the location.\n      location.record = record\n\n      // Set style from record.\n      location.style = {\n        strokeColor: record.colour,\n        fillColor: record.colour,\n        fillOpacity: 0.1\n      };\n\n      // Create OL Style object.\n      location.Style = mapp.utils.style([\n        {\n          strokeColor: '#000',\n          strokeOpacity: 0.1,\n          strokeWidth: 8,\n        },\n        {\n          strokeColor: '#000',\n          strokeOpacity: 0.1,\n          strokeWidth: 6,\n        },\n        {\n          strokeColor: '#000',\n          strokeOpacity: 0.1,\n          strokeWidth: 4,\n        },\n        {\n          strokeColor: location.style.strokeColor || '#000',\n          strokeWidth: 2,\n          fillColor: location.style.fillColor || '#fff',\n          fillOpacity: location.style.fillOpacity || 0.2,\n        }\n      ]);\n\n      // Create OL Style object for pin icon.\n      location.pinStyle = mapp.utils.style({\n        icon: {\n          type: 'markerLetter',\n          letter: record.symbol,\n          color: location.style.strokeColor,\n          scale: 3,\n          anchor: [0.5, 1]\n        }\n      })\n\n      // Create location view.\n      mapp.ui.locations.view(location)\n\n      // Collapse all location view drawer in list.\n      Object.values(params.target.children).forEach(el => el.classList.remove('expanded'))\n\n      // New location view should be inserted after clearAll but before first current location view.\n      params.target.insertBefore(location.view, clearAll.nextSibling)\n\n      // Send event after the location view has been added to the DOM.\n      location.view.dispatchEvent(new Event('addLocationView'))\n\n      // Show the clear all button.\n      clearAll.style.display = 'block'\n\n      // Click locations tab header.\n      document.querySelector('[data-id=locations]').click()\n\n      // Hide locations tab if no gazetteer input present.\n      document.querySelector('[data-id=locations]').style.display = 'block'\n\n      return true\n    },\n    deleteProperty: function (target, hook) {\n\n      // Proxy default\n      Reflect.deleteProperty(...arguments)\n\n      const record = records.find(record => record.hook === hook)\n\n      record && delete record.hook\n\n      setTimeout(gazCheck, 300)\n\n      return true\n    },\n  })\n\n  function gazCheck() {\n\n    // clearAll should not be shown without locations to clear\n    if (!document.querySelectorAll('#locations > .location-view').length) {\n\n      // Activate the layers panel\n      document.querySelector('[data-id=layers]').click()\n\n      clearAll.style.display = 'none'\n\n      // Find gazetteer input.\n      const gazInput = document.querySelector('#locations input')\n\n      if (gazInput) {\n\n        // Clear the gazetteer input value.\n        gazInput.value = '';\n\n      } else {\n\n        // Hide locations tab if no gazetteer input present.\n        document.querySelector('[data-id=locations]').style.display = 'none'\n      }\n    }\n  }\n}\n\n", "/**\n## ui/locations/infoj\n\nThe infoj module exports a default method to process the infoj entries of a location.\n\n@requires /ui/locations/entries\n\n@module /ui/locations/infoj\n*/\n\n/**\n### mapp.ui.infoj(location, infoj_order)\n\nThe infoj methods iterates through the location's infoj [entries] array.\n\nmapp.ui.locations.entries{} methods matching the entry type keyvalue are called with the entry as argument.\n\nThe HTMLelements returned from a location entry method are appended to entry.listview which is appended to the location.view.\n\nThe infoj_order array argument provides an option to extend the location infoj_array with entries not stored in the location.layer.infoj array.\n\nThe infoj_order array may contain string entries which allow to order entries before processing. Ordered infoj_order string values are used to map infoj entries with matching key, field, or query values. Infoj entries which are not matched by infoj_order string values will be excluded from being processed for the creation of the location view.\n\n@function infoj\n@param {Object} location A decorated location object.\n@param {Object} location.layer A decorated layer object to which the location belongs.\n@param {Object} location.view Location view HTMLElement.\n@param {array} infoj_order Optional array to order and expand the infoj array.\n@return {HTMLElement} listview grid element with entry elements.\n*/\n\nlet groups\n\nexport default function infoj(location, infoj_order) {\n\n  if (!location.infoj) return\n\n  // Create a grid view div.\n  const listview = mapp.utils.html.node`<div class=\"location-view-grid\">`\n\n  // Create object to hold view groups.\n  groups = {}\n\n  // The infoj_order may be assigned to the layer.\n  infoj_order ??= location?.layer?.infoj_order\n\n  // infoj argument is provided as an array of strings to filter the location infoj entries.\n  const infoj = Array.isArray(infoj_order) ?\n    infoj_order.map(_entry => {\n\n      if (typeof _entry === 'string') {\n        const infoj_order_field = location.infoj.find(entry => (entry.key || entry.field || entry.query) === _entry);\n\n        // if undefined then warn the user.\n        if (!infoj_order_field) console.warn(`infoj_order field: \"${_entry}\" not found in location.infoj. Please add entry.key, entry.field, or entry.query to the entry.`);\n\n        // Check whether the _entry string matches an infoj entry keyvalue.\n        return infoj_order_field\n\n      } else if (typeof _entry === 'object') {\n\n        _entry.location = location\n\n        // Return object _entry.\n        return _entry\n      }\n    }).filter(entry => entry !== undefined)\n    : location.infoj;\n\n  \n  let keyIdx = 0;\n\n  // Iterate through info fields and add to info table.\n  for (const entry of infoj) {\n\n    entry.key ??= entry.field || keyIdx++\n\n    // The location view entries should not be processed if the view is disabled.\n    if (location.view?.classList.contains('disabled')) break;\n\n    // Location view elements will appended to the entry.listview element.\n    entry.listview = listview\n\n    // The default entry type is text.\n    entry.type ??= 'text'\n\n    entryJSONB(entry)\n\n    entryObject(entry)\n\n    // Skip entry depending on flag and value.\n    if (entrySkip(entry)) continue;\n\n    entryNullValue(entry)\n\n    entryDefault(entry)\n\n    entryGroup(entry)\n\n    entryNode(entry)\n\n    entryTitle(entry)\n\n    if (entryQuery(entry)) continue;\n\n    // Check whether a method exists for the entry type.\n    if (!Object.hasOwn(mapp.ui.locations.entries, entry.type)) {\n      console.error(`entry.type:${entry.type} method not found.`)\n      continue;\n    }\n\n    // Execute the entry.type method providing the entry as only argument.\n    const el = mapp.ui.locations.entries[entry.type]?.(entry)\n\n    // Append any HTMLElement returned from the entry.type method to the entry.node element.\n    el && entry.node.append(el)\n  }\n\n  return listview\n}\n\n/**\nThe entryJSONB(entry) method assign an entry.value from a jsonb object contained in the entry.value assigned by the location.get method.\n\nThe entry must have an JSON object value which is not null.\n\nThe entry.jsonb_field and entry.jsonb_key must be configured and found in the entry.value object.\n\n@param {Object} entry \n@param {string} entry.jsonb_field Lookup of field in jsonb value object.\n@param {string} entry.jsonb_key Lookup of key value in jsonb.field valye object.\n*/\n\nfunction entryJSONB(entry) {\n  if (!entry.jsonb_field) return;\n  if (!entry.jsonb_key) return;\n  if (entry.value === null) return;\n  if (typeof entry.value !== 'object') return;\n  if (!entry.value.jsonb) return;\n\n  entry.value = entry.value.jsonb[entry.jsonb_field][entry.jsonb_key]\n}\n\n/**\nThe entryObject(entry) method can be used to lookup another entry and assign or merge the found entry object value.\n\nA entry.json_key in combination with entry.json_field can be configured to assign a specific JSON key value to the entry.\n\n@function entryObject\n@param {Object} entry\n@param {string} entry.objectAssignFromField - Lookup for json value entry for object assign.\n@param {string} entry.objectMergeFromField Lookup for json value entry for object merge.\n@param {string} entry.json_field Lookup for json value entry.\n@param {string} entry.json_key Required for json_field assignment.\n*/\n\nfunction entryObject(entry) {\n\n  const field = entry.objectAssignFromField || entry.objectMergeFromField || entry.json_field\n\n  // entry must have a lookup field\n  if (!field) return;\n\n  const fieldEntry = entry.location.infoj.find(_entry => _entry.field === field)\n\n  // info must contain a matching fieldEntry\n  if (!fieldEntry) return;\n\n  // fieldEntry must have an object type value.\n  if (typeof fieldEntry.value !== 'object') return;\n\n  // Lookup for json value field entry\n  if (entry.json_field) {\n\n    if (!entry.json_key) {\n      console.warn('json_field requires entry.json_key to be specified')\n      return;\n    }\n\n    // The fieldEntry value may be null or undefined.\n    if (!fieldEntry.value) return;\n\n    entry.value = fieldEntry.value[entry.json_key]\n  }\n\n  if (entry.objectAssignFromField) {\n\n    Object.assign(entry, fieldEntry.value)\n  }\n\n  if (entry.objectMergeFromField) {\n\n    mapp.utils.merge(entry, fieldEntry.value)\n  }\n}\n\n/**\nThe entrySkip(entry) methods checks whether a entry should be skipped from being processed in the iteration of infoj entries.\n\nSkipping may be conditional on the entry.value.\n\nEntries with falsy, null, or undefined values may be skipped if the entry is not editable.\n\nA layer.infoj_skip[] array can be configured to define which infoj entries should be skipped.\n\n@function entrySkip\n@param {Object} entry \n@param {Object} entry.value\n@param {Object} entry.skipEntry Entry will always be skipped.\n@param {Object} entry.skipFalsyValue Entry with falsy value will be skipped.\n@param {Object} entry.skipUndefinedValue Entry with undefined value will be skipped.\n@param {Object} entry.skipNullValue - Entry with null value will be skipped.\n*/\n\nfunction entrySkip(entry) {\n\n  // Skip entry, no matter what.\n  if (entry.skipEntry) return true;\n\n  // Skip entries which are falsy if flagged.\n  if (entry.skipFalsyValue\n    && !entry.value\n    && !entry.edit) return true;\n\n  // Skip entries which are undefined if flagged.\n  if (entry.skipUndefinedValue\n    && typeof entry.value === 'undefined'\n    && !entry.edit) return true;\n\n  // Skip entries which are null if flagged.\n  if (entry.skipNullValue\n    && entry.value === null\n    && !entry.edit) return true;\n}\n\n/**\n@function entryNullValue\n\n@description\nThe entryNullValue method will assign the nullValue property value as entry.value for non editable entries only.\n\n@param {infoj-entry} entry An infoj-entry typedef object.\n*/\n\nfunction entryNullValue(entry) {\n\n  // Assign a default nullValue\n  if (entry.nullValue === undefined) return;\n\n  // The nullValue is only applied to non editable entries.\n  if (entry.edit) return;\n\n  // Assign nullValue to nullish entry.value.\n  entry.value ??= entry.nullValue;\n}\n\n/**\n@function entryDefault\n\n@description\nThe entryDefault method will assign the entry.default property value as entry.newValue on editable entries.\n\n@param {infoj-entry} entry An infoj-entry typedef object.\n*/\n\nfunction entryDefault(entry) {\n\n  // The entry.default must be defined.\n  if (entry.default === undefined) return;\n\n  if (!entry.edit) return;\n\n  entry.newValue = entry.default\n  entry.location.view?.dispatchEvent(\n    new CustomEvent('valChange', {\n      detail: entry\n    }))\n}\n\n/**\nThe entryGroup(entry) method will create a new group for each unique entry.group string.\n\nEntry elements in the same group will be added to a group element drawer added to the entry[location].listview.\n\n@function entryGroup\n@param {Object} entry\n@param {string} entry.group The group key.\n@param {string} entry.groupClassList Group element classlist.\n@param {boolean} entry.expanded The 'expanded' class will be concatenated with group element classlist.\n@param {HTMLDivElement} entry.listview The entry [location] listview.\n*/\n\nfunction entryGroup(entry) {\n  \n  if (!entry.group) return;\n\n  // Create new group\n  if (!groups[entry.group]) {\n\n    groups[entry.group] = entry.listview.appendChild(\n      mapp.ui.elements.drawer({\n        class: `group`,\n        header: mapp.utils.html`\n          <h3>${entry.group}</h3>\n          <div class=\"mask-icon expander\"></div>`,\n      }))\n  }\n\n  if (typeof entry.groupClassList === 'string') {\n    groups[entry.group].classList.add(...entry.groupClassList.split(' '))\n  }\n\n  // The group will replace the entry listview to which elements will be appended.\n  entry.listview = groups[entry.group]\n}\n\n/**\nThe entryNode(entry) method creates the entry.node div element with a concatenated classlist.\n\nThe entry.node element is appended to the entry[location].listview.\n\n@function entryNode\n@param {Object} entry\n@param {string} entry.type Concatenate with entry.node classlist. \n@param {string} entry.class Concatenate with entry.node classlist.\n@param {boolean} entry.inline Add 'inline' to entry.node classlist.\n*/\n\nfunction entryNode(entry) {\n\n  const classString = `contents ${entry.type} ${entry.class || ''} ${entry.inline && 'inline' || ''}`\n\n  entry.node = entry.listview.appendChild(mapp.utils.html.node`\n  <div\n    data-type=${entry.type}\n    class=${classString}>`)\n}\n\n/**\nThe entryTitle methods checks whether a title element should be appended to the entry.node before any entry.type elements.\n\n@function entryTitle\n@param {Object} entry\n@param {Object} entry.title The title value.\n*/\n\nfunction entryTitle(entry) {\n\n  if (!entry.title) return;\n\n  // Append title element to entry.node\n  entry.node.append(mapp.ui.locations.entries.title(entry))\n}\n\n/**\nThe entryQuery(entry) method checks whether a query should be executed to populate the entry.value.\n\nmapp.utils.paramString(mapp.utils.queryParams(entry)) will be used to create a parameter string for the query request from the entry.queryparams.\n\nA query flagged with entry.run or entry.queryCheck will be executed immediately.\n\nThe infoj iteration will continue if the entryQuery method returns true.\n\nThe entry can be skipped depending on the response value.\n\nThe entry method will be called with the response value once the xhr utility promise has been resolved.\n\n@function entryQuery\n@param {Object} entry\n@param {string} entry.query The query template.\n@param {string} entry.queryparams Parameter for the query.\n@param {boolean} entry.queryCheck Query should be immediate.\n@param {boolean} entry.run Query should be immediate.\n@param {boolean} entry.hasRan Flag whether query has been executed.\n*/\n\nfunction entryQuery(entry) {\n\n  if (!entry.query) return;\n\n  // Assign queryparams from layer, and locale.\n  entry.queryparams = {\n    ...entry.queryparams,\n    ...entry.location.layer?.queryparams,\n    ...entry.location.layer?.mapview?.locale?.queryparams\n  }\n\n  // Check whether query returns data.\n  if (entry.queryCheck || entry.run === true) {\n\n    // Stringify paramString from object.\n    const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n    // Delete run \n    delete entry.run;\n\n    // Add flag to outline it has already been ran\n    entry.hasRan = true;\n\n    // Assign location layer or mapp.host as fallback if not implicit.\n    entry.host ??= entry.location?.layer?.mapview?.host || mapp.host\n\n    // Run the entry query.\n    mapp.utils\n      .xhr(`${entry.host}/api/query?${paramString}`)\n      .then(response => {\n\n        if (response) {\n\n          // Assign query response as entry value.\n          entry.value = entry.field ? response[entry.field] : response;\n\n        } else {\n\n          entry.value = entry.nullValue || null;\n        }\n\n        // Check whether entry should be skipped.\n        if (entrySkip(entry)) {\n\n          // Remove the entry.node from location view.\n          entry.node.remove();\n          return;\n        }\n\n        // Create element to be appended into empty entry.node\n        const el = mapp.ui.locations.entries[entry.type]?.(entry)\n\n        el && entry.node.appendChild(el)\n      })\n\n    return true;\n\n  } else if (entry.field && !entry.hasRan) {\n\n    console.warn(`field:\"${entry.field}\" has a query:\"${entry.query}\" which is not set to run. To resolve this, add queryCheck:true or run:true to the entry.`)\n  }\n}\n", "/**\nThe boolean [location] entries module exports the boolean function as default.\n\n@module /ui/locations/entries/boolean\n*/\n\n/**\n@function boolean\n\n@description\n## mapp.ui.locations.entries.boolean(entry)\nReturns a HTML element as visual representation of the boolean value. A checkbox element will be returned if the entry is editable.\n\n```js\n{\n  \"title\": \"Flag\",\n  \"label\": \"Checkbox\",\n  \"edit\": true,\n  \"field\": \"flag\",\n  \"type\": \"boolean\",\n  \"inline\": true\n}\n```\n\n@param {infoj-entry} entry type:boolean infoj entry.\n\n@returns {HTMLElement} Location view entry node.\n*/\nexport default function boolean(entry) {\n\n  if (entry.edit) {\n\n    return mapp.ui.elements.chkbox({\n      label: entry.label || entry.title,\n      checked: entry.newValue !== undefined ? entry.newValue : entry.value,\n      disabled: !entry.edit,\n      onchange: (checked) => {\n\n        entry.newValue = checked\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n\n      }\n    })\n  }\n\n  const icon = `mask-icon ${entry.value ? 'done' : 'close'}`\n\n  return mapp.utils.html.node`\n    <div class=\"link-with-img\">\n      <div class=${icon}></div>\n      <span>`\n}", "const types = {\n  image,\n  images,\n  documents\n}\n\nconst onload = {\n  image: imageLoad,\n  images: imageLoad,\n  documents: docLoad\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    image_upload_failed: 'Image upload failed.',\n    document_upload_failed: 'Document upload failed.',\n  },\n  de: {\n    image_upload_failed: 'Hochladen des Bildes gescheitert.',\n    document_upload_failed: 'Hochladen des Dokumentes gescheitert.',\n  },\n  zh: {\n    image_upload_failed: '\u56FE\u7247\u4E0A\u4F20\u5931\u8D25\u3002',\n    document_upload_failed: '\u6587\u6863\u4E0A\u4F20\u5931\u8D25\u3002',\n  },\n  zh_tw: {\n    image_upload_failed: '\u5716\u7247\u4E0A\u50B3\u5931\u6557\u3002',\n    document_upload_failed: '\u6587\u6A94\u4E0A\u50B3\u5931\u6557\u3002',\n  },\n  pl: {\n    image_upload_failed: 'Za\u0142adowanie obrazu nie powiod\u0142o si\u0119',\n    document_upload_failed: 'Za\u0142adowanie dokumentu nie powiod\u0142o si\u0119',\n  },\n  fr: {\n    image_upload_failed: 'Echec du chargement de l\\'image.',\n    document_upload_failed: 'Echec du chargement du document.',\n  },\n  ja: {\n    image_upload_failed: '\u753B\u50CF\u306E\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n    document_upload_failed: '\u66F8\u985E\u306E\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F',\n  },\n  es: {\n    image_upload_failed: 'Error al cargar la imagen.',\n    document_upload_failed: 'Error al cargar el documento.',\n  },\n  tr: {\n    image_upload_failed: 'Gorsel yukleme basarisiz',\n    document_upload_failed: 'Belge yukleme basarisiz',\n  },\n  it: {\n    image_upload_failed: 'Errore nel caricare l\\'immagine',\n    document_upload_failed: 'Errore nel caricare il documento',\n  },\n  th: {\n    image_upload_failed: '\u0E01\u0E32\u0E23\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E20\u0E32\u0E1E\u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27',\n    document_upload_failed: '\u0E01\u0E32\u0E23\u0E2D\u0E31\u0E1E\u0E42\u0E2B\u0E25\u0E14\u0E40\u0E2D\u0E01\u0E2A\u0E32\u0E23\u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27',\n  }\n})\n\nexport default entry => types[entry.type](entry)\n\nfunction image(entry) {\n\n  if (entry.value) {\n\n    const trashBtn = mapp.utils.html`\n      <button \n        style=\"position: absolute; width: 2em; height: 2em; right: 0.5em; top: 0.5em;\"\n        class=\"mask-icon trash no\"\n        data-name=${entry.value.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n        data-src=${entry.value}\n        onclick=${e => trash(e, entry)}>`\n\n    // Render image with src from cloudinary reference as value.\n    return mapp.utils.html.node`\n      <div style=\"position: relative;\">\n        <img\n          style=\"width: 100%\"\n          src=${entry.value}\n          onclick=${mapp.ui.utils.imagePreview}>\n          ${entry.edit && trashBtn}`\n\n  }\n\n  if (entry.edit) {\n\n    return mapp.utils.html.node`\n      <input\n        type=\"file\"\n        accept=\"image/*;capture=camera\"\n        onchange=${e => upload(e, entry)}>`\n  }\n}\n\nfunction images(entry) {\n\n  const images = entry.value?.map(image => {\n\n    const trashBtn = mapp.utils.html`\n      <button\n        class=\"mask-icon trash no\"\n        data-name=${image.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n        data-src=${image}\n        onclick=${e => trash(e, entry)}>`\n\n    return mapp.utils.html`\n      <div>\n        <img \n          src=${image}\n          onclick=${mapp.ui.utils.imagePreview}>\n          ${entry.edit && trashBtn}`\n\n  }) || []\n\n  if (entry.edit) images.push(mapp.utils.html.node`\n    <div class=\"mask-icon add-photo pos-center\">\n      <input\n        type=\"file\"\n        accept=\"image/*;capture=camera\"\n        onchange=${e => upload(e, entry)}>`)\n\n  if (!images.length) return;\n\n  entry.list = mapp.utils.html.node`<div class=\"images-grid\">${images}`\n\n  return entry.list;\n}\n\nfunction documents(entry) {\n\n  const docs = entry.value?.map(doc => {\n\n    const trashBtn = mapp.utils.html`\n      <button\n        class=\"mask-icon trash no\"\n        data-name=${doc.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n        data-href=${doc}\n        onclick=${e => trash(e, entry)}>`\n\n    return mapp.utils.html`\n      <div class=\"link-with-img\">\n        ${(entry.edit) && trashBtn}\n          <a\n            target=\"_blank\"\n            href=${doc}>${doc.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}`\n\n  }) || []\n\n  entry.uploadBtn = mapp.utils.html.node`\n    <div class=\"mask-icon cloud-upload\">\n      <input\n        style=\"opacity: 0; width: 3em; height: 3em;\"\n        type=\"file\"\n        accept=\".txt,.pdf,.doc,.docx,.xls,.xlsx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document;\"\n        onchange=${e => upload(e, entry)}>`\n\n  entry.edit && docs.push(entry.uploadBtn)\n\n  if (!docs.length) return;\n\n  entry.list = mapp.utils.html.node`<div>${docs}`\n\n  return entry.list;\n}\n\nasync function upload(e, entry) {\n\n  // Location view must disabled while uploading resource.\n  entry.location.view?.classList.add('disabled')\n\n  const reader = new FileReader()\n\n  if (!e.target.files[0]) return;\n\n  entry.file = e.target.files[0]\n\n  reader.onload = e => onload[entry.type](e, entry)\n\n  reader.readAsDataURL(entry.file)\n}\n\nfunction imageLoad(e, entry) {\n\n  const img = new Image()\n\n  img.onload = async () => {\n\n    let\n      canvas = mapp.utils.html.node`<canvas>`,\n      max_size = 1024,\n      width = img.width,\n      height = img.height\n\n    // resize\n    if (width > height && width > max_size) {\n      height *= max_size / width\n      width = max_size\n\n    } else if (height > max_size) {\n      width *= max_size / height\n      height = max_size\n    }\n\n    canvas.width = width\n    canvas.height = height\n\n    canvas.getContext('2d').drawImage(img, 0, 0, width, height)\n\n    const dataURL = canvas.toDataURL('image/jpeg', 0.5)\n\n    const public_id = entry.file.name.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '') + entry.suffix_date ? `@${Date.now()}` : '';\n\n    const response = await mapp.utils.xhr({\n      method: 'POST',\n      requestHeader: {\n        'Content-Type': 'application/octet-stream'\n      },\n      url: `${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n        public_id,\n        resource_type: 'image',\n        folder: entry.cloudinary_folder\n      })}`,\n      body: mapp.utils.dataURLtoBlob(dataURL)\n    })\n\n    if (!response || response.error) {\n      const errorDetail = response?.error?.message ? ` Error: ${response.error.message}` : '';\n      const errorMessage = `${mapp.dictionary.image_upload_failed}${errorDetail}`;\n      alert(errorMessage);\n      return;\n    }\n\n    if (entry.type === 'image') {\n\n      // Only a single image is supported by the entry.type.\n      entry.value = response.secure_url\n    } else {\n\n      // Add the secure_url to the entry values array and update the location.\n      entry.value = Array.isArray(entry.value) ? entry.value.concat([response.secure_url]) : [response.secure_url]\n    }\n\n    postUpdate(entry)\n  }\n\n  img.src = e.target.result\n}\n\nasync function docLoad(e, entry) {\n\n  const response = await mapp.utils.xhr({\n    method: 'POST',\n    requestHeader: {\n      'Content-Type': 'application/octet-stream'\n    },\n    url: `${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n      public_id: entry.file.name,\n      resource_type: 'raw',\n      folder: entry.cloudinary_folder\n    })}`,\n    body: e.target.result\n  })\n\n  if (!response || response.error) {\n    const errorDetail = response?.error?.message ? ` Error: ${response.error.message}` : '';\n    const errorMessage = `${mapp.dictionary.document_upload_failed}${errorDetail}`;\n    alert(errorMessage);\n    return;\n  }\n  // Add the secure_url to the entry values array and update the location.\n  entry.value = Array.isArray(entry.value) ? entry.value.concat([response.secure_url]) : [response.secure_url]\n\n  postUpdate(entry)\n}\n\nasync function trash(e, entry) {\n\n  if (!confirm('Remove item?')) return;\n\n  // Send request to cloudinary to destroy resource.\n  await mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n    destroy: true,\n    public_id: e.target.dataset.name,\n    folder: entry.cloudinary_folder\n  })}`)\n\n  // Remove the resource link from the entry values array and update the location.\n  const valueSet = new Set(entry.value)\n\n  valueSet.delete(e.target.dataset.src || e.target.dataset.href)\n\n  if (entry.type === 'image') {\n\n    entry.value = null\n  } else {\n\n    entry.value = valueSet.size ? Array.from(valueSet) : null;\n  }\n\n  postUpdate(entry)\n}\n\nasync function postUpdate(entry) {\n\n  entry.location.view?.classList.add('disabled')\n\n  // Update the geometry field value.\n  await mapp.utils.xhr({\n    method: 'POST',\n    url:\n      `${entry.location.layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'location_update',\n        locale: entry.location.layer.mapview.locale.key,\n        layer: entry.location.layer.key,\n        table: entry.location.table,\n        id: entry.location.id,\n      }),\n    body: JSON.stringify({ [entry.field]: entry.value }),\n  })\n\n  const content = mapp.ui.locations.entries[entry.type](entry)\n\n  mapp.utils.render(entry.node, content)\n\n  entry.title && content.before(mapp.ui.locations.entries.title(entry))\n\n  entry.location.view?.classList.remove('disabled')\n}", "/**\n## ui/locations/entries/dataview\n\nThe dataview entry module exports the dataview method as mapp.ui.locations.entries.dataview()\n\n@requires /ui/Dataview\n\n@module /ui/locations/entries/dataview\n*/\n\n/**\n@function dataview\n\n@description\n### mapp.ui.locations.entries.dataview()\n\nThe `dataview.data{}` will be assigned from the entry.value if available.\n\nThe `dataview.layer` will be assigned from the `entry.location.layer`\n\nA document lookup for the target ID will be attempted if the target is provided as string. The dataview will be decorated, created, and updated in this case.\n\nA dataview has already been decorated if a `dataview.update` method exists. The entry method will check the display condition to show the dataview and return the entry HTMLElements.\n\nThe `dataview.tabview` will be assigned if the document queryselector finds a matching data-id, eg. \"tabview\".\n\nThe dataview will be added as a new tab to the tabview.\n\nA locationViewTarget element will be created and returned to the location.view without a tabview or implicit target element for the dataview.\n\nThe dataview entry is decorated to be a `typedef:dataview` object by passing the entry as argument to the `mapp.ui.Dataview(entry)` method.\n\nA decorated dataview entry will have show(), hide(), and an update() method.\n\nA checkbox element will be created if the dataview entry has a label.\n\nThe display flag controls whether the dataview should be immediately displayed.\n\nThe dataview checkbox and locationViewTarget elements will be returned if available.\n\n@param {infoj-entry} entry type:dataview entry.\n@property {location} entry.location The entry location.\n@property {layer} entry.layer The entry layer will be assigned from the entry.location.\n@property {Object} entry.data The dataview data.\n@property {string} [entry.label] Label for checkbox element.\n@property {string} [entry.dataview] The dataview type, eg. \"chartjs\", \"tabulator\".\n@property {string} [entry.target] The dataview target. Will resolve to HTMLElement.\n@property {Function} [entry.update] The dataview update method.\n@property {boolean} [entry.display] The dataview display flag.\n@property {Function} [entry.show] The dataview show method.\n@property {Function} [entry.hide] The dataview hide method.\n@property {HTMLElement} [entry.locationViewTarget] Dataview target for display in location.view.\n\n@return {HTMLElement} Location view dataview and checkbox.\n*/\n\nexport default function dataview(entry) {\n\n  entry.data ??= entry.value\n\n  if (entry.data === null) {\n\n    // The entry must be disabled if the query has run with querycheck:true and the data is null.\n    // This is to prevent the query running over and over again getting the same result.\n    delete entry.display\n    entry.disabled = true\n\n  } else {\n\n    delete entry.disabled\n  }\n\n  // Dataview queries may require the layer and host to be defined on the entry.\n  entry.layer ??= entry.location.layer\n  entry.host ??= entry.layer.mapview.host\n\n  // Dataview will be rendered into target identified by ID.\n  if (typeof entry.target === 'string' && document.getElementById(entry.target)) {\n\n    // Assign element by ID as target.\n    entry.target = document.getElementById(entry.target)\n\n    // Create and update the dataview.\n    if (mapp.ui.Dataview(entry) instanceof Error) return;\n\n    entry.update()\n    \n    return;\n  }\n\n  // Dataview is dependent on other field entries.\n  if (entry.dependents) {\n\n    console.warn(`The dataview type entry key:${entry.key} may be dependent on other entries but has no dependents.`)\n  }\n\n  // Dataview has already been created. e.g. after the location (view) is updated.\n  if (entry.update) {\n\n    if (entry.display) entry.show?.()\n\n    // Return elements to location view.\n    return mapp.utils.html.node`\n      ${entry.chkbox || ''}\n      ${entry.locationViewTarget || ''}`\n  }\n\n  // Find tabview element from data-id attribute.\n  entry.tabview ??= typeof entry.target === 'string'\n    && document.querySelector(`[data-id=${entry.target}]`)\n\n  // Dataview will be rendered into a tabview panel.\n  if (entry.tabview) {\n\n    // Assign border style based on the location view record (from list)\n    entry.tab_style ??= `border-bottom: 3px solid ${entry.location.style?.strokeColor || 'var(--color-primary)'}`\n\n    // Assign target html element for dataview.\n    entry.target = mapp.utils.html.node`\n      <div class=\"dataview-target\">`\n\n    // Create tab after dataview creation is complete.\n    entry.tabview.dispatchEvent(new CustomEvent('addTab', {\n      detail: entry\n    }))\n\n  } else {\n\n    // Dataview will be rendered into location view.\n    entry.locationViewTarget = mapp.utils.html.node`\n      <div class=\"${`location ${entry.class}`}\">`\n\n    entry.target = entry.locationViewTarget\n  }\n\n  // Decorate the dataview entry.\n  if (mapp.ui.Dataview(entry) instanceof Error) return;\n\n  // Dataview should be displayed.\n  entry.display && entry.show?.()\n\n  // Return elements to location view.\n  return mapp.utils.html.node`\n    ${entry.chkbox || ''}\n    ${entry.locationViewTarget || ''}`\n}\n", "const dateString = entry => new Date((entry.newValue || entry.value) * 1000)\n  .toLocaleDateString(entry.locale, entry.options); // day only as configured in workspace\n\nconst timeString = entry => new Date((entry.newValue || entry.value) * 1000)\n  .toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // time only as 00:00\n\n// formatted value for input element.\nconst formats = {\n  datetime: entry => `${new Date((entry.newValue || entry.value) * 1000).toLocaleDateString('fr-CA')}T${timeString(entry)}`, // YYYY-MM-DDT00:00\n  date: entry => `${new Date((entry.newValue || entry.value) * 1000).toLocaleDateString('fr-CA')}` // YYYY-MM-DD\n}\n\nexport default entry => {\n\n  if (entry.edit) {\n\n    if (!entry.value && !entry.newValue) {\n\n      entry.newValue = parseInt(new Date().getTime() / 1000)\n\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', {\n          detail: entry\n        }))\n    }\n\n    // return date/time input\n    return mapp.utils.html.node`\n      <input\n        type=${entry.type === 'datetime' ? 'datetime-local' : 'date'}\n        value=\"${formats[entry.type](entry)}\"\n        onchange=${e => {\n\n        entry.newValue = new Date(e.target.value).getTime() / 1000;\n\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}>`;\n  }\n\n  // Assign val for non-editable entry.\n  const val = entry.value\n    && (entry.type === 'datetime' ? `${dateString(entry)} ${timeString(entry)}` : dateString(entry))\n    || 'null'\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${val}`\n\n  return node\n}", "/**\n## /ui/locations/entries/defaults\n\nThe defaults location entry module exports the deprecated defaults entry method.\n\n@module /ui/locations/entries/defaults\n*/\n\n/**\n@function defaults\n@deprecated\n\n@description\nThe deprectaed defaults entry method was setting the and updating the mapp user to the entry field.\n\nThis method has been deprecated in favour of a more general plugin to set and update the user email and datetime.\n*/\n\nexport default function defaults() {\n\n  console.warn(`The type:defaults entry method has been deprecated.`)\n}", "/**\n## ui/locations/entries/geometry\n\nThe geometry entry module exports a default entry method to process infoj entries with a geometry value.\n\n@module /ui/locations/entries/geometry\n*/\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    delete_geometry: 'Delete Geometry',\n    modify_geometry: 'Modify Geometry',\n  },\n  de: {\n    delete_geometry: 'Geometrie entfernen',\n    modify_geometry: 'Geometrie bearbeiten',\n  },\n  zh: {\n    delete_geometry: '\u5220\u9664\u56FE\u5F62',\n  },\n  zh_tw: {\n    delete_geometry: '\u522A\u9664\u5716\u5F62',\n  },\n  pl: {\n    delete_geometry: 'Usu\u0144 geometri\u0119',\n  },\n  fr: {\n    delete_geometry: 'Effacer la G\u00E9om\u00E9trie',\n  },\n  ja: {\n    delete_geometry: '\u30B8\u30AA\u30E1\u30C8\u30EA\u30FC\u3092\u524A\u9664',\n  },\n  es: {\n    delete_geometry: 'Eliminar geometr\u00EDa',\n  },\n  tr: {\n    delete_geometry: 'Geometriyi sil',\n  },\n  it: {\n    delete_geometry: 'Elima geometria',\n  },\n  th: {\n    delete_geometry: '\u0E25\u0E1A\u0E23\u0E39\u0E1B\u0E17\u0E23\u0E07\u0E40\u0E23\u0E02\u0E32\u0E04\u0E13\u0E34\u0E15',\n  },\n})\n\n/**\n@function geometry\n\n@description\nThe geometry method will create an OL entry.Style object from the entry.style JSON. If undefined the entry.location.Style will be assigned.\n\nThe entry will be decorated with a show() method if not implicit.\n\nBy default a checkbox element will be returned which can trigger the show method or will hide the geometry in the mapview if toggled off.\n\nDrawing elements will be displayed in the entry.node for the entry.draw{} configuration.\n\nThe draw object can be nested within the entry.edit{} configuration object. In this case the edit and draw elements will only be visible if editing is enabled for the location.\n\nA vector layer entry.L will be created to render a style feature for the geometry entry in the entry.mapview.\n\n@param {infoj-entry} entry type:geometry entry.\n@property {boolean} entry.display Whether the geometry should be displayed in the mapview.\n@property {Object} entry.value geometry as JSON value.\n@property {Object} entry.style MAPP style configuration.\n@property {string} [entry.format='GeoJSON'] format for entry.value geometry.\n@property {Object} [entry.edit] configuration object for editing the geometry.\n@property {Object} [entry.draw] configuration object for mapview draw interaction.\n@property {Function} [entry.api] Method to request geometry from an external API.\n\n@return {HTMLElement} elements for the location view.\n*/\nexport default function geometry(entry) {\n\n  entry.format ??= 'GeoJSON'\n\n  // Assigning the mapview to the entry makes the entry behave like a layer object for draw and modify interactions.\n  entry.mapview ??= entry.location?.layer?.mapview\n\n  // The geometry value must be JSON.\n  entry.value = typeof entry.value === 'string' ?\n    JSON.parse(entry.value) : entry.value\n\n  entry.srid ??= entry.location?.layer?.srid\n\n  entry.zIndex ??= entry.location?.layer?.zIndex || 99\n\n  // Drawing is only available within an edit context.\n  if (entry.edit?.draw) {\n\n    entry.draw = entry.edit.draw\n  }\n\n  // Editing with drawing is toggled off.\n  if (entry._edit?.draw) delete entry.draw\n\n  // Return if entry has no geometry value and cannot be drawn in to.\n  if (!entry.value && !entry.draw && !entry.api) return;\n\n  // Assign entry.style to location.style if entry.style is not an empty object.\n  if (entry.style && Object.keys(entry.style).length) {\n    entry.style = { ...entry.location?.style, ...entry.style }\n  }\n  \n  // Create ol style from entry.style if not yet defined.\n  entry.Style ??= mapp.utils.style(entry.style)\n\n  // Bind the show method to entry.\n  entry.show ??= show\n\n  // Bind the modify method to entry.\n  entry.modify ??= modify\n\n  entry.label ??= 'Geometry'\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show()\n\n  // Create checkbox to control geometry display.\n  entry.chkbox = mapp.ui.elements.chkbox({\n    label: entry.label,\n    data_id: `chkbox-${entry.key}`,\n    checked: !!entry.display,\n\n    // API entries will not be disabled without a value.\n    disabled: entry.disabled || (!entry.value && !entry.api),\n    onchange: (checked) => {\n\n      // Show geometry of checked.\n      if (checked) return entry.show();\n\n      // Remove the geometry layer from map.\n      entry.display = false\n      entry.L && entry.location.layer.mapview.Map.removeLayer(entry.L)\n    }\n  })\n\n  entry.elements = entry.api_elements || []\n\n  // Call the draw method \n  draw(entry);\n\n  edit(entry);\n\n  const icon = entry.style && mapp.utils.html`\n    ${mapp.ui.elements.legendIcon(\n    Object.assign({ width: 24, height: 24 }, entry.style)\n  )}`;\n\n  // Return checkbox only.\n  return mapp.utils.html.node`\n    <div class=\"flex-spacer\">${entry.chkbox}${icon}</div>\n    ${entry.elements}`\n}\n\n/**\n@function show\n\n@description\nThe show method is bound to the geometry type making this the entry object.\n\nThe show method sets the entry.display flag and associated checkbox element status true.\n\nA geometry can be requested from an entry.api() method if no geometry entry.value is present.\n\nAn existing OL vector layer entry.L will be removed from the mapview and deleted.\n\nA new OL vector layer entry.L will be created and added to the mapview.\n\n@this infoj-entry\n*/\nasync function show() {\n\n  this.display = true\n\n  // the show event maybe triggered by an API, draw, or modify interaction.\n  const chkbox = this.location.view?.querySelector(`[data-id=chkbox-${this.key}] input`)\n\n  if (chkbox) chkbox.checked = true\n\n  if (!this.value && this.api) {\n\n    // Disable location view while awaiting API response.\n    this.blocking && this.location.view?.classList.add('disabled')\n\n    await this.api(this)\n  }\n\n  if (this.L) {\n\n    // Remove existing layer to prevent assertion error.\n    this.location.layer.mapview.Map.removeLayer(this.L)\n    delete this.L\n  }\n\n  // Create new geometry layer from entry value\n  this.L = this.location.layer.mapview.geometry(this)\n\n  // Removes layer from mapview when location is removed.\n  this.location.Layers.push(this.L)\n}\n\n/**\n@function edit\n@description\nThe edit method will push elements for geometry edits into the entry.elements array.\n\n@param {infoj-entry} entry type:geometry entry.\n@property {Object} [entry.edit] editing must be configured for the geometry entry.\n@property {Object} [entry.value] entry must have a geometry value to be editable.\n*/\n\nfunction edit(entry) {\n\n  if (!entry.edit) return;\n\n  // Editing requires a value to be edited.\n  if (!entry.value) return;\n\n  if (entry.field !== entry.location.layer.geomCurrent())\n\n  entry.elements.push(mapp.utils.html`\n    <button\n      class=\"flat wide no-colour\"\n      onclick=${() => {\n\n        // Set value to null and update.\n        entry.location.layer.mapview.interaction.finish()\n        entry.display = false\n        entry.value = null\n        update(entry)\n    }}>\n    ${entry.edit.delete_label || mapp.dictionary.delete_geometry}`)\n\n  entry.elements.push(mapp.utils.html.node`\n    <button\n      class=\"flat bold wide primary-colour modify-btn\"\n      onclick=${(e)=>entry.modify(e)}>\n      ${entry.edit.modify_label || mapp.dictionary.modify_geometry}`)\n}\n\n/**\n@function modify\n\n@description\nThe modify method will toggle a mapview modify interaction for the entry geometry.\n\nThe entry.show() method will be called prior to the modify interaction.\n\n@this infoj-entry\n*/\n\n// Method for button element to call modify interaction.\nfunction modify(e) {\n\n  const entry = this;\n\n  // the modify event maybe triggered by an API.\n  const btn = e.target\n\n  // Check whether to cancel interaction.\n  if (btn.classList.contains('active')) {\n\n    // Cancel modify interaction.\n    entry.location.layer.mapview.interactions.highlight()\n    return;\n  }\n\n  btn.classList.add('active')\n\n  // Tick display checkbox if not already set.\n  !entry.display && entry.show()\n\n  // Remove existing entry geometry layer.\n  entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n  const feature = entry.L.getSource().getFeatures()[0]\n\n  entry.location.layer.mapview.interactions.modify({\n    Feature: feature.clone(),\n    layer: entry.location.layer,\n    snap: entry.edit.snap,\n    srid: entry.srid || entry.location.layer.srid,\n    callback: feature => {\n\n      // Reset interaction and button\n      btn.classList.remove('active')\n\n      delete entry.location.layer.mapview.interaction\n\n      mapp.ui.elements.helpDialog();\n\n      // Set highlight interaction if no other interaction is current after 400ms.\n      setTimeout(() => {\n        !entry.location.layer.mapview.interaction && entry.location.layer.mapview.interactions.highlight()\n      }, 400)\n\n      // The callback returns a feature as geojson.\n      if (feature) {\n\n        // Assign feature geometry as new value.\n        entry.value = feature.geometry\n      \n        update(entry)\n      } else {\n\n        // Add original layer back with no new feature geometry returned from draw interaction.\n        entry.location.layer.mapview.Map.addLayer(entry.L)\n      }\n    }\n  })\n}\n\n/**\n@function draw\n\n@description\nThe draw method push drawing interface elements to the entry.elements[] array.\n\n@param {infoj-entry} entry type:geometry entry.\n*/\nfunction draw(entry) {\n\n  // Short circuit without an entry.draw config.\n  if (!entry.draw) return;\n\n  Object.keys(entry.draw).forEach(key => {\n\n    if (entry.draw[key] === true) {\n      entry.draw[key] = {}\n    }\n\n    if (mapp.ui.elements.drawing[key]) {\n\n      entry.draw[key].callback ??= drawCallback\n\n      entry.elements.push(mapp.ui.elements.drawing[key](entry))\n    }\n  })\n\n  function drawCallback(feature){\n\n    mapp.ui.elements.helpDialog();\n\n    if (!feature) return;\n\n    // Assign feature geometry as new value.\n    entry.value = feature.geometry\n\n    update(entry)\n  }\n}\n\n/**\n@function update\n\n@description\nThe update method will update the geometry entry.value in the location data at rest.\n\nUpdate depedents and the location view.\n\n@param {infoj-entry} entry type:geometry entry.\n*/\nasync function update(entry) {\n\n  if (entry.L) {\n\n    // Remove existing entry geometry layer.\n    entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n    delete entry.L\n  }\n\n  entry.location.view?.classList.add('disabled')\n\n  // Update the geometry field value.\n  await mapp.utils.xhr({\n    method: 'POST',\n    url:\n      `${entry.location.layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'location_update',\n        locale: entry.location.layer.mapview.locale.key,\n        layer: entry.location.layer.key,\n        table: entry.location.table,\n        id: entry.location.id,\n      }),\n    body: JSON.stringify({ [entry.field]: entry.value }),\n  })\n\n  if (entry.dependents) {\n    await entry.location.syncFields(entry.dependents)\n  }\n\n  if (entry.location.layer.geom === entry.field) {\n\n    // Reload the layer if the layers geom field has been updated.\n    entry.location.layer.reload()\n  }\n\n  entry.location.viewEntries.remove()\n  entry.location.view?.classList.remove('disabled')\n  entry.location.viewEntries = entry.location.view.appendChild(mapp.ui.locations.infoj(entry.location))\n}\n", "export default entry => {\n\n  let val = mapp.utils.html`\n    <pre><code>${JSON.stringify(entry.value, null, 2)}`\n\n  if (entry.edit) {\n\n    val = mapp.utils.html`\n    <textarea\n      style=\"auto; min-height: 50px;\"\n      onfocus=${e => {\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }}\n      onfocusout=${e => {\n        e.target.style.height = 'auto';\n      }}\n      oninput=${e => {\n\n        entry.json = (() => {\n          try {\n            return JSON.parse(e.target.value)\n          } catch (e) {\n            return false \n          }\n        })();\n\n        e.target.style.border = entry.json ? 'none' : '1px solid red';\n      }}\n      onkeyup=${e => {\n        entry.newValue = typeof entry.json !== 'object' ? entry.value : entry.json;\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}\n      onkeydown=${e => setTimeout(() => {\n        e.target.style.height = 'auto';\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }, 100)}>${JSON.stringify(entry.value, null, 2)}`\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">${val}`\n\n  return node\n}", "export default entry => {\n\n  // The entry has already been processed.\n  // There is an entry.panel to be rendered into the entry.node.\n  if (entry.panel) return entry.panel;\n\n  // Assign mapview to entry to provide shortened lookup.\n  entry.mapview ??= entry.location.layer.mapview\n\n  if (!entry.mapview) {\n\n    console.warn(`mvt_clone entry requires a mapview.`)\n    return;\n  }\n\n  // Assign the mvt layer to be cloned from mapview layers.\n  entry.Layer = entry.mapview.layers[entry.layer]\n\n  if (!entry.Layer) {\n    console.warn('mvt_clone Layer not found in mapview.layers object.')\n    return;\n  }\n\n  entry.zIndex ??= entry.Layer.zIndex\n\n  // The entry must have a style object.\n  entry.style ??= entry.Layer.style\n\n  if (entry.style.default) {\n\n    // Assign the location style to the default style.\n    entry.style.default = {...entry.location?.style, ...entry.style.default}\n  }\n\n  // Add entry.key to the entry object.\n  entry.key ??= entry.Layer.key;\n  \n  // Update entry.style config.\n  mapp.layer.styleParser(entry)\n\n  // Create clone VectorTile layer.\n  entry.L = new ol.layer.VectorTile({\n    source: entry.Layer.L.getSource(),\n    renderBuffer: 200,\n    zIndex: entry.zIndex,\n\n    // Assign style from entry.style\n    style: mapp.layer.featureStyle(entry)\n  });\n\n  // Add the clone layer to the mvt layer clones.\n  entry.Layer.clones.add(entry.L)\n\n  // Remove zoom level check from mapview changeEnd event.\n  entry.location.removeCallbacks.push(() => {\n\n    entry.mapview.Map.removeLayer(entry.L)\n\n    entry.Layer.clones.delete(entry.L)\n\n    entry.mapview.Map.getTargetElement().removeEventListener('changeEnd', chkZoom)\n  })\n\n  if (entry.style.themes) {\n\n    // Assign the first theme from themes if undefined.\n    entry.style.theme ??= entry.style.themes[Object.keys(entry.style.themes)[0]]\n  }\n\n  // Create a style panel as entry.style.panel and append to entry.node.\n  entry.style.panel = mapp.ui.layers.panels.style(entry)\n\n  if (entry.style.panel) {\n    entry.style.panel.style.display = 'none'\n    entry.view = entry.panel\n  }\n\n  // Assign method to show the clone layer.\n  entry.show = async () => {\n\n    entry.display = true;\n\n    // Create query paramString from the entry object.\n    const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n    // Query the featureLookup.\n    entry.featureLookup = await mapp.utils.xhr(`${entry.host || entry.mapview?.host || mapp.host}/api/query?${paramString}`)\n\n    // The query does not return a response.\n    if (entry.featureLookup === null) {\n\n      // Disable the chkbox input.\n      entry.panel.querySelector('input').disabled = true\n\n      if (entry.style.panel) {\n        entry.style.panel.style.display = 'none'\n      }\n\n      return;\n    }\n\n    if (!Array.isArray(entry.featureLookup)) {\n\n      entry.featureLookup = [entry.featureLookup]\n    }\n\n    try {\n      entry.mapview.Map.addLayer(entry.L)\n\n    } catch {\n      // Will catch assertation error when layer is already added.\n    }\n\n    if (entry.style.panel) {\n      entry.style.panel.style.display = 'block'\n    }\n  };\n\n  // Assign method to hide the clone layer.\n  entry.hide = async () => {\n\n    entry.display = false\n\n    // Remove the geometry layer from map.\n    entry.mapview.Map.removeLayer(entry.L)\n\n    // Hide the style drawer.\n    if (entry.style.panel) {\n      entry.style.panel.style.display = 'none'\n    }\n  }\n\n  // Create checkbox to control geometry display.\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'MVT Clone',\n    data_id: `${entry.key}-chkbox`,\n    checked: !!entry.display,\n    onchange: (checked) => checked ? entry.show() : entry.hide()\n  })\n\n  // Create a node consistent of the chkbox and the style drawer.\n  entry.panel = mapp.utils.html.node`<div>\n    ${chkbox}\n    ${entry.style.panel}`\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show()\n\n  // Disable chkbox if layer is out of zoom range\n  function chkZoom() {\n\n    // The mvt layer can be displayed at all zoom levels.\n    if (!entry.Layer.tables) return;\n\n    // if the featureLookup is null, the layer cannot be displayed.\n    // This is for when you zoom out beyond the zoom range of the layer, and then zoom back in.\n    if (entry.featureLookup === null) return; \n\n    // The clone layer cannot be displayed.\n    if (entry.Layer.tableCurrent() === null) {\n\n      // Disable checkbox.\n      entry.panel.querySelector('input').disabled = true\n\n      // Hide style drawer if present.\n      if (entry.style.panel) {\n        entry.style.panel.style.display = 'none'\n      }\n\n      return;\n    }\n\n    // Enable checkbox.\n    entry.panel.querySelector('input').disabled = false\n\n    // Display style drawer if present.\n    if (entry.style.panel) {\n      entry.style.panel.style.display = 'block'\n    }\n  }\n\n  chkZoom()\n\n  // Add zoom level check to mapview changeEnd event.\n  entry.mapview.Map.getTargetElement().addEventListener('changeEnd', chkZoom)\n\n  // Return the node to the location view.\n  return entry.panel\n}", "/**\nExports the numeric entries method.\n\n@module /ui/locations/entries/numeric\n*/\n\n/**\n@function numeric\n\n@description\nReturns a numeric entry node for the location.view.\n\nThe string value displayed in the location view will be formatted according to the formatterParams.\n\nThe mapp.language property value will be assigned as default locale for localeString formatting.\n\nFormatting will be surpressed if the formatterParams are set to null.\n\n@param {infoj-entry} entry type:numeric or type:integer infoj-entry typedef object.\n@property {numeric} entry.value The entry value.\n@property {numeric} [entry.newValue] The new ntry value not yet stored.\n@property {Object} [entry.formatterParams] Configuration for the localeString number format.\n@property {String} [entry.suffix] Suffix appended to stringValue.\n@property {String} [entry.prefix] Prefix prepended to stringValue.\n@property {Object} [entry.edit] Editing config for entry.\n\n@returns {HTMLElement} Element to display a string of numeric entry value.\n*/\nexport default function numeric(entry) {\n\n  if (entry.edit) return edit(entry)\n\n  if (entry.value === null || isNaN(entry.value)) return;\n\n  mapp.utils.formatNumericValue(entry)\n  \n  return mapp.utils.html.node`<div \n    class=\"val\"\n    style=${entry.css_val}\n    >${entry.stringValue}`;\n}\n\n/**\n@function edit\n\n@description\nReturns a numeric input for editing numeric or integer type entries.\n\nWill return a slider element if edit.range is true. A slider element can only be returned if the current value is valid.\n\nNumeric entry edits must be bound by min and max.\n\nDefaults for non big integer will be applied if missing.\n\n@param {infoj-entry} entry type:numeric or type:integer infoj-entry typedef object.\n@property {numeric} entry.value The entry value.\n@property {Object} entry.edit Editing config for entry, can be Boolean.\n\n@returns {HTMLElement} Input element to modify numeric entry value.\n*/\nfunction edit(entry) {\n\n  if (entry.edit === true) {\n\n    entry.edit = {}\n  }\n\n  // Assign callback method to dispatch valChange event.\n  entry.edit.callback ??= () => {\n    entry.location.view?.dispatchEvent(\n      new CustomEvent('valChange', { detail: entry })\n    );\n  }\n\n  // Set limits for editing.\n  entry.edit.min ??= entry.min || -2147483648\n  entry.edit.max ??= entry.max || 2147483647\n  entry.edit.step ??= entry.step\n    || entry.type === 'integer'\n    ? 1\n    : 0.1;\n\n  Object.assign(entry, entry.edit)\n\n  if (entry.edit.range\n    && entry.value\n    && entry.value > entry.min\n    && entry.value < entry.max) {\n\n    return mapp.ui.elements.slider(entry);\n  }\n\n  return mapp.ui.elements.numericInput(entry)\n}\n", "mapp.utils.merge(mapp.dictionaries, {\n  'en': {\n    pin: 'Pin',\n  },\n  'de': {\n    pin: 'Pin',\n  },\n  'zh': {\n    pin: '\u6807\u6CE8',\n  },\n  'zh_tw': {\n    pin: '\u6A19\u6CE8',\n  },\n  'pl': {\n    pin: 'Oznacz',\n  },\n  'fr': {\n    pin: 'Marquer',\n  },\n  'ja': {\n    pin: '\u30D4\u30F3',\n  },\n  'es': {\n    pin: 'Marcar',\n  },\n  'tr': {\n    pin: 'Sabitle',\n  },\n  'it': {\n    pin: 'Pin'\n  },\n  'th': {\n    pin: '\u0E40\u0E02\u0E47\u0E21\u0E2B\u0E21\u0E38\u0E14',\n  },\n})\n\nexport default entry => {\n\n  if (!Array.isArray(entry.value)) {\n\n    console.warn(`Entry type pin requires a value array.`)\n    return;\n  }\n\n  // Assign srid from location.layer if not implicit.\n  entry.srid ??= entry.location.layer.srid\n\n  // Remove existing pin layer\n  entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n  entry.zIndex ??= Infinity\n\n  entry.Style ??= entry.style ? mapp.utils.style(entry.style) : entry.location.pinStyle\n\n  entry.geometry = {\n    type: 'Point',\n    coordinates: entry.value,\n  }\n\n  entry.L = entry.location.layer.mapview.geoJSON(entry)\n\n  entry.location.layer.display && entry.location.layer.L?.changed()\n\n  entry.location.Layers.push(entry.L)\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: `${entry.label || mapp.dictionary.pin}`,\n    checked: true,//!!entry.display,\n    onchange: (checked) => {\n      entry.display = checked\n      checked ?\n        entry.location.layer.mapview.Map.addLayer(entry.L) :\n        entry.location.layer.mapview.Map.removeLayer(entry.L);\n    }\n  })\n\n  const node = mapp.utils.html.node`${chkbox}`\n\n  return node\n}", "export default entry => {\n\n    entry.pills ??= entry.value || []\n \n    mapp.ui.elements.pills(entry)\n  \n    return entry.container\n  }", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    report: 'Report',\n    link: 'Link',\n  },\n  de: {\n    report: 'Report',\n    link: 'Link',\n  },\n  zh: {\n    report: '\u62A5\u544A',\n    link: '\u5173\u8054',\n  },\n  zh_tw: {\n    report: '\u5831\u544A',\n    link: '\u95DC\u806F',\n  },\n  pl: {\n    report: 'Raport',\n    link: 'Link',\n  },\n  fr: {\n    report: 'Rapport',\n    link: 'Lien',\n  },\n  ja: {\n    report: '\u30EC\u30DD\u30FC\u30C8',\n    link: '\u30EA\u30F3\u30AF',\n  },\n  es: {\n    report: 'Informe',\n    link: 'Enlace',\n  },\n  tr: {\n    report: 'Rapor',\n    link: 'Baglanti',\n  },\n  it: {\n    report: 'Rapporto',\n    link: 'Link',\n  },\n  th: {\n    report: '\u0E23\u0E32\u0E22\u0E07\u0E32\u0E19',\n    link: '\u0E25\u0E34\u0E07\u0E04\u0E4C',\n  },\n})\n\nexport default entry => {\n\n  // Ensure that params are set for link generation\n  entry.params ??= {}\n\n  if (entry.report) {\n\n    // Assign URL path for report.\n    entry.url ??= `${entry.location.layer.mapview.host}/view?`\n\n    // Assign URL params for report.\n    Object.assign(entry.params, {\n      template: entry.report.template,\n      id: entry.location.id,\n      layer: entry.location.layer.key,\n      locale: entry.location.layer.mapview.locale.key\n    })\n\n    // Assign entry.label for link text.\n    entry.label ??= `${entry.report.label || mapp.dictionary.report}`\n    entry.icon_class ??= 'mask-icon wysiwyg'\n  }\n\n  if (!entry.url) {\n\n    console.warn(`An entry.url must be defined for the URL path.`)\n    return;\n  }\n\n  // Set default label and icon_class\n  entry.icon_class ??= 'mask-icon open-in-new'\n  entry.label ??=  `${mapp.dictionary.link}`\n\n  // Construct href from URL + params.\n  const href = entry.url + mapp.utils.paramString(entry.params)\n\n  const node = mapp.utils.html.node`\n    <div class=\"link-with-img\">\n      <div style=${entry.icon_style || ''} class=${entry.icon_class}></div>\n      <a target=\"_blank\" href=${href}>${entry.label}`\n\n  return node\n}", "export default entry => {\n\n  const tabview = document.querySelector(`[data-id=${entry.target}]`)\n\n  // Assign border style based on the location view record (from list)\n  entry.tab_style = `border-bottom: 3px solid ${entry.location.style.strokeColor}`\n\n  // Create tabview after dataview creation is complete.\n  tabview.dispatchEvent(new CustomEvent('addTab', {\n    detail: entry\n  }))\n\n  // Show the tab if display is true.\n  entry.display && entry.show()\n\n  return mapp.ui.elements.chkbox({\n    label: entry.label,\n    checked: !!entry.display,\n    onchange: (checked) => {\n\n      entry.display = checked\n\n      // Show or remove tab according to the checked/display value.\n      entry.display ?\n        entry.show() :\n        entry.remove()\n  \n    }\n  })\n}", "/**\n## ui/locations/entries/text\n\nThe locations entries text module exports the default text entry as mapp.ui.locations.entries.text(entry)\n\n@module /ui/locations/entries/text\n*/\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    loading: 'Loading',\n    no_options_available: 'No options available.'\n  },\n  de: {\n    loading: 'Wird geladen',\n    no_options_available: 'Keine Auswahl verf\u00FCgbar'\n  },\n  zh: {\n    loading: '\u52A0\u8F7D\u4E2D',\n    no_options_available: '\u65E0\u9009\u9879'\n  },\n  zh_tw: {\n    loading: '\u8F09\u5165\u4E2D',\n    no_options_available: '\u7121\u9078\u9805'\n  },\n  pl: {\n    loading: '\u0141adowanie',\n    no_options_available: 'Opcja niedost\u0119pna'\n  },\n  fr: {\n    loading: 'Chargement',\n    no_options_available: 'Pas d\\'options disponibles.'\n  },\n  ja: {\n    loading: '\u8AAD\u307F\u8FBC\u307F\u4E2D',\n    no_options_available: '\u9078\u629E\u80A2\u306A\u3057'\n  },\n  es: {\n    loading: 'Cargando',\n    no_options_available: 'No hay opciones disponibles.'\n  },\n  tr: {\n    loading: 'Yukleniyor',\n    no_options_available: 'Secenek bulunamadi'\n  },\n  it: {\n    loading: 'Caricamento',\n    no_options_available: 'Nessuna opzione disponibile'\n  },\n  th: {\n    loading: '\u0E01\u0E33\u0E25\u0E31\u0E07\u0E42\u0E2B\u0E25\u0E14',\n    no_options_available: '\u0E44\u0E21\u0E48\u0E21\u0E35\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E2B\u0E49\u0E40\u0E25\u0E37\u0E2D\u0E01'\n  },\n})\n\n/**\n@function text\n\n@description\nThe text method will return the textedit function for editable entries or an HTML node with the formated field value.\n\nNon editable entries without a value will return void.\n\n@param {infoj-entry} entry type:geometry entry.\n@property {Object} entry.value geometry as JSON value.\n@property {Object} [entry.edit] configuration object for editing the value.\n\n@return {HTMLElement} elements for the location view.\n*/\n\nexport default function text(entry) {\n\n  // Short circuit if not editable without a value.\n  if (!entry.edit && !entry.value) return;\n\n  // Return inputs for editing.\n  if (entry.edit) return textedit(entry)\n\n  // Return value as text, including prefix and suffix.\n  return mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=${entry.css_val}>\n      ${entry.prefix}${entry.value}${entry.suffix}`\n}\n\n/**\n@function textedit\n\n@description\nThe textedit method will return input elements for editable type:text entries.\n\nThe container populated by the textoptions method will be returned if an options array has been defined in the edit object.\n\nThe options array will be populated with distinct values from the data at rest if the length of the options array is naught.\n\nA text input is returned if no options are configured.\n\nThe oninput method for the text input will split the value as an array if an arraySeparator has been defined in the entry.edit{} property.\n\n@param {infoj-entry} entry type:geometry entry.\n@property {Object} entry.value geometry as JSON value.\n@property {Object} [entry.edit] configuration object for editing the value.\n\n@return {HTMLElement} elements for the location view.\n*/\n\nfunction textedit(entry) {\n\n  // If edit options are defined.\n  if (entry.edit.options) {\n\n    // Create container with loading text.\n    entry.container = mapp.utils.html.node`<div>${mapp.dictionary.loading}`;\n\n    // If options is an array and contains values, we can create a dropdown.\n    if (entry.edit.options.length) {\n\n      // Create dropdown from options.\n      textoptions(entry)\n\n    }\n    // If options is empty array, we need to query the table to populate it.\n    else {\n\n      // We can query a particular template or Query distinct field values from the layer table.\n      mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query?` +\n        mapp.utils.paramString({\n          template: entry.edit.query || (entry.jsonb_field || entry.json_field ? 'distinct_values_json' : 'distinct_values'),\n          dbs: entry.location.layer.dbs,\n          locale: entry.location.layer.mapview.locale.key,\n          layer: entry.location.layer.key,\n          filter: entry.location.layer.filter?.current,\n          table: entry.location.layer.tableCurrent(),\n          field: entry.json_field || entry.jsonb_field || entry.field,\n          key: entry.jsonb_key || entry.json_key,\n          id: entry.location.id\n        })).then(response => {\n\n          // If response is null, we can not create a dropdown, so we return a message.\n          if (response === null) {\n            entry.container.innerHTML = `${mapp.dictionary.no_options_available}`\n            return;\n          }\n\n          // Return first value from object row as options array.\n          entry.edit.options = [response].flat().map(row => {\n            return Object.values(row)[0]\n          })\n\n          // Create dropdown from options.\n          textoptions(entry)\n        })\n    }\n\n    // Return container.\n    return entry.container\n  }\n\n  // Return text input if no options are defined (free text input).\n  return mapp.utils.html.node`\n    <input\n      type=\"text\"\n      maxlength=${entry.edit.maxlength}\n      value=\"${entry.newValue || entry.value || ''}\"\n      placeholder=\"${entry.edit.placeholder || ''}\"\n      onkeyup=${onInput}>`\n\n  function onInput(e) {\n\n    // Split target value as array if an arraySeparator has been provided.\n    entry.newValue = entry.edit.arraySeparator\n      ? e.target.value.split(entry.edit.arraySeparator)\n      : e.target.value;\n\n    entry.location.view?.dispatchEvent(\n      new CustomEvent('valChange', { detail: entry }))\n\n  }\n}\n\n/**\n@function textoptions\n\n@description\nThe textoptions method will render a dropdown control for the edit.options[] array values into the entry.container.\n\n@param {infoj-entry} entry type:geometry entry.\n@property {Object} entry.value geometry as JSON value.\n@property {Object} [entry.edit] configuration object for editing the value.\n*/\n\nfunction textoptions(entry) {\n\n  // Create array of objects for optionEntries.\n  const optionEntries = entry.edit.options.map(option => ({\n\n    // Assign null if option is null.\n    title: option === null ? null :\n\n      // Assign string as title.\n      typeof option === 'string' && option\n\n      // Assign first key as title.\n      || Object.keys(option)[0],\n\n    // Assign null if option is null.\n    option: option === null ? null :\n\n      // Assign string as option.\n      typeof option === 'string' && option\n\n      // Assign first value as option.\n      || Object.values(option)[0]\n  }))\n\n  // Find title for the entry.value\n  const option = optionEntries.find(e => e.option === entry.value)\n\n  // Render dropdown.\n  mapp.utils.render(entry.container, mapp.ui.elements.dropdown({\n    placeholder: entry.edit.placeholder,\n    span: option?.title || entry.value,\n    // Set entries to optionEntries provided.\n    entries: optionEntries,\n    callback: (e, _entry) => {\n\n      // Assign entry option as newValue.\n      entry.newValue = _entry.option\n\n      // Check whether newValue is different from current value.\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', {\n          detail: entry,\n        })\n      );\n    }\n  }))\n}", "export default entry => {\n\n  let val = entry.type !== 'html' ? entry.value : ''\n\n  if (entry.edit) {\n\n    val = mapp.utils.html`\n    <textarea\n      style=\"auto; min-height: 50px;\"\n      maxlength=${entry.edit.maxlength}\n      placeholder=\"${entry.edit.placeholder || ''}\"\n      onfocus=${e => {\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }}\n      onfocusout=${e => {\n        e.target.style.height = 'auto';\n      }}\n      onkeyup=${e => {\n        entry.newValue = e.target.value\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}\n      onkeydown=${e => setTimeout(() => {\n        e.target.style.height = 'auto';\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }, 100)}>\n      ${entry.newValue || entry.value || ''}`\n  }\n\n  const node = mapp.utils.html.node`\n  <div\n    class=\"val\"\n    style=\"${`${entry.css_val || ''}`}\">${val}`\n\n  if (!entry.edit && entry.type === 'html') {\n    node.innerHTML = entry.value || ''\n  }\n\n  return node\n}", "export default entry => {\n\n  let val\n\n  let stringVal = entry.value && entry.value.toString().replace('.',':')\n\n  stringVal = stringVal && stringVal.length < 3 && `${stringVal}:00` || stringVal\n\n  if (entry.edit) {\n\n    val = mapp.utils.html.node`\n      <input\n        type=\"time\"\n        value=${stringVal}\n        onchange=${e => {\n\n          entry.newValue = parseFloat(e.target.value.replace(':','.'))\n\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n\n        }}>`;\n        \n  } else {\n\n    val = stringVal\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${val}`\n\n  return node\n}", "\n/**\n## ui/locations/entries/vector_layer\n\nThe vector_layer entry module exports a default [location] entry method to process infoj `type:vector_layer` entries.\n\n@module /ui/locations/entries/vector_layer\n*/\n\n/**\n\n@function vector_layer\n\n@description\nmapp.ui.locations.entries.vector_layer(entry)\n\nThe method processes a vector_layer entry and returns a panel node to the location view.\nThe vector_layer entry generates a checkbox to control the display of a vector layer on the map.\n\n```json\n{\n  \"key\": \"nearest_to\",\n  \"label\": \"Nearest to\",\n  \"type\": \"vector_layer\",\n  \"format\": \"wkt\",\n  \"srid\": \"4326\",\n  \"zIndex\": 94,\n  \"query\": \"nearest_to\",\n  \"queryparams\": {\n    \"id\": true,\n    \"reduce\": true\n  },\n  \"style\": {\n    \"default\": {\n      \"icon\": {\n        \"type\": \"triangle\"\n      }\n    }\n  }\n}\n```\n\n@param {infoj-entry} entry\n\n@property {string} entry.query The query for the generation of the data to be displayed.\n@property {string} entry.format The format for the entry.\n@property {string} entry.theme The theme for the entry.\n@property {string} [entry.key] The unique identifier for the entry.\n@property {string} [entry.label] The label for the entry.\n@property {string} [entry.host] The host for the entry.\n@property {string} [entry.zIndex] The z-index for the entry.\n@property {string} [entry.display] The display flag for the entry.\n*/\nexport default function vector_layer(entry) {\n\n  // Assign mapview to entry to provide shortened lookup.\n  entry.mapview ??= entry.location.layer.mapview\n\n  if (!entry.mapview) {\n\n    console.warn(`vector_layer entry requires a mapview.`)\n    return;\n  }\n\n  entry.zIndex ??= Object.keys(entry.mapview.layers).length + 1\n\n  entry.style ??= {}\n\n  // If entry.style.default (default style) exists, merge the location style with the default style.\n  if (entry.style.default) {\n\n    // If entry.style.default.icon exists, merge the location style with the default style icon.\n    if (entry.style.default.icon) {\n\n      // Assign the location style to the default style icon if it exists.\n      entry.style.default.icon = { ...entry.location?.style, ...entry.style.default.icon }\n    }\n\n    // Assign the location style to the default style.\n    entry.style.default = { ...entry.location?.style, ...entry.style.default }\n  }\n\n  // Update entry.style config.\n  mapp.layer.styleParser(entry)\n\n  if (entry.style.themes) {\n\n    // Assign the first theme from themes if undefined.\n    entry.style.theme ??= entry.style.themes[Object.keys(entry.style.themes)[0]]\n  }\n\n  entry.elements = entry.api_elements || []\n\n  entry.label ??= 'Vector Layer'\n\n  // Create checkbox to control geometry display.\n  entry.chkbox = mapp.ui.elements.chkbox({\n    label: entry.label,\n    data_id: `chkbox-${entry.key}`,\n    checked: !!entry.display,\n    onchange: (checked) => checked ? entry.show(entry) : hide(entry)\n  })\n\n  entry.show ??= show\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show(entry)\n\n  // Create a node consistent of the chkbox and the style drawer.\n  entry.panel = mapp.utils.html.node`<div>${entry.chkbox}${entry.elements}`\n\n  // Remove zoom level check from mapview changeEnd event.\n  entry.location.removeCallbacks.push(() => {\n\n    // Remove layer from map when location is removed.\n    entry.mapview.Map.removeLayer(entry.L)\n  })\n\n  // Return the node to the location view.\n  return entry.panel\n}\n\n/**\n@function show\n\n@description\n`entry.display` flag will be set to true.\nThe `entry.style.panel` element display style will be set to `block`, if it exists.\nThe geometry layer will be added to the map (if it does not already exist).\nThe entry.query will be used to generate a query string and fetch features.\nThe features will be set to the entry object.\nThe entry object will be updated with the features.\nThe entry object will be updated with the layer source.\nThe layer will be added to the map.\n\n@param {entry} entry entry object.\n@property {string} entry.format The type of layer.\n@property {string} entry.key The unique identifier for the entry.\n@property {string} entry.query The query for the generation of the data to be displayed.\n@property {string} entry.host The host for the entry.\n*/\nasync function show(entry) {\n\n  entry.display = true;\n\n  // the show event maybe triggered by an API, draw, or modify interaction.\n  const chkbox = entry.location.view?.querySelector(`[data-id=chkbox-${entry.key}] input`)\n\n  if (chkbox) chkbox.checked = true\n\n  const mapLayers = entry.mapview.Map.getLayers().getArray()\n\n  if (mapLayers.includes(entry.L)) {\n\n    // The layer has already been added to the map.\n    return;\n  }\n\n  // Create query paramString from the entry object.\n  const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n  // Get features from query.\n  entry.features = await mapp.utils.xhr(`${entry.host || entry.mapview?.host || mapp.host}/api/query?${paramString}`)\n\n  if (entry.features instanceof Error) {\n\n    console.warn('Features query failed.')\n    return;\n  }\n\n  if (!entry.features && entry.api instanceof Function) await entry.api(entry)\n\n  if (!entry.features) {\n\n    // Disable checkbox.\n    entry.panel.querySelector('input').disabled = true\n\n    // Hide style drawer if present.\n    if (entry.style.panel) {\n      entry.style.panel.style.display = 'none'\n    }\n    return;\n  }\n\n  // The layer already exists.\n  if (entry.setSource) {\n\n    entry.setSource(entry.features)\n  } else {\n\n    mapp.layer.formats[entry.format](entry)\n  }\n\n  try {\n\n    entry.mapview.Map.addLayer(entry.L)\n\n  } catch {\n    // Will catch assertation error when layer is already added.\n  }\n\n  entry.style.panel?.remove()\n\n  // Create a style panel as entry.style.panel and append to entry.node.\n  entry.style.panel = mapp.ui.layers.panels.style(entry)\n  entry.style.panel && entry.panel.append(entry.style.panel)\n}\n\n/**\n@function hide\n\n@description\n`entry.display` flag will be set to false.\nThe `entry.style.panel` element display style will be set to `none`, if it exists.\nThe geometry layer will be removed from the map.\n\n@param {Object} entry entry object.\n*/\nfunction hide(entry) {\n\n  entry.display = false\n\n  // Hide the style drawer.\n  if (entry.style.panel) entry.style.panel.style.display = 'none'\n\n  // Remove the geometry layer from map.\n  entry.mapview.Map.removeLayer(entry.L)\n}", "/**\n## ui/locations/entries/key\n\nThe key entry module exports a default [location] entry method to process infoj `type:key` entries.\n\n@module /ui/locations/entries/key\n*/\n\n/**\n@function key\n\n@description\nmapp.ui.locations.entries.key(entry)\n\nThe entry method returns a button HTML element which will toggle the location.layer display.\n\nThe button classList reflects whether the layer is displayed or not.\n\n@example\n```json\n{\n  \"type\":\"key\"\n}\n``` \n\n@param {Object} entry\n@param {Object} entry.location.layer The Mapp location layer object.\n\n@return {HTMLElement}\nThe button key element, with an onclick event to toggle the visibility of the layer.\n*/\n\nexport default function key(entry) {\n\n  const classList = `layer-key ${entry.location.layer.display ? 'active' : ''}`\n\n  const node = mapp.utils.html.node`<div>\n    <button \n      class=${classList}\n      title=\"${mapp.dictionary.layer_visibility}\"\n      onclick=\"${e => {\n\n      if (e.target.classList.toggle('active')) {\n\n        entry.location.layer.show();\n      } else {\n\n        entry.location.layer.hide();\n      }\n    }}\">${entry.location.layer.name}`;\n\n  return node;\n}\n", "/**\n## ui/locations/entries/title\n\nThe key entry module exports a default [location] entry method to process infoj `type:title` entries.\n\n@module /ui/locations/entries/title\n*/\n\n/**\nmapp.ui.locations.entries.title(entry)\n\nThe method returns just the title of the entry.\nYou can provide a tooltip (shown when hovering over the title).\nYou can provide a css style for the title (to style the title in a specific way).\n@example\n```json\n{\n  \"title\": \"This is a title\",\n  \"type\":\"title\",\n  \"tooltip\": \"This is a tooltip\",\n  \"css_title\": \"font-weight: 800\"\n}\n``` \n@function title\n@param {Object} entry\n@param {string} entry.title The title of the entry.\n@param {string} entry.tooltip The tooltip of the entry.\n@param {string} entry.css_title The css of the title.\n@return {HTMLElement} The title element.\n*/\n\nexport default function title(entry) {\n  \n    const tooltipSpan = entry.tooltip && mapp.utils.html`\n      <span\n        class=\"tooltip mask-icon question-mark\">${entry.tooltip}`\n  \n    return mapp.utils.html.node`\n      <div\n        class=\"label\"\n        style=${entry.css_title}\n        title=${entry.tooltip}>${entry.title}\n        ${tooltipSpan}`;\n  }", "/**\nThe query_button [location] entries module exports the query_button method as default.\n\n@module /ui/locations/entries/query_button\n*/\n\n/**\n@function query_button\n\n@description\n## mapp.ui.locations.entries.query_button(entry)\nReturns a button element. The `query(entry)` method will be called by the button onclick event.\n\n```js\n{\n  \"label\": \"Snap to Postal Sector\",\n  \"type\": \"query_button\",\n  \"query\": \"catchment_statistics_snap_to_postal_sector\",\n  \"queryparams\": {\n    \"id\": true\n  },\n  \"alert\": \"Query has executed!\",\n  \"reload\": true,\n  \"dependents\": [\n    \"geom_3857\",\n    \"perimeter\",\n    \"area\"\n  ]\n}\n```\n\n@param {infoj-entry} entry type:query_button infoj entry.\n\n@returns {HTMLElement} Location view entry node.\n*/\n\nexport default function _query_button(entry) {\n\n  if (!entry.query) {\n    console.warn('You must provide a query to use \"type\": \"query_button\".');\n    return;\n  };\n\n  // If a label is provided, use it, otherwise use the default\n  entry.label ??= `Run query:${entry.query}`;\n\n  // Return button to update the entry.\n  return mapp.utils.html.node`\n    <button \n      class=\"flat wide bold primary-colour\"\n      onclick=${() => query(entry)}>${entry.label}`;\n};\n\n/**\n@function query\n@async\n\n@description\nWill be called by the onclick event of the query_button element.\n\nThe `entry.location.view` will be disabled.\n\nRuns the `entry.query` template with the provided `entry.queryparams`.\n\nThe `entry.host` defaults to the entry.mapview.host concatenated with the `/api/query` path.\n\nThe location.layer will reload after the query response with the `entry.reload` flag.\n\nThe entry values of fields in the `entry.dependents` array will be synched after the query has been resolved.\n\nThe `entry.alert` message will be displayed after the query has been resolved.\n\nThe `entry.location.view` will be enabled by calling the `updateInfo` element event.\n\n@param {infoj-entry} entry type:query_button infoj entry.\n@property {string} entry.query Query template.\n@property {Object} [entry.queryparams] Parameter for query in template.\n@property {string} [entry.host] The host for the query.\n@property {string} [entry.alert] Alert message after the query has responded.\n@property {boolean} [entry.reload] Reload location.layer if true.\n@property {Array} [entry.dependents] Reload dependent entry.field values.\n*/\n\nasync function query(entry) {\n\n  // Warning for legacy config.\n  if (entry.updated_fields) {\n\n    console.warn('entry.updated_fields is deprecated, please use entry.dependents instead.');\n\n    // If entry.updated_fields, set to entry.dependents and warn\n    entry.dependents ??= entry.updated_fields;\n  }\n\n  // Disable location view.\n  entry.location.view.classList.add('disabled');\n\n  entry.queryparams ??= {}\n\n  entry.queryparams.template = entry.query\n\n  // Stringify paramString from object.\n  const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n  entry.host ??= entry.location.layer.mapview.host + '/api/query'\n\n  // Run query to get data to update the entry on the db.\n  const response = await mapp.utils.xhr(`${entry.host}?${paramString}`);\n\n  if (response instanceof Error) {\n\n    alert('Query failed.')\n\n    // Enable location view.\n    entry.location.view.classList.remove('disabled');\n\n    return;\n  }\n\n  entry.value = response\n\n  entry.alert && alert(entry.alert)\n\n  entry.reload && entry.location.layer.reload()\n\n  if (entry.dependents) {\n\n    // Reload the dependent fields\n    await entry.location.syncFields(entry.dependents)\n\n  }\n\n  // Updating the view will enable the view itself.\n  // No need to enable the button and view themselves.\n  entry.location.view.dispatchEvent(new Event('updateInfo'))\n\n  // Enable location view.\n  entry.location.view.classList.remove('disabled');\n}\n", "/**\n## ui/locations/entries\n\nExports a collection of entry methods for location views.\n\n- boolean\n- dataview\n- date\n- datetime\n- defaults\n- documents\n- geometry\n- html\n- image\n- images\n- integer\n- json\n- pills\n- key\n- link\n- mvt_clone\n- numeric\n- pin\n- report\n- tab\n- text\n- textarea\n- time\n- title\n- vector_layer\n- query_button\n\n@module /ui/locations/entries\n*/\n\n/**\n@global\n@typedef {Object} infoj-entry\nA infoj-entry describes a location property. Locations are configured as an array of JSON Object entries layer.infoj[].\n@property {string} key A unique identifier for the entry. Will be assigned from iteration index in infoj location method if not implicit.\n@property {location} location The entry location.\n@property {*} [value] The entry value.\n@property {string} [field] The database field in layer table which holds the entry data.\n@property {string} [fieldfx] A SQL statement to query the entry value in the location get request.\n@property {string} [title] The title to be displayed with the entry.value.\n@property {boolean} [inline] Flag whether the value should be displayed inline with the title.\n@property {object} [edit] Edit configuration for the entry.\n@property {string} [query] Query template.\n@property {Object} [queryparams] Parameter for query in template.\n@property {string} [label] Label for checkbox element.\n@property {boolean} [display] Entry display flag.\n*/\n\nimport boolean from './boolean.mjs'\n\nimport cloudinary from './cloudinary.mjs'\n\nimport dataview from './dataview.mjs'\n\nimport date from './date.mjs'\n\nimport defaults from './defaults.mjs'\n\nimport geometry from './geometry.mjs'\n\nimport json from './json.mjs'\n\nimport mvt_clone from './mvt_clone.mjs'\n\nimport numeric from './numeric.mjs'\n\nimport pin from './pin.mjs'\n\nimport pills from './pills.mjs'\n\nimport link from './link.mjs'\n\nimport tab from './tab.mjs'\n\nimport text from './text.mjs'\n\nimport textarea from './textarea.mjs'\n\nimport time from './time.mjs'\n\nimport vector_layer from './vector_layer.mjs'\n\nimport key from './key.mjs'\n\nimport title from './title.mjs'\n\nimport query_button from './query_button.mjs'\n\nexport default {\n  boolean,\n  dataview,\n  date,\n  datetime: date,\n  defaults,\n  documents: cloudinary,\n  geometry,\n  html: textarea,\n  image: cloudinary,\n  images: cloudinary,\n  integer: numeric,\n  json,\n  pills,\n  key,\n  link,\n  mvt_clone,\n  numeric,\n  pin,\n  report: link,\n  tab,\n  text,\n  textarea,\n  time,\n  title,\n  vector_layer,\n  query_button\n}\n", "/**\n## ui/locations\n\nThe locations module compiles methods for the creation of location views.\n\n- view\n- listview\n- infoj\n- entries\n\n@module /ui/locations\n*/\n\nimport view from './view.mjs'\n\nimport listview from './listview.mjs'\n\nimport infoj from './infoj.mjs'\n\nimport entries from './entries/_entries.mjs'\n\nexport default {\n  view,\n  listview,\n  infoj,\n  entries\n}", "/**\n## ui/Dataview\n\nThe ui Dataview module exports the Dataview() decorator method to decorate a JSON object and return a `typedef:dataview` object.\n\nDifferent dataview types [eg. ChartJS, Tabulator-tables] require 3rd party libraries loaded via Mapp plugins.\n\n@requires /utils/xhr\n\n@module /ui/Dataview\n*/\n\n/**\n@global\n@typedef {Object} dataview\n@property {string} key A unique for the dataview.\n@property {string} dataview The type of dataview\n@property {HTMLElement} target Target element in which the dataview is rendered.\n@property {Function} create Create method for library supporting the dataview type.\n@property {Function} show Method to show a dataview in the document.\n@property {Function} hide Method to hide a dataview in the document.\n@property {boolean} [dynamic] Dataview should be recreated when shown.\n@property {boolean} [display] Whether the dataview should be displayed.\n@property {Function} [update] Method to update the dataview data from a query.\n@property {boolean} [reload] Dataview should run update query when shown.\n@property {string} [query] Query template for the dataview update method.\n@property {string} [host] Host for the update query.\n@property {Object} [queryparams] Parameter for update query.\n@property {Object} data Data to be displayed in the dataview.\n@property {Function} [setData] Method to set the data in the dataview.\n@property {string} [label] Label for a checkbox input.\n@property {HTMLElement} [chkbox] Input element to toggle the dataview display.\n*/\n\n/**\n@function Dataview\n@async\n\n@description\n## mapp.ui.Dataview()\n\nThe Dataview method will re-create the dataview if called with a decorated dataview object which has a create() method.\n\nThe Dataview method is async for legacy reasons.\n\nAn ID lookup will be attempted if the dataview target is provided as a string value.\n\nA default dataview update method will be assigned if not provided with the dataview configuration. The queryparams from the dataview layer and locale will be spread into the dataview queryparams object.\n\nThe checkDataview() method is run to provide warnings for legacy configurations and check whether the dataview can be created.\n\nThe dataview.show() and dataview.hide() will be assigned if nullish.\n\nThe dataviewToolbar() method will be called prior to creating the dataview.\n\nThe dataview.chkbox element will be created if a label has been provided.\n\nThe dataviewMapChange() method will be called after the dataview has been created.\n\n@param {Object} _this Dataview object.\n@property {HTMLElement} _this.target A document.getElementById() for the target will be attempted if provided as string.\n\n@return {dataview} Decorated dataview object.\n*/\n\nexport default async function Dataview(_this) {\n\n  // A dataview create method has already been assigned by the checkDataview method.\n  if (_this.create instanceof Function) {\n\n    _this.create()\n    return;\n  }\n\n  // The dataview target is defined as string.\n  if (typeof _this.target === 'string') {\n\n    // assign target element by ID.\n    _this.target = document.getElementById(_this.target);\n  }\n\n  // Dataviews must be rendered into a target element.\n  if (!(_this.target instanceof HTMLElement)) {\n    console.warn('Dataviews require a HTMLHtmlElement target');\n    console.log(_this);\n    return;\n  }\n\n  // Return from method if unable to assign dataview type.\n  if (checkDataview(_this) instanceof Error) {\n    return _this.err;\n  }\n\n  // Assign queryparams from layer, locale.\n  _this.queryparams = {\n    ..._this.layer?.mapview?.locale?.queryparams,\n    ..._this.layer?.queryparams,\n    ..._this.queryparams,\n  }\n\n  // Update method for _this.\n  _this.update ??= updateDataview\n\n  _this.show ??= show\n\n  _this.hide ??= hide\n\n  // Create checkbox if a label is provided.\n  _this.chkbox = _this.label && mapp.ui.elements.chkbox({\n    data_id: _this.key,\n    label: _this.label,\n    checked: !!_this.display,\n    disabled: _this.disabled,\n    onchange: (checked) => {\n\n      _this.display = checked\n\n      _this.display\n        ? _this.show()\n        : _this.hide()\n    }\n  })\n\n  // Create dataview toolbar\n  dataviewToolbar(_this)\n \n  dataviewMapChange(_this)\n\n  return _this;\n};\n\n/**\n@function show\n\n@description\n`dataview.display` flag will be set to true.\n\n`dataview.create()` will be assigned and executed.\n\n`dataview.create()` will also be executed with the `dataview.dynamic` flag.\n\n`dataview.update()` will be called with the `dataview.reload` flag.\n\nThe `dataview.target` element display style will be set to `block`.\n\n@param {dataview} _this Dataview object.\n@property {string} dataview The type of dataview\n@property {Function} [create] Create method for library supporting the dataview type.\n@property {boolean} [dynamic] Dataview should be recreated when shown.\n@property {Function} [update] Method to update the dataview data from a query.\n@property {boolean} [reload] Dataview should run update query when shown.\n@property {HTMLElement} target Target element in which the dataview is rendered.\n*/\n\nfunction show() {\n\n  this.display = true\n\n  if (!this.create || this.dynamic) {\n    this.create = function () {\n      mapp.ui.utils[this.dataview].create(this);\n    }\n    this.create()\n\n    // Execute update if available\n    this.update && this.update()\n\n  } else if (this.reload) {\n\n    // Execute update if available\n    this.update && this.update()\n  }\n\n  this.target.style.display = 'block'\n}\n\n/**\n@function hide\n\n@description\n`dataview.display` flag will be set to false.\n\nThe `dataview.target` element display style will be set to `none`.\n\n@param {Object} _this Dataview object.\n@property {HTMLElement} target Target element in which the dataview is rendered.\n*/\n\nfunction hide() {\n\n  this.display = false\n  this.target.style.display = 'none'\n}\n\n/**\n@function checkDataview\n\n@description\nThe dataview type will be set to \"chartjs\" or \"tabulator\" if a `dataview.chart` or `dataview.table` object are present.\n\nThe dataview.table object will be created if a `dataview.columns` array is present.\n\nA Dataview object matching the dataview type must be available in mapp.ui.utils{} to support the creation of a new dataview object.\n\n@param {dataview} _this Dataview object.\n@property {string} [dataview] The type of dataview.\n@property {Object} [table] dataview = \"tabulator\"\n@property {Object} [chart] dataview = \"chartjs\"\n\n@return {Error} Return Error if the dataview cannot be created.\n*/\n\nfunction checkDataview(_this) {\n\n  // Assign key if not implicit.\n  _this.key ??= _this.query || _this.title || _this.label\n\n  if (!_this.dataview) {\n\n    // Create a ChartJS dataview is chart is defined.\n    if (_this.chart) _this.dataview = 'chartjs';\n\n    // Columns in entry indicate missing table config.\n    if (typeof _this.columns !== 'undefined') {\n      console.warn('Table dataviews should be configured inside a tables object');\n\n      // Assign columns to table config.\n      _this.table = { columns: _this.columns };\n\n      _this.dataview = 'tabulator';\n    }\n\n    // Create a Tabulator dataview if columns are defined.\n    if (_this.table) {\n      _this.dataview = 'tabulator';\n    }\n  }\n\n  if (!Object.hasOwn(mapp.ui.utils, _this.dataview)) {\n\n    _this.err = new Error(`mapp.ui.utils.${_this.dataview} doesnt exist`);\n    console.error(_this.err)\n\n    _this.update = () => console.warn(`Unable to update ${_this.key} dataview.`)\n    return _this.err\n  }\n\n  if (typeof mapp.ui.utils[_this.dataview].create !== 'function') {\n\n    _this.err = new Error(`mapp.ui.utils.${_this.dataview}.create() method doesn't exist`);\n    console.error(_this.err)\n    return _this.err\n  }\n}\n\n/**\n@function updateDataview\n\n@description\nThe dataview must have been created already. A `dataview.create()` method will be assigned from a plugin if nullish and immediately executed.\n\nThe dataview update method requires a query template to be executed with optional query parameter.\n\nA parameterized query will passed as argument to the mapp.utils.xhr() utility method.\n\nA custom `dataview.responseFunction()` will be executed instead of the `dataview.setData()` method if available.\n\n@param {dataview} _this Dataview object.\n@property {string} [query] Query template for the dataview update method.\n@property {string} [host] Host for the update query.\n@property {Object} [queryparams] Parameter for update query.\n@property {Function} [setData] Method to set the data in the dataview.\n@property {Function} [responseFunction] A custom response function to be executed instead of the setData method.\n*/\n\nasync function updateDataview() {\n\n  if (!this.create) {\n\n    this.create = function () {\n      mapp.ui.utils[this.dataview].create(this);\n    }\n    this.create()\n  }\n\n  // Dataviews must not update without a query.\n  if (!this.query) return;\n\n  // Compile params object from dataview this.\n  const params = mapp.utils.queryParams(this);\n\n  // Stringify paramString from object.\n  const paramString = mapp.utils.paramString(params);\n\n  this.host ??= this.layer?.mapview?.host\n\n  // Query data as response from query.\n  const response = await mapp.utils.xhr(\n    `${this.host || mapp.host}/api/query?${paramString}`);\n\n  if (response instanceof Error) return;\n\n  // The responseFunction must set the data to the dataview object.\n  if (typeof this.responseFunction === 'function') {\n    this.responseFunction(response);\n    return;\n  }\n\n  typeof this.setData === 'function' && this.setData(response);\n}\n\n/**\n@function dataviewToolbar\n\n@description\nThe dataviewToolbar method will create a HTML Element container with target elements for toolbar elements and the dataview itself.\n\n@param {dataview} _this Dataview object.\n@property {Object} [toolbar] Configuration object for a toolbar supporting the dataview.\n@property {string} dataview The type of dataview\n@property {HTMLElement} target Target element in which the dataview is rendered.\n@property {HTMLElement} panel A panel element to be displayed in a tab[view].\n*/\n\nfunction dataviewToolbar(_this) {\n\n  // A toolbar config object is required.\n  if (!_this.toolbar) return;\n\n  // A custome toolbar method has been assigned to the dataview.\n  if (typeof _this.toolbar === 'function') {\n    _this.toolbar()\n  }\n\n  // Target for the dataview.\n  const target = mapp.utils.html.node`<div class=\"dataview-target\">`;\n\n  // Find and execute matching toolbar methods.\n  const toolbarElements = Object.keys(_this.toolbar)\n    .map((key) => mapp.ui.utils[_this.dataview]?.toolbar[key]?.(_this))\n    .filter((item) => !!item);\n\n  // The panel will be assigned in a tabview.\n  _this.panel = _this.target.appendChild(mapp.utils.html.node`\n    <div class=\"flex-col\">\n      <div class=\"btn-row\">${toolbarElements}</div>\n      ${target}`);\n\n  // Assign dataview target as target.\n  _this.target = target;\n}\n\n/**\n@function dataviewMapChange\n\n@description\nThe dataviewMapChange method assigns an event listener for the custom changeEnd event of the dataview.layer mapview.\n\nThe dataview.update() or a custom mapChange() method will be executed if the changeEnd eventlistener is triggered.\n\n@param {Object} _this Dataview object.\n\n@property {string} key A unique for the dataview.\n@property {string} dataview The type of dataview\n@property {HTMLElement} target Target element in which the dataview is rendered.\n@property {Function} create Create method for library supporting the dataview type.\n@property {Function} show Method to show a dataview in the document.\n@property {Function} hide Method to hide a dataview in the document.\n@property {boolean} [dynamic] Dataview should be recreated when shown.\n@property {boolean} [display] Whether the dataview should be displayed.\n@property {Function} [update] Method to update the dataview data from a query.\n@property {boolean} [reload] Dataview should run update query when shown.\n@property {string} [query] Query template for the dataview update method.\n@property {string} [host] Host for the update query.\n@property {Object} [queryparams] Parameter for update query.\n@property {Object} data Data to be displayed in the dataview.\n@property {Function} [setData] Method to set the data in the dataview.\n@property {string} [label] Label for a checkbox input.\n@property {HTMLElement} [chkbox] Input element to toggle the dataview display.\n*/\n\nfunction dataviewMapChange(_this) {\n  \n  // The dataview should not update with a mapchange event.\n  if (!_this.mapChange) return;\n\n  const targetMapElement = _this.layer?.mapview?.Map?.getTargetElement()\n  \n  // The dataview requires a layer mapview.\n  if (!targetMapElement) return;\n  \n  targetMapElement.addEventListener('changeEnd', () => {\n\n    // Only update dataview if corresponding layer is visible.\n    if (!_this.layer.display) return;\n\n    // Only update dataview in tab if active.\n    if (_this.tab && !_this.tab.classList.contains('active')) return;\n\n    // Execute mapChange if defined as custom function.\n    if (typeof _this.mapChange === 'function') {\n\n      _this.mapChange()\n\n    } else {\n\n      _this.update();\n    }\n      \n  });\n}", "/**\n## ui/Tabview\n\nThe Tabview module exports the Tabview decorator method.\n\n@module /ui/Tabview\n*/\n\n/**\n@global\n@typedef {Object} tabview\nA tabview object is an element to display tabs and their associated panels.\n@property {string} id\nUnique id provided as object property to be assigned as data-id to the tabview.node.\n@property {HTMLElement} node Required HTML element to hold the tabview tabs and panel elements.\n@property {HTMLElement} tabs HTML element to hold add tab elements.\n@property {HTMLElement} panel HTML element to display the panel element of the current active tab.\n@property {Function} addTab Method to add a tab to the tabview.\n*/\n\n/**\n@function Tabview\n\n@description\n### mapp.ui.Tabview()\n\nThe Tabview decorator method will deocrate the tabview parameter argument as `typedef:tabview` and return the decorated tabview.\n\nThe tabview object has an addTab() method which can be called with through the `addTab` event listener added to the `tabview.node` HTMLElement.\n\n@param {Object} tabview Object to decorate.\n@property {HTMLElement} tabview.node Required HTML element to hold the tabview tabs and panel elements.\n\n@return {tabview} Location view dataview and checkbox.\n*/\n\nexport default function Tabview(tabview) {\n\n  if (!tabview.node) return;\n\n  tabview.tabs = tabview.node.appendChild(mapp.utils.html.node`<div class=\"tabs\">`)\n\n  tabview.panel = tabview.node.appendChild(mapp.utils.html.node`<div class=\"panel\">`)\n\n  // Set data attribute ID from element ID.\n  tabview.id && tabview.node.setAttribute('data-id', tabview.id);\n\n  tabview.addTab = addTab\n\n  tabview.node.addEventListener('addTab', e => tabview.addTab(e.detail))\n\n  return tabview;\n}\n\n/**\n@function addTab\n\n@description\nThe `tabview.addTab()` will decorate an entry object as a tabview tab. The method will return if the entry has already been decorated preventing the method to be accidentaly called twice with same param argument.\n\nThe tab decorator will add callbacks for the entry location or layer to trigger the display of the tabview when the associated mapp object status is toggled.\n\nThe decorator method will add `show()` and `hide()` methods for the tab.\n\n@param {Object} entry The tab object to add to the tabview.\n@property {HTMLElement} tabview.tab The tab shown in the tabview.tabs element.\n*/\n\n// add entry as tab to this tabview.\nfunction addTab(entry) {\n\n  // The entry already has a tab.\n  if (entry.tab) return;\n\n  const tabview = this\n\n  entry.activate ??= function(){\n    if (!entry.create || entry.dynamic) {\n      entry.create ??= function () {\n        mapp.ui.utils[entry.dataview]?.create(entry);\n      }\n      entry.create()\n    }\n\n    if (entry.update instanceof Function) {\n      entry.update()\n    }\n  }\n\n  if (entry.location) {\n \n    // The tabview should be removed if the location is removed.\n    entry.location.removeCallbacks.push(()=>entry.remove())\n\n  } else if (entry.layer) {\n\n    // Show tab when layer is displayed.\n    entry.layer.showCallbacks.push(()=>{\n\n      // Entry must have display flag.\n      entry.display && entry.show()\n    })\n  \n    // Hide tab when layer is hidden.\n    entry.layer.hideCallbacks.push(()=>{\n      entry.remove()\n    })\n  }\n\n  entry.label ??= entry.title || entry.key || 'Tab'\n\n  entry.tab = mapp.utils.html.node`\n    <div class=\"tab\">\n      <button\n        .disabled=${entry.disabled}\n        class=\"header\"\n        style=\"${entry.tab_style || ''}\"\n        onclick=${showTab}>${entry.label}`\n     \n  entry.panel ??= entry.target || mapp.utils.html.node`\n    <div class=\"${`panel ${entry.class || ''}`}\">`\n\n  entry.show = showTab\n\n  entry.remove = removeTab\n\n  // Must override dataview hide method.\n  entry.hide = removeTab\n\n  function showTab (){\n\n    // Render entry.panel into tabview.panel\n    mapp.utils.render(tabview.panel, entry.panel)\n\n    // Remove the active class from all tabs.\n    tabview.tabs.childNodes.forEach(tab => tab.classList.remove('active'))\n\n    // Add the tab element to tabs container if the tab element has no parent yet.\n    !entry.tab.parentElement && tabview.tabs.append(entry.tab)\n\n    // Make the tab active by assigning class.\n    entry.tab.classList.add('active')\n\n    // The activate event should be delayed with a timeout.\n    // This prevents each tab to activate when multiple tabs are added in quick succession.\n    tabview.timer && window.clearTimeout(tabview.timer)\n\n    tabview.timer = window.setTimeout(entry.activate, 500)\n\n    if (tabview.showTab instanceof Function) {\n\n      // Execute tabview method to show a tab.\n      tabview.showTab(entry)\n    }\n  }\n\n  function removeTab () {\n\n    // A tab without parent element cannot be in the tab bar.\n    if (!entry.tab.parentElement) return\n\n    // Find a sibling of the entry.\n    const sibling = entry.tab.nextElementSibling || entry.tab.previousElementSibling\n\n    // Remove the tab element from tab bar.\n    entry.tab.remove()\n\n    // Activate the sibling.\n    if (sibling) return sibling.querySelector('.header').click()\n\n    tabview.removeLastTab && tabview.removeLastTab()\n  }\n}", "export default (params) => mapp.utils.html.node`\n  <div \n    data-id=${params.data_id || 'card'}\n    class=\"drawer\">\n    <div class=\"header bold\">\n      <span>${params.header}</span>\n      <button\n        data-id=close\n        class=\"mask-icon close\"\n        onclick=${e => {\n          e.target.closest('.drawer').remove()\n          params.close && params.close(e)\n        }}>\n    </div>\n    ${params.content}`;", "export default (params) => mapp.utils.html.node`\n  <label \n    data-id=${params.data_id || 'chkbox'}\n    class=\"checkbox\">\n    <input\n      name=\"mapp-ui-chkbox-element\"\n      type=\"checkbox\"\n      .disabled=${!!params.disabled}\n      .checked=${!!params.checked}\n      onchange=${e=>{\n        params.onchange && params.onchange(e.target.checked, params.val)\n      }}>\n    </input>\n    <div></div>\n    <span>${params.label}`", "export default {\n  modify,\n  draw\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    remove_last_vertex: 'Remove last vertex',\n    delete_vertex: 'Remove vertex',\n  },\n  de: {\n    remove_last_vertex: 'Entferne letzten Scheitelpunkt',\n    delete_vertex: 'Entferne Scheitelpunkt',\n  },\n  zh: {\n    remove_last_vertex: '\u5220\u9664\u6700\u540E\u4E00\u4E2A\u9876\u70B9',\n    delete_vertex: '\u5220\u9664\u9876\u70B9',\n  },\n  zh_tw: {\n    remove_last_vertex: '\u522A\u9664\u6700\u5F8C\u4E00\u500B\u9802\u9EDE',\n    delete_vertex: '\u522A\u9664\u9802\u9EDE',\n  },\n  pl: {\n    remove_last_vertex: 'Usu\u0144 ostatni wierzcho\u0142ek',\n    delete_vertex: 'Usu\u0144 wierzcho\u0142ek',\n  },\n  fr: {\n    remove_last_vertex: 'Supprimer le dernier sommet',\n    delete_vertex: 'Supprimer les sommets',\n  },\n  ja: {\n    remove_last_vertex: '\u6700\u5F8C\u306E\u30D0\u30FC\u30C6\u30C3\u30AF\u30B9\u3092\u524A\u9664',\n    delete_vertex: '\u30D0\u30FC\u30C6\u30C3\u30AF\u30B9\u3092\u524A\u9664',\n  },\n  es: {\n    remove_last_vertex: 'Eliminar el \u00FAltimo v\u00E9rtice',\n    delete_vertex: 'Eliminar v\u00E9rtice',\n  },\n  tr: {\n    remove_last_vertex: 'Son verteksi kaldir',\n    delete_vertex: 'Verteksi kaldir',\n  },\n  it: {\n    remove_last_vertex: 'Eliminare l\\'ultimo vertice',\n    delete_vertex: 'Elimina vertice',\n  },\n  th: {\n    remove_last_vertex: '\u0E25\u0E1A\u0E08\u0E38\u0E14\u0E22\u0E2D\u0E14\u0E2A\u0E38\u0E14\u0E17\u0E49\u0E32\u0E22',\n    delete_vertex: '\u0E25\u0E1A\u0E08\u0E38\u0E14\u0E22\u0E2D\u0E14',\n  }\n})\n\nfunction modify(e) {\n\n  e && e.preventDefault()\n   \n  const menu = []\n  \n  // Show save option in contextmenu\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${() => this.interaction.finish(this.interaction.getFeature())}>\n      ${mapp.dictionary.save}`)\n\n  // Add cancel option to contextmenu.\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${()=>this.interaction.finish()}>\n      ${mapp.dictionary.cancel}`)\n\n  // Set context menu popup on last vertex.\n  this.popup({\n    coords: this.interaction.vertices[this.interaction.vertices.length-1],\n    content: mapp.utils.html.node`<ul>${menu}`,\n  })\n}\n\nfunction draw(e) {\n\n  if (this.interaction.vertices.length === 0) return;\n  \n  const menu = []\n  \n  menu.push(mapp.utils.html`\n  <li\n    onclick=${()=>this.interaction.finish(this.interaction.getFeature())}>\n      ${mapp.dictionary.save}`)\n\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${()=>this.interaction.finish()}>\n      ${mapp.dictionary.cancel}`)\n\n  // Set timeout to for the drawend popup to appear after async onchange event popup.\n  setTimeout(()=>this.popup({\n    coords: this.interaction.vertices[this.interaction.vertices.length - 1],\n    content: mapp.utils.html.node`<ul>${menu}`,\n    autoPan: true\n  }),100)\n}", "/**\n### /ui/elements/drawer\n\nThe drawer element module exports the drawer method for the `mapp.ui.elements{}` library object.\n\n@module /ui/elements/drawer\n*/\n\n/**\n@function drawer\n\n@description\nThe drawer method will create and return drawer element with a header and content.\n\n@param {Object} params The configuration params for the drawer element.\n@property {string} params.data_id The data-id for drawer element.\n@property {HTML} params.header The header element[s].\n@property {HTML} params.content The content element[s] for the drawer.\n\n@returns {HTMLElement} The drawer element.\n*/\n\nexport default function drawer(params) {\n\n  params.data_id ??= 'drawer'\n\n  params.class = `drawer expandable ${params.class || ''}`\n  \n  const drawer = mapp.utils.html.node`\n  <div \n    data-id=${params.data_id}\n    class=${params.class}>\n    <div\n      class=\"header\"\n      onclick=${onClick}>\n      ${params.header}\n    </div>\n    ${params.content}`\n\n  return drawer\n\n  /**\n  @function onClick\n\n  @description\n  The [drawer] onClick event method will shortcircuit if the parentElement has the `empty` class.\n\n  @param {Object} e The click event.\n  */\n  function onClick(e) {\n\n    if (e.target.parentElement.classList.contains('empty')) return;\n\n    e.target.parentElement.classList.toggle('expanded')\n  }\n};", "/**\n### /ui/elements/drawing\n\n@module /ui/elements/drawing\n*/\n\nexport default {\n  point,\n  line,\n  polygon,\n  rectangle,\n  circle_2pt,\n  circle,\n  locator,\n  drawOnclick\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    draw_dialog_title: 'Drawing Instructions',\n    draw_dialog_begin_drawing: 'Begin Drawing - Click anywhere on the map',\n    draw_dialog_cancel_drawing: 'Cancel Drawing - ESC Key',\n    draw_dialog_remove_vertex: 'Remove Last Vertex - Right Click',\n    draw_dialog_save: 'Save - Double Click',\n    draw_dialog_save_single: 'Save - Single Click',\n    draw_point: 'Point',\n    draw_position: 'Current Position',\n    draw_polygon: 'Polygon',\n    draw_rectangle: 'Rectangle',\n    circle_config: 'Circle configuration',\n    draw_circle: 'Circle from Centre',\n    draw_circle_2pt: 'Manual Circle',\n    radius: 'Radius',\n    units: 'Units',\n    draw_line: 'Line',\n    create: 'Create',\n  },\n  de: {\n    draw_point: 'Punkt',\n    draw_position: 'Aktueller Standort',\n    draw_polygon: 'Polygon',\n    draw_rectangle: 'Rechteck',\n    circle_config: 'Zirkel Einstellung',\n    draw_circle: 'Zirkel',\n    draw_circle_2pt: '2 Punkt Zirkel',\n    radius: 'Radius',\n    units: 'Masseinheit',\n    draw_line: 'Linie',\n    create: 'Erstellen',\n  },\n  zh: {\n    draw_point: '\u70B9',\n    draw_position: '\u5F53\u524D\u4F4D\u7F6E',\n    draw_polygon: '\u591A\u8FB9\u5F62',\n    draw_rectangle: '\u957F\u65B9\u5F62',\n    circle_config: '\u5706\u5F62\u8C03\u6574',\n    draw_circle: '\u7531\u4E2D\u5FC3\u70B9\u5916\u6CBF\u7ED8\u5236\u5706\u5F62',\n    draw_circle_2pt: '\u624B\u7ED8\u5706\u5F62',\n    radius: '\u534A\u5F84',\n    units: '\u5355\u4F4D',\n    draw_line: '\u7EBF\u6761',\n    create: '\u521B\u5EFA',\n  },\n  zh_tw: {\n    draw_point: '\u9EDE',\n    draw_position: '\u7576\u524D\u4F4D\u7F6E',\n    draw_polygon: '\u591A\u908A\u5F62',\n    draw_rectangle: '\u9577\u65B9\u5F62',\n    circle_config: '\u5713\u5F62\u8ABF\u6574',\n    draw_circle: '\u7531\u4E2D\u5FC3\u9EDE\u5916\u6CBF\u7E6A\u88FD\u5713\u5F62',\n    draw_circle_2pt: '\u624B\u7E6A\u5713\u5F62',\n    radius: '\u534A\u5F91',\n    units: '\u55AE\u4F4D',\n    draw_line: '\u7DDA\u689D',\n    create: '\u5275\u5EFA',\n  },\n  pl: {\n    draw_point: 'Punkt',\n    draw_position: 'Aktualna pozycja',\n    draw_polygon: 'Poligon',\n    draw_rectangle: 'Prostok\u0105t',\n    circle_config: 'Konfiguracja okr\u0119gu',\n    draw_circle: 'Okr\u0105g od centrum',\n    draw_circle_2pt: 'Okr\u0105g odr\u0119czny',\n    radius: 'Promie\u0144',\n    units: 'Jednostki',\n    draw_line: 'Linia',\n    create: 'Utw\u00F3rz',\n  },\n  fr: {\n    draw_point: 'Point',\n    draw_position: 'Position Actuelle',\n    draw_polygon: 'Polygone',\n    draw_rectangle: 'Rectangle',\n    circle_config: 'Param\u00E9trage du cercle',\n    draw_circle: 'Cercle \u00E0 partir du centre',\n    draw_circle_2pt: 'Cercle Manuel',\n    radius: 'Rayon',\n    units: 'Unit\u00E9',\n    draw_line: 'Ligne',\n    create: 'Cr\u00E9er',\n  },\n  ja: {\n    draw_point: '\u30DD\u30A4\u30F3\u30C8',\n    draw_position: '\u73FE\u5730',\n    draw_polygon: '\u30DD\u30EA\u30B4\u30F3',\n    draw_rectangle: '\u9577\u65B9\u5F62',\n    circle_config: '\u4E38\u306E\u69CB\u6210',\n    draw_circle: '\u771F\u3093\u4E2D\u304B\u3089\u306E\u4E38',\n    draw_circle_2pt: '\u30DE\u30CB\u30E5\u30A2\u30EB\u306E\u4E38',\n    radius: '\u534A\u5F84',\n    units: '\u5358\u4F4D',\n    draw_line: '\u7DDA',\n    create: '\u4F5C\u6210',\n  },\n  es: {\n    draw_point: 'Punto',\n    draw_position: 'Posici\u00F3n actual',\n    draw_polygon: 'Pol\u00EDgono',\n    draw_rectangle: 'Rect\u00E1ngulo',\n    circle_config: 'Configuraci\u00F3n del c\u00EDrculo',\n    draw_circle: 'C\u00EDrculo desde el centro',\n    draw_circle_2pt: 'C\u00EDrculo manual',\n    radius: 'Radio',\n    units: 'Unidad',\n    draw_line: 'L\u00EDnea',\n    create: 'Crear',\n  },\n  tr: {\n    draw_point: 'Nokta',\n    draw_position: 'Mevcut konum',\n    draw_polygon: 'Poligon',\n    draw_rectangle: 'Dikdortgen',\n    circle_config: 'Cember ayarlari',\n    draw_circle: 'Merkezden cember',\n    draw_circle_2pt: 'Manuel cember',\n    radius: 'Yaricap',\n    units: 'Birimler',\n    draw_line: 'Cizgi',\n    create: 'Olustur',\n  },\n  it: {\n    draw_point: 'Punto',\n    draw_position: 'Posizione attuale',\n    draw_polygon: 'Poligono',\n    draw_rectangle: 'Rettangolo',\n    circle_config: 'Configurazione cerchio',\n    draw_circle: 'Cerchio dal centro',\n    draw_circle_2pt: 'Cerchio manuale',\n    radius: 'Raggio',\n    units: 'Unit\u00E0',\n    draw_line: 'Linea',\n    create: 'Creare',\n  },\n  th: {\n    draw_point: '\u0E08\u0E38\u0E14',\n    draw_position: '\u0E15\u0E33\u0E41\u0E2B\u0E19\u0E48\u0E07\u0E1B\u0E31\u0E08\u0E08\u0E38\u0E1A\u0E31\u0E19',\n    draw_polygon: '\u0E23\u0E39\u0E1B\u0E2B\u0E25\u0E32\u0E22\u0E40\u0E2B\u0E25\u0E35\u0E48\u0E22\u0E21',\n    draw_rectangle: '\u0E2A\u0E35\u0E48\u0E40\u0E2B\u0E25\u0E35\u0E48\u0E22\u0E21\u0E1C\u0E37\u0E19\u0E1C\u0E49\u0E32',\n    circle_config: '\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E04\u0E48\u0E32\u0E27\u0E07\u0E01\u0E25\u0E21',\n    draw_circle: '\u0E27\u0E07\u0E01\u0E25\u0E21\u0E08\u0E32\u0E01\u0E28\u0E39\u0E19\u0E22\u0E4C\u0E01\u0E25\u0E32\u0E07',\n    draw_circle_2pt: '\u0E27\u0E07\u0E01\u0E25\u0E21\u0E41\u0E1A\u0E1A\u0E41\u0E21\u0E19\u0E19\u0E27\u0E25',\n    radius: '\u0E23\u0E31\u0E28\u0E21\u0E35',\n    units: '\u0E2B\u0E19\u0E48\u0E27\u0E22',\n    draw_line: '\u0E40\u0E2A\u0E49\u0E19',\n    create: '\u0E2A\u0E23\u0E49\u0E32\u0E07',\n  }\n})\n\n/**\n@function drawOnclick\n\n@description\nThe drawOnClick method is triggered by clicking on a drawing element button.\n\nThe 'active' class is toggled on the button element. The drawing interaction is finished if the 'active' class is toggled off.\n\nA callback method is assigned to the interaction before the interaction object is passed as argument to call the mapview's draw interaction.\n\n@param {Object} e The click event. \n@param {layer} layer Decorated Mapp Layer.\n@param {Object} interaction Mapview drawing interaction.\n\n@property {Object} e.target The click event target [button].\n*/\n\nfunction drawOnclick(e, layer, interaction) {\n\n  const btn = e.target\n\n  if (!btn.classList.toggle('active')) {\n\n    layer.mapview.interaction.finish()\n    return;\n  }\n\n  !layer.display && layer.show()\n\n  interaction.callback ??= feature => {\n\n    mapp.location.create(feature, interaction, layer)\n\n    btn.classList.remove('active')\n\n    delete layer.mapview.interaction\n\n    mapp.ui.elements.helpDialog();\n\n    // Set highlight interaction if no other interaction is current after 400ms.\n    setTimeout(() => {\n      !layer.mapview.interaction && layer.mapview.interactions.highlight()\n    }, 400)\n  }\n\n  layer.mapview.interactions.draw(interaction)\n\n  interaction.helpDialog.header = mapp.utils.html`<h3>${mapp.dictionary.draw_dialog_title}</h3>`;\n\n  interaction.helpDialog.data_id = 'dialog_drawing';\n\n  mapp.ui.elements.helpDialog(interaction.helpDialog);\n\n  btn.classList.add('active')\n}\n\nfunction point(layer) {\n\n  const helpDialog = {\n    content: mapp.utils.html.node`<li>\n    <ul>${mapp.dictionary.draw_dialog_begin_drawing}</ul>\n    <ul>${mapp.dictionary.draw_dialog_save_single}</ul>`\n  }\n\n  // Set the default values\n  layer.draw.point = {\n    layer,\n    label: mapp.dictionary.draw_point,\n    helpDialog,\n    type: 'Point',\n    ...layer.draw.point\n  }\n\n  // Create the button\n  layer.draw.point.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => drawOnclick(e, layer, layer.draw.point)}>\n      ${layer.draw.point.label}`\n\n  return layer.draw.point.btn\n}\n\nfunction line(layer) {\n\n  const helpDialog = {\n    content: mapp.utils.html.node`<li>\n    <ul>${mapp.dictionary.draw_dialog_begin_drawing}</ul>\n    <ul>${mapp.dictionary.draw_dialog_remove_vertex}</ul>\n    <ul>${mapp.dictionary.draw_dialog_save_single}</ul>`\n  }\n\n  // Set the default values\n  layer.draw.line = {\n    layer,\n    label: mapp.dictionary.draw_line,\n    helpDialog,\n    type: 'LineString',\n    ...layer.draw.line\n  }\n\n  // Create the button\n  layer.draw.line.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => drawOnclick(e, layer, layer.draw.line)}>\n      ${layer.draw.line.label}`\n\n  return layer.draw.line.btn\n}\n\nfunction polygon(layer) {\n\n  const helpDialog = {\n    content: mapp.utils.html.node`<li>\n    <ul>${mapp.dictionary.draw_dialog_begin_drawing}</ul>\n    <ul>${mapp.dictionary.draw_dialog_cancel_drawing}\n    <ul>${mapp.dictionary.draw_dialog_remove_vertex}</ul>\n    <ul>${mapp.dictionary.draw_dialog_save}</ul>`\n  }\n\n  // Set the default values\n  layer.draw.polygon = {\n    layer,\n    label: mapp.dictionary.draw_polygon,\n    helpDialog,\n    type: 'Polygon',\n    ...layer.draw.polygon\n  }\n\n  // Create the button\n  layer.draw.polygon.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => drawOnclick(e, layer, layer.draw.polygon)}>\n      ${layer.draw.polygon.label}`\n\n  return layer.draw.polygon.btn\n}\n\nfunction rectangle(layer) {\n\n  const helpDialog = {\n    content: mapp.utils.html.node`<li>\n    <ul>${mapp.dictionary.draw_dialog_begin_drawing}</ul>\n    <ul>${mapp.dictionary.draw_dialog_save_single}</ul>`\n  }\n\n  // Set the default values\n  layer.draw.rectangle = {\n    layer,\n    label: mapp.dictionary.draw_rectangle,\n    helpDialog,\n    type: 'Circle',\n    geometryFunction: ol.interaction.Draw.createBox(),\n    ...layer.draw.rectangle\n  }\n\n  // Create the button\n  layer.draw.rectangle.btn = mapp.utils.html.node`\n  <button\n    class=\"flat wide bold primary-colour\"\n    onclick=${e => drawOnclick(e, layer, layer.draw.rectangle)}>\n    ${layer.draw.rectangle.label}`\n\n  return layer.draw.rectangle.btn\n}\n\nfunction circle_2pt(layer) {\n\n  const helpDialog = {\n    content: mapp.utils.html.node`<li>\n    <ul>${mapp.dictionary.draw_dialog_begin_drawing}</ul>\n    <ul>${mapp.dictionary.draw_dialog_save_single}</ul>`\n  }\n\n  // Set the default values\n  layer.draw.circle_2pt = {\n    layer,\n    type: 'Circle',\n    helpDialog,\n    geometryFunction: ol.interaction.Draw.createRegularPolygon(33),\n    label: mapp.dictionary.draw_circle_2pt,\n    ...layer.draw.circle_2pt\n  }\n\n  // Create the button\n  layer.draw.circle_2pt.btn = mapp.utils.html.node`\n  <button\n    class=\"flat wide bold primary-colour\"\n    onclick=${e => drawOnclick(e, layer, layer.draw.circle_2pt)}>\n    ${layer.draw.circle_2pt.label}`\n\n  return layer.draw.circle_2pt.btn\n}\n\nfunction circle(layer) {\n\n  const helpDialog = {\n    content: mapp.utils.html.node`<li>\n    <ul>${mapp.dictionary.draw_dialog_begin_drawing}</ul>\n    <ul>${mapp.dictionary.draw_dialog_save_single}</ul>`\n  }\n\n  // Set the default values\n  layer.draw.circle = {\n    layer,\n    helpDialog,\n    type: 'Point',\n    units: 'meter',\n    radius: 100,\n    radiusMin: 1,\n    radiusMax: 1000,\n\n    // Methods to transform input radius.\n    unitConversion: {\n      meter: v => v,\n      km: v => v * 1000,\n      miles: v => v * 1609.34,\n      meter2: v => Math.sqrt(v / Math.PI),\n      km2: v => Math.sqrt(v * 1000000 / Math.PI),\n    },\n    geometryFunction: (coordinates) => {\n\n      const polygonCircular = new ol.geom.Polygon.circular(\n        ol.proj.toLonLat(coordinates),\n        layer.draw.circle.unitConversion[layer.draw.circle.units](layer.draw.circle.radius),\n        64\n      );\n\n      return polygonCircular.transform('EPSG:4326', 'EPSG:3857')\n    },\n    label: mapp.dictionary.draw_circle,\n    ...layer.draw.circle\n  }\n\n  const unitsDropDown = mapp.utils.html.node`\n    <div style=\"display: grid; grid-template-columns: 100px 1fr; align-items: center;\">\n      <div style=\"grid-column: 1;\">${mapp.dictionary.units}</div>\n      <div style=\"grid-column: 2;\">\n        ${mapp.ui.elements.dropdown({\n    placeholder: layer.draw.circle.units,\n    entries: [\n      {\n        title: 'Meter',\n        option: 'meter',\n      },\n      {\n        title: 'KM',\n        option: 'km',\n      },\n      {\n        title: 'Miles',\n        option: 'miles',\n      },\n      {\n        title: 'Meter\u00B2',\n        option: 'meter2',\n      },\n      {\n        title: 'KM\u00B2',\n        option: 'km2',\n      },\n    ],\n    callback: (e, entry) => {\n      layer.draw.circle.units = entry.option;\n    }\n  })}`\n\n  const rangeSlider = mapp.ui.elements.slider({\n    label: mapp.dictionary.radius,\n    min: layer.draw.circle.radiusMin,\n    max: layer.draw.circle.radiusMax,\n    val: layer.draw.circle.radius,\n    callback: e => {\n      layer.draw.circle.radius = parseFloat(e.target.value)\n    }\n  })\n\n  layer.draw.circle.panel = mapp.utils.html.node`\n    <div class=\"panel flex-col\">\n      ${unitsDropDown}\n      ${rangeSlider}`\n\n  layer.draw.circle.btn = mapp.utils.html.node`\n  <button\n    class=\"flat wide bold primary-colour\"\n    onclick=${e => drawOnclick(e, layer, layer.draw.circle)}>\n    ${layer.draw.circle.label}`\n\n  // The config elements are not shown.\n  if (layer.draw.circle.hidePanel) return layer.draw.circle.btn\n\n  // Return the config element in a drawer with the interaction toggle button as sibling.\n  return mapp.utils.html.node`<div>\n    ${mapp.ui.elements.drawer({\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.circle_config}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: layer.draw.circle.panel\n  })}${layer.draw.circle.btn}`\n}\n\nfunction locator(layer) {\n\n  layer.draw.locator = {\n    layer,\n    label: mapp.dictionary.draw_position,\n    type: 'Point',\n    ...layer.draw.locator\n  }\n\n  layer.draw.locator.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"  \n      onclick=${e => {\n\n      mapp.utils.getCurrentPosition(async (pos) => {\n\n        const location = {\n          layer: layer,\n          table: layer.tableCurrent(),\n          new: true\n        }\n\n        const coords = ol.proj.transform(\n          [parseFloat(pos.coords.longitude), parseFloat(pos.coords.latitude)],\n          'EPSG:4326', `EPSG:${layer.srid}`)\n\n        location.id = await mapp.utils.xhr({\n          method: 'POST',\n          url: `${layer.mapview.host}/api/query?` +\n            mapp.utils.paramString({\n              template: 'location_new',\n              locale: layer.mapview.locale.key,\n              layer: layer.key,\n              table: location.table\n            }),\n          body: JSON.stringify({\n            [layer.geom]: {\n              type: 'Point',\n              coordinates: coords\n            }\n          })\n        })\n\n        mapp.location.get(location)\n      })\n\n    }}>${layer.draw.locator.label}`\n\n  return layer.draw.locator.btn\n}", "export default (params) => {\n\n  params.selectedTitles = new Set()\n  params.selectedOptions = new Set()\n\n  params.pills &&= mapp.ui.elements.pills({\n    pills: [...params.selectedTitles],\n    addCallback: (val, _pills) => {\n      params.callback?.(null, [..._pills]);\n    },\n    removeCallback: (val, _pills) => {\n\n      // deselect value in the list\n      const item = ul.find(li => li.getAttribute('data-value') === val.toString());\n      item.classList.remove('selected');\n      params.selectedTitles.delete(item.title);\n      params.selectedOptions.delete(item.dataset.option);\n\n      // Remove pill element\n      //params.pills.remove(val);\n\n      params.callback?.(null, [..._pills]);\n    }\n  });\n\n  params.liOnClick ??= liOnClick\n\n  function liOnClick(e, entry) {\n\n    // Find the closest dropdown button.\n    const btn = e.target.closest('button.dropdown')\n\n    // Will collapse the dropdown if current state is 'active'.\n    !params.multi && btn.classList.toggle('active')\n\n    if (params.multi) {\n\n      // Will show select background if add to classlist.\n      e.target.classList.toggle('selected')\n\n      // Add or remove title and option value from sets.\n      if (e.target.classList.contains('selected')) {\n        params.selectedTitles.add(entry.title)\n        params.selectedOptions.add(entry.option)\n\n        params.pills?.add(entry.title)\n\n      } else {\n        params.selectedTitles.delete(entry.title)\n        params.selectedOptions.delete(entry.option)\n\n        params.pills?.remove(entry.title);\n      }\n\n      if (!params.pills) {\n\n        // Set btn text to reflect selection or show placeholder.\n        btn.querySelector('[data-id=header-span]').textContent =\n          params.selectedTitles.size\n          && Array.from(params.selectedTitles).map(v => v).join(', ')\n          || params.span || params.placeholder\n      }\n\n      params.callback?.(e, [...params.selectedOptions])\n\n      return;\n    }\n\n    // Only applies for non multi select\n    if (!params.keepPlaceholder) {\n\n      // Dropdown is not multi\n      btn.querySelector('[data-id=header-span]').textContent = entry.title;\n    }\n\n    params.callback?.(e, entry);\n  }\n\n  // Create array of li elements for dropdown.\n  const ul = params.entries.map((entry) => {\n\n    // Create li element with click event.\n    const li = mapp.utils.html.node`<li\n      data-value=${entry.option}\n      onclick=${(e) => params.liOnClick(e, entry)}>\n      ${entry.title}`\n\n    // The entry is already selected during creation of dropdown.\n    if (entry.selected) {\n      li.classList.add('selected')\n      params.selectedTitles.add(entry.title)\n      params.selectedOptions.add(entry.option)\n\n      // create pill\n      params.pills && pills.add(entry.title)\n    }\n\n    return li\n  })\n\n  params.headerOnClick ??= headerOnClick\n\n  function headerOnClick(e) {\n\n    const bounds = e.target.getBoundingClientRect()\n\n    const viewport = document.body.getBoundingClientRect()\n\n    // Calculate the difference between the bottom of the dropdown and the viewport height.\n    const viewDiff = viewport.height - bounds.bottom;\n\n    // Set the maxHeight of the ul to the difference.\n    e.target.nextElementSibling.style.maxHeight = `${viewDiff}px`\n\n    // Set the width of the ul to the width of the button.\n    e.target.nextElementSibling.style.width = `${e.target.offsetWidth}px`\n\n    // If the difference is less than 150px, reverse the dropdown.\n    if (viewDiff < 150) {\n      e.target.parentElement.classList.add('dropdown-reverse')\n\n      // Set the maxHeight of the ul to 300 as it will be reversed so the bottom doesn't get cut off.\n      e.target.nextElementSibling.style.maxHeight = `150px`\n\n      // If the difference is greater than 150px, check if the dropdown is reversed and remove the class.\n    } else {\n\n      // Set the maxHeight of the ul to the difference.\n      e.target.nextElementSibling.style.maxHeight = `${viewDiff}px`\n\n      if (e.target.parentElement.classList.contains('dropdown-reverse')) {\n        e.target.parentElement.classList.remove('dropdown-reverse');\n      }\n    }\n    \n    // Collapse dropdown element and short circuit.\n    if (e.target.parentElement.classList.contains('active')) {\n      e.target.parentElement.classList.remove('active');\n      return;\n    }\n\n    // Collapse any expandxed dropdown elements in document.\n    document.querySelectorAll('button.dropdown')\n      .forEach((el) => el.classList.remove('active'));\n\n    // Expand this dropdown element.\n    e.target.parentElement.classList.add('active');\n  }\n\n  const headerSpan = params.selectedTitles.size\n    && Array.from(params.selectedTitles).join(', ') // join the selected titles if selectTitles set has a size.\n    || params.span // header should be the span value.\n    || params.placeholder // use placeholder.\n\n  params.node = mapp.utils.html.node`\n    ${params.pills?.container}\n    <button\n      data-id=${params.data_id || 'dropdown'}\n      class=\"dropdown\">\n        <div class=\"head\" onclick=${params.headerOnClick}>\n          <span data-id=header-span>${headerSpan}</span>\n          <div class=\"icon\"></div>\n        </div>\n        <ul>${ul}`;\n\n  return params.node\n}", "export default (params) => {\n\n  console.warn('mapp.ui.elements.dropdown should be used with the multi flag')\n\n  params.multi = true\n\n  return mapp.ui.elements.dropdown(params)\n}", "export default (params) => mapp.utils.html.node`\n    <button \n        data-id=${params.data_id || 'btnPanel'}\n        class=${`btn-panel ${params.class || ''}`}\n        style=${params.style || ''}\n        onclick=${e => {\n            e.target.classList.toggle('active')\n            params.callback(e)\n        }}>\n        <div class=\"header\">\n            <h3>${params.label}</h3>\n            <div\n                class=\"mask-icon\"\n                style=${`\n                    mask-image: url(\"${params.icon}\");\n                    -webkit-mask-image: url(\"${params.icon}\");\n                `}>\n            </div>\n        </div>\n        ${params.panel && mapp.utils.html`\n            <div class=\"panel\">${params.panel}`}`", "/**\n### /ui/elements/legendIcon\n\nThe legendIcon module exports the default legendIcon(style) method.\n\n@module /ui/elements/legendIcon\n*/\n\nconst xmlSerializer = new XMLSerializer();\n\n/**\n@function legendIcon\n\n@description\nThe legendIcon method returns an icon for displaying a mapp-style object outside the mapview.Map canvas.\n\n@param {style} style A JSON mapp-style object.\n\n@returns {HTMLElement} A HTML element for the style.\n*/\nexport default function legendIcon(style) {\n\n  if (Array.isArray(style.icon)) {\n    return createIconFromArray(style);\n  }\n\n  if (style.svg || style.type || style.icon) {\n    return createIconFromInlineStyle(style);\n  }\n\n  if (!style.fillColor) {\n    return createLineSymbol(style);\n  }\n\n  if (style.fillColor) {\n    return createPolygonSymbol(style);\n  }\n};\n\n/**\n@function createIconFromArray\n\n@description\nThe createIconFromArray method iterates through an `style.icon[]` array to create a layered and scaled icon element for displaying an icon style.\n\n@param {style} style A JSON mapp-style object.\n\n@returns {HTMLElement} A HTML element for the style.\n*/\n\nfunction createIconFromArray(style) {\n\n  const canvas = document.createElement('canvas');\n  canvas.width = style.width;\n  canvas.height = style.height;\n\n  let toLoad = style.icon.length;\n\n  // Images must be loaded in imageStyle image object before they can be applied to canvas.\n  function onImgLoad() {\n    if (--toLoad) return;\n\n    const vectorContext = ol.render.toContext(canvas.getContext('2d'), {\n      size: [style.width, style.height],\n      pixelRatio: 1,\n    });\n\n    // Styles can not be assigned as array to convas context.\n    style.icon.forEach((icon) => {\n      vectorContext.setStyle(icon.legendStyle);\n      vectorContext.drawGeometry(new ol.geom.Point([canvas.width * 0.5, canvas.height * 0.5]));\n    });\n  };\n\n  let legendScale = style.icon[0].legendScale || 1;\n\n  style.icon.forEach((icon) => {\n\n    if (icon.type && Object.hasOwn(mapp.utils.svgSymbols, icon.type)) {\n      icon.url = mapp.utils.svgSymbols[icon.type](icon);\n    }\n\n    const imageStyle = new ol.style.Icon({\n      src: icon.svg || icon.url,\n      crossOrigin: 'anonymous',\n      scale: legendScale * (icon.scale || 1),\n      anchor: icon.legendAnchor || [0.5, 0.5]\n    })\n   \n    icon.legendStyle = new ol.style.Style({\n      image: imageStyle\n    });\n\n    const img = imageStyle.getImage()\n\n    // Check whether the image is loaded in style.\n    if (imageStyle.getImageState() === 2) {\n\n      onImgLoad()\n\n    } else {\n\n      img.addEventListener('load', onImgLoad);\n      imageStyle.load()\n    }\n  });\n\n  return canvas;\n}\n\n/**\n@function createIconFromInlineStyle\n\n@description\nThe createIconFromInlineStyle creates an icon from an inline style object.\n\n@param {style} style A JSON mapp-style object.\n\n@returns {HTMLElement} A HTML element for the style.\n*/\n\nfunction createIconFromInlineStyle(style) {\n\n  const iconUrl = style.icon?.svg\n    || style.svg\n    || style.icon?.url\n    || style.url\n    || mapp.utils.svgSymbols[style.icon?.type\n    || style.type](style.icon || style)\n\n  const inlineStyle = `\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: ${style.width + 'px' || '100%'};\n    height: ${style.height + 'px' || '100%'};\n    background-image: url(${iconUrl})`;\n\n  return mapp.utils.html.node`<div style=${inlineStyle}>`;\n}\n\n/**\n@function createLineSymbol\n\n@description\nThe createLineSymbol creates an icon for a stroke [line] style object.\n\n@param {style} style A JSON mapp-style object.\n\n@returns {HTMLElement} A HTML element for the style.\n*/\n\nfunction createLineSymbol(style) {\n\n  const path = `M 0,${style.height / 2} L ${style.width / 2},${style.height / 2} ${style.width / 2},${style.height / 2} ${style.width},${style.height / 2}`;\n\n  const icon = mapp.utils.svg.node`\n  <svg \n    height=${style.height} \n    width=${style.width}>\n    <path\n      d=${path}\n      fill=\"none\"\n      stroke=${style.strokeColor}\n      stroke-width=${style.strokeWidth || 1}/>`;\n\n  const backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`;\n\n  const inlineStyle = `\n    background-position: center; \n    background-repeat: no-repeat; \n    background-size: contain; \n    width: ${style.width}px; \n    height: ${style.height}px; \n    background-image: url(${backgroundImage});`;\n\n  return mapp.utils.html`<div style=${inlineStyle}>`;\n}\n\n/**\n@function createPolygonSymbol\n\n@description\nThe createPolygonSymbol creates an icon for a fill [polygon] style object.\n\n@param {style} style A JSON mapp-style object.\n\n@returns {HTMLElement} A HTML element for the style.\n*/\n\nfunction createPolygonSymbol(style) {\n\n  const icon = mapp.utils.svg.node`\n  <svg \n    height=${style.height}\n    width=${style.width}>\n    <rect\n      x=${style.strokeWidth || 1}\n      y=${style.strokeWidth || 1}\n      rx=\"4px\"\n      ry=\"4px\"\n      stroke-linejoin=\"round\"\n      width=${style.width - 2 * (style.strokeWidth || 1)}\n      height=${style.height - 2 * (style.strokeWidth || 1)}\n      fill=${style.fillColor}\n      fill-opacity=${style.fillOpacity || 1}\n      stroke=${style.strokeColor}\n      stroke-width=${style.strokeWidth || 1}>`;\n\n  const backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`;\n\n  const inlineStyle = `\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: ${style.width}px;\n    height: ${style.height}px;\n    background-image: url(${backgroundImage});`;\n\n  return mapp.utils.html`<div style=${inlineStyle}>`;\n}", "/**\n### mapp.ui.elements.dialog()\n\nExports the dialog method as mapp.ui.elements.dialog()\n\n@module /ui/elements/dialog\n*/\n\n/**\n@function dialog\n\n@description\nThe dialog method decorates a dialog object with methods to close or shift the element within the confines of the containing [target] window element.\n\n```js\nconst dialog = mapp.ui.elements.dialog({\n  target: document.body,\n  css_style: 'width: 300px; height: 200px; background: #fff; border: 1px solid #000',\n  header: 'Dialog Header',\n  content: 'Dialog Content',\n  close: true,\n  headerDrag: true\n});\n```\n\n@param {Object} dialog The dialog configuration object.\n@property {HTMLElement} dialog.target The target element where the dialog will be appended.\n@property {string} [dialog.css_style] The CSS styles to apply to the dialog dialog.\n@property {string} [dialog.data_id='dialog'] The data-id attribute value for the dialog.\n@property {string} [dialog.header] The HTML content for the dialog header.\n@property {string} [dialog.content] The HTML content for the dialog body.\n@property {boolean} [dialog.modal] A flag to determine if its a Modal or Dialog.\n@property {Function} [dialog.close] A function to be called when the dialog is closed. Boolean to indicate whether there should be a close method.\n@property {number} [dialog.top] The top position of the dialog.\n@property {number} [dialog.left] The left position of the dialog.\n@property {number} [dialog.right] The right position of the dialog (used to calculate left position).\n@property {boolean} [dialog.contained] A flag indicating whether to keep the dialog within the target element's boundaries.\n@property {boolean} [dialog.containedCentre] A flag indicating whether to keep the dialog centered within the target element's boundaries.\n@property {boolean} [dialog.headerDrag] A flag indicating whether the dialog can be dragged only by the header.By default, the dialog can be dragged from anywhere.\n@returns {HTMLElement} dialog.node The dialog element.\n*/\n\nexport default function dialog(dialog) {\n  \n  if (!dialog.target) {\n\n    // The dialog must be modal if no target is provided.\n    dialog.modal = true;\n\n  // Ensure the target is an HTMLElement before proceeding\n  } else if (!(dialog.target instanceof HTMLElement)) return;\n\n  // Close existing modal.\n  document.querySelector('dialog.modal')?.close()\n  \n  dialog.closeBtn ??= dialog.close && mapp.utils.html.node`\n    <button\n      data-id=close\n      class=\"mask-icon close\"\n      onclick=${closeDialog}>`\n\n  dialog.data_id ??= 'dialog'\n\n  // If headerDrag is true - add the headerDrag class to the dialog header\n  dialog.headerDrag && (dialog.header = mapp.utils.html.node`<header class=\"headerDrag\">${dialog.header}</header>`);\n  \n  let classList = `${dialog.modal ? 'modal' : 'dialog'} ${dialog.class || ''}`\n\n  dialog.node = mapp.utils.html.node`\n    <dialog \n      style=${dialog.css_style}\n      data-id=${dialog.data_id}\n      class=\"${classList}\">\n      ${dialog.closeBtn}\n      ${dialog.header}\n      ${dialog.content}`\n\n\n  if (dialog.modal) {\n\n    document.body.append(dialog.node)\n    dialog.node.showModal()\n\n  } else {\n\n    dialog.target.appendChild(dialog.node)\n    dialog.node.show()\n\n    if (dialog.right) {\n\n      // Calc left from right and offSetWidth\n      dialog.left = dialog.target.offsetWidth - dialog.node.offsetWidth - parseInt(dialog.right)\n    }\n\n    dialog.node.style.top = `${dialog.top || 0}px`\n    dialog.node.style.left = `${dialog.left || 0}px`\n\n    dialog.node.addEventListener('mousedown', handleStartEvent);\n    dialog.node.addEventListener('touchstart', handleStartEvent);\n\n    // Create a ResizeObserver to observe changes in the map's dimensions\n    const resizeObserver = new ResizeObserver(adjustDialogPosition);\n    resizeObserver.observe(dialog.target);\n  }\n\n  // Function to handle the dialog closure\n  function closeDialog() {\n    if (dialog.close instanceof Function) dialog.close()\n    dialog.node.close();\n  }\n\n  // Function to handle the start of a drag event, setting up the necessary event listeners for moving and ending the drag\n  function handleStartEvent(e) {\n\n    // If headerDrag is true, the dialog can only be dragged by the header\n    if (dialog.headerDrag && !e.target.closest('header')) return;\n\n    // Don't trigger shift on right click\n    if (e.which === 3) return;\n\n    dialog.node.style.cursor = 'grabbing';\n\n    const eventsMap = {\n      mousedown: {\n        move: 'mousemove',\n        end: 'mouseup'\n      },\n      touchstart: {\n        move: 'touchmove',\n        end: 'touchend'\n      },\n    };\n\n    const { move: moveEvent, end: endEvent } = eventsMap[e.type];\n\n    dialog.target.addEventListener(moveEvent, shiftEvent);\n    window.addEventListener(endEvent, stopShift);\n  }\n\n  function adjustDialogPosition() {\n\n    const { offsetWidth: mapWidth, offsetHeight: mapHeight } = dialog.target;\n    const { offsetWidth: dialogWidth, offsetHeight: dialogHeight } = dialog.node;\n\n    // Calculate the maximum allowed positions for the dialog\n    const maxLeft = mapWidth - dialogWidth;\n    const maxTop = mapHeight - dialogHeight;\n\n    // Adjust the dialog's position if it exceeds the map boundaries\n    dialog.node.style.left = `${Math.min(Math.max(dialog.node.offsetLeft, 0), maxLeft)}px`;\n    dialog.node.style.top = `${Math.min(Math.max(dialog.node.offsetTop, 0), maxTop)}px`;\n  }\n\n  // Function to end the drag event, resetting cursor style and removing the move and end event listeners\n  function stopShift() {\n    delete dialog.x\n    delete dialog.y\n\n    // If headerDrag is true - the cursor should be set to auto on mouseup\n    dialog.node.style.cursor = dialog.headerDrag ? 'auto' : 'grab';\n\n    dialog.target.removeEventListener('mousemove', shiftEvent);\n    dialog.target.removeEventListener('touchmove', shiftEvent);\n    dialog.target.removeEventListener('mouseup', stopShift);\n    dialog.target.removeEventListener('touchend', stopShift);\n  }\n\n  // Function to handle the move event during a drag, updating the position of the dialog while keeping it within the window bounds\n  function shiftEvent(e) {\n\n    // Set initial x\n    dialog.x ??= e.x\n\n    const leftShift = e.x - dialog.x\n\n    dialog.x = e.x\n\n    // Set initial y\n    dialog.y ??= e.y\n\n    const topShift = e.y - dialog.y\n\n    dialog.y = e.y\n\n    if (dialog.contained && !dialog.modal) {\n\n      shiftContained(dialog, leftShift, topShift)\n      return;\n    }\n\n    if (dialog.containedCentre && !dialog.modal) {\n\n      shiftContainedCentre(dialog, leftShift, topShift)\n      return\n    }\n\n    // left shift\n    dialog.node.style.left = `${dialog.node.offsetLeft + leftShift}px`\n\n    // top shift\n    dialog.node.style.top = `${dialog.node.offsetTop + topShift}px`\n  }\n};\n\n/**\n@function shiftContained\n\n@description\nThe shiftContained method prevents the dialog element to be shifted beyond the extent of the containing window element.\n\n@param {Object} dialog\nThe dialog configuration object.\n@param {integer} leftShift\nShift from left offset.\n@param {integer} topShift\nShift from top offset\n*/\n\nfunction shiftContained(dialog, leftShift, topShift) {\n\n  // Exceeds left offset\n  if ((dialog.node.offsetLeft + leftShift) < 0) {\n\n    dialog.node.style.left = 0\n\n    // Shifts left\n  } else if (leftShift < 0) {\n\n    dialog.node.style.left = `${dialog.node.offsetLeft + leftShift}px`\n\n    // Does NOT exceed right offset\n  } else if ((dialog.target.offsetWidth - dialog.node.offsetWidth - dialog.node.offsetLeft) > 0) {\n\n    // Shifts right\n    dialog.node.style.left = `${dialog.node.offsetLeft + leftShift}px`\n  }\n\n\n  // Exceeds top offset\n  if ((dialog.node.offsetTop + topShift) < 0) {\n\n    dialog.node.style.top = 0\n\n    // Shift top\n  } else if (topShift < 0) {\n\n    dialog.node.style.top = `${dialog.node.offsetTop + topShift}px`\n\n    // Does NOT exceed bottom offset\n  } else if ((dialog.target.offsetHeight - dialog.node.offsetHeight - dialog.node.offsetTop) > 0) {\n\n    // Shift bottom\n    dialog.node.style.top = `${dialog.node.offsetTop + topShift}px`\n  }\n}\n\n/**\n@function shiftContainedCentre\n\n@description\nThe shiftContainedCentre method prevents the dialog elements calculated centre to be shifted beyond the extent of the containing window element.\n\n@param {Object} dialog\nThe dialog configuration object.\n@param {integer} leftShift\nShift from left offset.\n@param {integer} topShift\nShift from top offset\n*/\n\nfunction shiftContainedCentre(dialog, leftShift, topShift) {\n\n  // Exceeds left offset\n  if ((dialog.node.offsetLeft + parseInt(dialog.node.offsetWidth / 2) + leftShift) < 0) {\n\n    return;\n\n    // Shifts left\n  } else if (leftShift < 0) {\n\n    dialog.node.style.left = `${dialog.node.offsetLeft + leftShift}px`\n\n    // Does NOT exceed right offset\n  } else if ((dialog.target.offsetWidth - parseInt(dialog.node.offsetWidth / 2) - dialog.node.offsetLeft) > 0) {\n\n    // Shifts right\n    dialog.node.style.left = `${dialog.node.offsetLeft + leftShift}px`\n  }\n\n\n  // Exceeds top offset\n  if ((dialog.node.offsetTop + parseInt(dialog.node.offsetHeight / 2) + topShift) < 0) {\n\n    return;\n\n    // Shift top\n  } else if (topShift < 0) {\n\n    dialog.node.style.top = `${dialog.node.offsetTop + topShift}px`\n\n    // Does NOT exceed bottom offset\n  } else if ((dialog.target.offsetHeight - parseInt(dialog.node.offsetHeight / 2) - dialog.node.offsetTop) > 0) {\n\n    // Shift bottom\n    dialog.node.style.top = `${dialog.node.offsetTop + topShift}px`\n  }\n}", "let helpDialog\n\nexport default (params) => {\n\n  // Only one helpDialog.node can be shown at any one time.\n  helpDialog?.node.remove()\n\n  if (!params) return;\n\n  helpDialog = {\n    target: document.getElementById('Map'),\n    height: 'auto',\n    width: '200px',\n    css_style: 'padding: 0.5em;',\n    top: 30,\n    left: 60,\n    contained: true,\n    close: true,\n    ...params\n  }\n\n  // Create the helpDialog.node\n  mapp.ui.elements.dialog(helpDialog);\n}", "/**\n## /ui/elements/searchbox\n\nExports the searchbox(component) method as mapp.ui.elements.searchbox() to create a searchbox ui component.\n\n@module /ui/elements/searchbox\n*/\n\n/**\n@function searchbox\n\n@description\nCreates a searchbox input element which executes the provided searchFunction with the event argument on `input` and `focus` events.\n\n@param {Object} component \nThe component object to be decorated.\n@param {Function} component.searchFunction \nThe function to execute on input or focus events.\n@param {HTMLElement} [component.target=<DIV>]\nThe target element to append to.\n\n@returns {Object} \nThe decorated component object.\n*/\n\nexport default function searchbox(component={}) {\n\n  if (!(component.searchFunction instanceof Function)) {\n\n    console.warn(`A searchFunction must be provided for the construction of a searchbox component.`)\n    return;\n  };\n\n  // Ensure the target is an HTMLElement before proceeding\n  if (!(component.target instanceof HTMLElement)) {\n    component.target = mapp.utils.html.node`<div>`\n  };\n\n  component.name ??= 'searchbox-input'\n\n  /**\n  The search input element.\n  @type {HTMLInputElement}\n  */\n  component.input = mapp.utils.html.node`\n    <input\n      name=${component.name}\n      type=\"search\"\n      placeholder=${component.placeholder}>`\n\n  /**\n  The search results list element.\n  @type {HTMLUListElement}\n  */\n  component.list = mapp.utils.html.node`<ul>`\n\n  /**\n  The searchbox container element.\n  @type {HTMLDivElement}\n  */\n  component.node = mapp.utils.html.node`\n    <div class=\"searchbox\">\n      ${component.input}\n      ${component.list}`\n\n  component.target.append(component.node)\n\n  component.input.addEventListener('input', e => component.searchFunction(e));\n\n  component.input.addEventListener('focus', e => component.searchFunction(e));\n\n  return component;\n};\n", "/**\nExports method to create a slider element group.\n\n@module /ui/elements/slider\n*/\n\n/**\n@function slider\n\n@description\nThe slider method creates a numeric input element nested in a group with an associated range slider element.\n\nThe params.value property must be between params.min and params.max params.\n\n@param {Object} params Parameter for slider element.\n@property {numeric} params.value Parameter value.\n@property {numeric} params.min Numeric range min.\n@property {numeric} params.max Numeric range max.\n\n@returns {HTMLElement} Element group containing range and numeric input elements.\n*/\nexport default function slider(params) {\n\n  params.data_id = 'a'\n\n  // Name of range input to update on input.\n  params.rangeInput = 'rangeInput'\n\n  // Range inputs require a step.\n  params.step ??= 1\n\n  // Create numericInput element for formatting and numeric checks.\n  const numericInput = mapp.ui.elements.numericInput(params)\n\n  // The sliderElement property is required to update the range input on numeric input.\n  params.sliderElement = mapp.utils.html.node`\n    <div\n      role=\"group\"\n      data-id=${params.data_id || 'slider'}\n      title=${params.title || ''}\n      class=\"input-range single\"\n      style=${`\n        --min: ${params.min};\n        --max: ${params.max};\n        --a: ${params.value};\n        ${params.style || ''}`}>\n      <div class=\"label-row\">\n        <label>${params.label}\n        ${numericInput}\n        </label>\n      </div>\n      <div class=\"track-bg\"></div>\n      <input data-id=\"a\"\n        name=\"rangeInput\"\n        type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step}\n        value=${params.value}\n        oninput=${onRangeInput}>`\n\n  return params.sliderElement\n\n  /**\n  @function onRangeInput\n\n  @description\n  Assign value from range type input to associated numericInput element.\n\n  Formatting and numeric checks will be handled by the numericInput element.\n\n  @param {Object} e oninput event from range type input.\n  */\n  function onRangeInput(e) {\n\n    // Range type input return a string target.value.\n    const val = Number(e.target.value)\n\n    numericInput.value = val\n\n    // Trigger formatting and numeric checks.\n    numericInput.dispatchEvent(new Event('change'))\n  }\n}", "/**\nExports method to create a slider_ab element group.\n\n@module /ui/elements/slider_ab\n*/\n\n/**\n@function slider_ab\n\n@description\nThe slider method creates a range slider element with two numeric input elements [a/b].\n\nThe params.value property must be between params.min and params.max params.\n\n@param {Object} params Parameter for slider element.\n@property {numeric} params.val_a Parameter value for a input.\n@property {numeric} params.val_b Parameter value for b input.\n@property {numeric} params.min Numeric range min.\n@property {numeric} params.max Numeric range max.\n\n@returns {HTMLElement} Element group containing range and numeric input elements.\n*/\nexport default function slider_ab(params) {\n\n  params.step ??= 1\n\n  const minInputParams = {\n    ...params,\n    data_id: 'a',\n    value: params.val_a,\n    rangeInput: 'minRangeInput',\n    callback: params.callback_a\n  }\n\n  // Create numericInput element for formatting and numeric checks.\n  const minNumericInput = mapp.ui.elements.numericInput(minInputParams)\n\n  const maxInputParams = {\n    ...params,\n    data_id: 'b',\n    value: params.val_b,\n    rangeInput: 'maxRangeInput',\n    callback: params.callback_b\n  }\n\n  // Create numericInput element for formatting and numeric checks.\n  const maxNumericInput = mapp.ui.elements.numericInput(maxInputParams)\n\n  const element = mapp.utils.html.node`\n    <div\n      role=\"group\"\n      class=\"input-range multi\"\n      style=${`\n        --min: ${params.min};\n        --max: ${params.max};\n        --a: ${params.val_a};\n        --b: ${params.val_b};`}>\n      <div \n        class=\"label-row\">\n        <label>${params.label_a || 'A'}\n          ${minNumericInput}</label>\n        <label>${params.label_b || 'B'}\n          ${maxNumericInput}</label>\n      </div>\n      <div class=\"track-bg\"></div>\n      <input data-id=\"a\" type=\"range\"\n        name=\"minRangeInput\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step}\n        value=${params.val_a}\n        oninput=${onRangeInput}/>\n      <input data-id=\"b\" type=\"range\"\n        name=\"maxRangeInput\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step}\n        value=${params.val_b}\n        oninput=${onRangeInput}/>`\n\n  // The sliderElement property is required to update the range input on numeric input.\n  minInputParams.sliderElement = element \n  maxInputParams.sliderElement = element \n\n  /**\n  @function onRangeInput\n\n  @description\n  Assign value from range type input to associated numericInput element.\n\n  Formatting and numeric checks will be handled by the numericInput element.\n\n  @param {Object} e oninput event from range type input.\n  */\n  function onRangeInput(e) {\n\n    // Range type input return a string target.value.\n    const val = Number(e.target.value)\n\n    // Check whether input event is from minRangeInput.\n    if (e.target.dataset.id === 'a') {\n\n      minNumericInput.value = val\n\n      // Trigger formatting and numeric checks.\n      minNumericInput.dispatchEvent(new Event('change'))\n    }\n\n    // Check whether input event is from maxRangeInput.\n    if (e.target.dataset.id === 'b') {\n\n      maxNumericInput.value = val\n\n      // Trigger formatting and numeric checks.\n      maxNumericInput.dispatchEvent(new Event('change'))\n    }\n  }\n\n  return element\n}", "/**\n## /ui/elements/pills\n\nExports the pills(component) method as mapp.ui.elements.pills() to create a pills ui component.\n\n@module /ui/elements/pills\n*/\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    pill_component_remove: 'Remove'\n  }\n});\n\n/**\n@function pills\n\n@description\nDecorates the component object with add() and remove() methods before returning the component.\n\n@param {Object} component \nThe component object to be decorated.\n@param {HTMLElement} component.target \nThe target element to append to.\n@param {Object} [component.pills]\narray of values to be initially selected\n@param {Function} [component.addCallback] \nFunction to execute once a pill has been added. Takes as arguments added value and array of selected values.\n@param {Function} [component.removeCallback] \nFunction to execute once a pill has been removed. Takes as arguments removed value and array of selected values.\n\n@returns {Object} \nThe decorated component object.\n*/\n\nexport default function pills(component = {}) {\n\n  component.container = mapp.utils.html.node`<div class=\"pill-container\">`\n\n  // Create set from pills array.\n  component.pills = Array.isArray(component.pills) ? new Set(component.pills) : new Set();\n\n  component.add = add\n\n  component.remove = remove\n\n  // create pills for values passed initially\n  component.pills.forEach(pill => component.add(pill));\n\n  // Append container to component target if instanceof HTMLElement\n  if (component.target instanceof HTMLElement) {\n    component.target.append(component.container);\n  };\n\n  return component;\n};\n\n/**\n@function add\n\n@description\nAdds a pill with the provided value to the pill component (this) and executes the component.addCallback() method if declared.\n\n@param {string} val The pill value.\n*/\n\nfunction add(val) {\n\n  const component = this;\n\n  const pill = mapp.utils.html.node`<div\n    class=\"pill\"\n    style=${component.css_pill}\n    data-value=${val}\n    title=\"${val}\">${val}`\n\n  // Only append the remove button to pill if configured.\n  if (component.removeCallback) pill.append(mapp.utils.html.node`\n    <button\n      data-value=${val}\n      title=${mapp.dictionary.pill_component_remove}\n      class=\"primary-background\"\n      onclick=${e => component.remove(val)}\n      >&#10005;`)\n\n  if (!component.pills.has(val)) component.pills.add(val); // add to selection\n\n  // add pill\n  component.container.append(pill);\n\n  if (typeof component.addCallback === 'function') {\n\n    // execute add callback if exists\n    component.addCallback(val, component.pills);\n  }\n}\n\n/**\n@function remove\n\n@description\nRemoves a pill with the provided value to the pill component (this) and executes the component.removeCallback() method if declared.\n\n@param {string} val The pill value.\n*/\n\nfunction remove(val) {\n\n  const component = this;\n\n  const pillElement = Array.from(component.container.children)\n    .find(child => child.getAttribute('data-value') === val.toString())\n\n  pillElement?.remove()\n\n  // remove pill from selection\n  component.pills.delete(val);\n\n  // execute removeCallback if defined\n  if (typeof component.removeCallback === 'function') component.removeCallback(val, component.pills);\n}", "/**\n### mapp.ui.elements.numericInput()\n\nExports the numericInput elements method.\n\n@module /ui/elements/numericInput\n*/\n\n/**\n@function numericInput\n\n@description\nCreates a type=text input element with validation checks oninput.\n\n@param {Object} params Parameter for the creation of the input element.\n@property {string} [params.placeholder=''] The placeholder for the text input.\n@property {string} [params.data_id='numeric-input'] The data id attribute for the input element.\n\n@returns {Object} HTML input element\n*/\nexport default function numericInput(params) {\n\n  params.placeholder ??= ''\n  params.data_id ??= 'numeric-input'\n\n  const numericInput = mapp.utils.html.node`<input\n    data-id=${params.data_id}\n    type=\"text\"\n    style=\"text-align: right\"\n    placeholder=${params.placeholder}\n    value=${mapp.utils.formatNumericValue(params)}\n    onchange=${e => oninput(e, params)}\n    oninput=${e => oninput(e, params)}>`\n\n  return numericInput\n}\n\n/**\n@function oninput\n\n@description\nCreates a type=text input element with validation checks for numeric values.\n\nThe value of an associated sliderElement will be updated if validated.\n\n@param {Object} e The event object from input element.\n@param {Object} params The config object argument.\n@property {Object} e.target The input element.\n@property {Object} params.callback A callback method is required.\n*/\nfunction oninput(e, params) {\n\n  // Assign stringValue from input target.\n  params.stringValue = e.target.value\n\n  // Assign numeric newValue.\n  params.newValue = mapp.utils.unformatStringValue(params)\n\n  if (numericChecks(params.newValue, params)) {\n\n    // The numericCheck passes.\n    delete params.invalid\n    e.target.classList.remove('invalid');\n\n    // Updated sliderElement value only if validated.\n    if (params.sliderElement) {\n\n      // Set styling param for the track.\n      params.sliderElement.style.setProperty(`--${e.target.dataset.id}`, params.newValue)\n\n      // Set value for the range input.\n      params.sliderElement.querySelector(`[name=${params.rangeInput}]`).value = params.newValue\n    }\n\n  } else {\n\n    // The numericCheck fails.\n    params.invalid = true\n    e.target.classList.add('invalid');\n  }\n\n  // Pass valid newValue to callback method.\n  params.callback(params.newValue)\n\n  // The invalid input should not be formatted.\n  if (params.invalid) return;\n\n  // Re-format the params numeric value (newValue || value) and set as input string value.\n  e.target.value = mapp.utils.formatNumericValue(params)\n}\n\n/**\n@function numericChecks\n\n@description\nThe numericChecks method checks whether a provided numeric value is a number, larger than params.min, and smaller than params.max.\n\n@param {Object} value The numeric value to check.\n@param {Object} params The config object argument.\n@property {numeric} params.min Value must be larger than min.\n@property {numeric} params.max Value must be smaller than max.\n\n@returns {Boolean} true if checks are passed.\n*/\nfunction numericChecks(value, params) {\n\n  // Check whether value is a number.\n  if (isNaN(value)) return false;\n\n  if (params.min && value < params.min) {\n\n    // The value is smaller than min.\n    return false\n  }\n\n  if (params.max) {\n\n    return value <= params.max\n  }\n\n  return true\n}\n", "/**\n## mapp/ui/elements\n\n@module /ui/elements\n*/\n\nimport card from './card.mjs';\nimport chkbox from './chkbox.mjs';\nimport contextMenu from './contextMenu.mjs';\nimport drawer from './drawer.mjs';\nimport drawing from './drawing.mjs';\nimport dropdown from './dropdown.mjs';\nimport dropdown_multi from './dropdown_multi.mjs';\nimport btnPanel from './btnPanel.mjs';\nimport legendIcon from './legendIcon.mjs';\nimport dialog from './dialog.mjs';\nimport helpDialog from './helpDialog.mjs';\nimport searchbox from './searchbox.mjs';\nimport slider from './slider.mjs';\nimport slider_ab from './slider_ab.mjs';\nimport pills from './pills.mjs'\nimport numericInput from './numericInput.mjs'\n\n/**\nUI elements object containing various UI components.\n@typedef {Object} UIElements\n@property {Function} btnPanel - Button panel component.\n@property {Function} card - Card component.\n@property {Function} chkbox - Checkbox component.\n@property {Function} contextMenu - Context menu component.\n@property {Function} drawer - Drawer component.\n@property {Function} drawing - Drawing component.\n@property {Function} dropdown - Dropdown component.\n@property {Function} dropdown_multi - Multi-select dropdown component.\n@property {Function} legendIcon - Legend icon component.\n@property {Function} dialog - Dialog component.\n@property {Function} helpDialog - Help Dialog component.\n@property {Function} searchbox - Searchbox component.\n@property {Function} slider - Slider component.\n@property {Function} slider_ab - Slider with A/B comparison component.\n@property {Function} pills - pills component.\n\nExporting UI elements.\n@type {UIElements}\n*/\nexport default {\n  btnPanel,\n  card,\n  chkbox,\n  contextMenu,\n  drawer,\n  drawing,\n  dropdown,\n  dropdown_multi,\n  numericInput,\n  legendIcon,\n  dialog,\n  pills,\n  helpDialog,\n  searchbox,\n  slider,\n  slider_ab\n};", "/**\n## ui/utils/idleLogout\n\n@module /ui/utils/idleLogout\n*/\n\nconst idle = {\n  idle: 600,\n}\n\nexport default params => {\n\n  Object.assign(idle, params)\n\n  if (idle.idle === 0) return;\n\n  // Define window events that reset the lock timeout.\n  window.onload = resetTimer;\n  window.onmousemove = resetTimer;\n  window.onmousedown = resetTimer;\n  window.ontouchstart = resetTimer;\n  window.onclick = resetTimer;\n  window.onkeypress = resetTimer;\n  resetTimer()\n  renewToken()\n}\n\n// Reset idle timeout\nfunction resetTimer() {\n\n  if (idle.locked) return\n\n  idle.timeout && clearTimeout(idle.timeout);\n\n  idle.timeout = setTimeout(lock, idle.idle * 1000)\n}\n\n// Lock interface\nfunction lock() {\n\n  idle.locked = true\n\n  // Do not renew cookie when interface is locked.\n  idle.renew && clearTimeout(idle.renew)\n\n  // Destroy cookie.\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', `${idle.host}/api/user/cookie?destroy=true`)\n\n  // Reload location once cookie has been removed.\n  xhr.onload = e => location.reload()\n  xhr.send()\n}\n\n// Renew cookie\nfunction renewToken() {\n\n  // Renew token after idle minus 20 seconds.\n  idle.renew = setTimeout(cookie, (idle.idle - 20) * 1000)\n\n  function cookie() {\n\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', `${idle.host}/api/user/cookie?renew=true`)\n    xhr.onload = e => {\n\n      // Lock interface if cookie renewal fails.\n      if (e.target.status === 401) return lock()\n\n      // Re-call method to renew token.\n      renewToken()\n    }\n\n    xhr.send()\n  }\n}", "/**\n## ui/utils/imagePreview\n\n@module /ui/utils/imagePreview\n*/\n\nexport default e => {\n\n  document.body.append(mapp.utils.html.node`\n    <div class=\"interface-mask\">\n      <div class=\"bg-image\" style=${`background-image:url(${e.target.src})`}>\n      <button class=\"btn-close mask-icon close\"\n        onclick=${e => e.target.parentElement.parentElement.remove()}>`);\n\n}", "/**\n## ui/utils/resizeHandler\n\n@module /ui/utils/resizeHandler\n*/\n\nexport default (params) => {\n\n  params.target.addEventListener('mousedown', (e) => {\n    e.preventDefault();\n    document.body.style.cursor = 'grabbing';\n    window.addEventListener('mousemove', params.resizeEvent);\n    window.addEventListener('mouseup', stopResize);\n  });\n\n  params.target.addEventListener(\n    'touchstart',\n    (e) => {\n      e.preventDefault();\n      window.addEventListener('touchmove', params.resizeEvent);\n      window.addEventListener('touchend', stopResize);\n    },\n    {\n      passive: true,\n    }\n  );\n\n  // Remove vertical resize events.\n  function stopResize() {\n    document.body.style.cursor = 'auto';\n    window.removeEventListener('mousemove', params.resizeEvent);\n    window.removeEventListener('touchmove', params.resizeEvent);\n    window.removeEventListener('mouseup', stopResize);\n    window.removeEventListener('touchend', stopResize);\n  }\n}", "/**\n## ui/utils\n\nThe MAPP UI utils exports legacy methods to warn that plugins are required for the use of third party dataview libraries eg. Tabulator and Chart[js].\n\nThe idleLogout, imagePreview, resizeHandler utility methods are imported and added to the ui.utils{} object.\n\n@requires /ui/utils/idleLogout\n@requires /ui/utils/imagePreview\n@requires /ui/utils/resizeHandler\n\n@module /ui/utils\n*/\n\n/**\n@function Tabulator\n@deprecated\n\n@description\nThe deprecated `mapp.ui.utils.Tabulator()` method will warn if used.\n\nThe Tabulator dataview plugin must be loaded in order to create Tabulator dataviews.\n*/\n\nfunction Tabulator(_this) {\n\n  console.warn('Please change mapp.ui.utils.Tabulator() to mapp.ui.utils.tabulator.create() which requires the Tabulator dataview plugin to be loaded.');\n}\n\n/**\n@function Chart\n@deprecated\n\n@description\nThe deprecated `mapp.ui.utils.Chart()` method will warn if used.\n\nThe ChartJS dataview plugin must be loaded in order to create ChartJS dataviews.\n*/\n\nfunction Chart(_this) {\n\n  console.warn('Please change mapp.ui.utils.Chart() to mapp.ui.utils.chartjs.create() which requires the ChartJS dataview plugin to be loaded.');\n}\n\nimport idleLogout from './idleLogout.mjs'\n\nimport imagePreview from './imagePreview.mjs'\n\nimport resizeHandler from './resizeHandler.mjs'\n\nexport default {\n  Chart,\n  Tabulator,\n  idleLogout,\n  imagePreview,\n  resizeHandler,\n}", "/**\n * ### mapp.ui.gazetteer()\n * Module to export the gazetteer UI element functions used in mapp.\n * @module /ui/gazetteer\n */\n\n/**\n * Creates a gazetteer component.\n * @function gazetteer\n * @param {Object} gazetteer - The gazetteer configuration object.\n * @param {HTMLElement} gazetteer.target - The target element to append the gazetteer to.\n * @param {string} gazetteer.placeholder - The placeholder text for the search input.\n * @param {string} [gazetteer.provider] - The external gazetteer provider to use for searching.\n * @returns {Object} The gazetteer object.\n */\nexport default gazetteer => {\n\n  mapp.utils.merge(mapp.dictionaries, {\n    en: {\n      invalid_lat_long_range: 'Invalid coordinates: Latitude and longitude values must be within valid ranges.',\n      invalid_lat_lon: 'The provided Coordinates do not fall within the selected Locale.'\n    },\n    de: {\n      invalid_lat_long_range: 'Falsche Eingabe von Latitude / Longitude.',\n      invalid_lat_lon: 'Koordinate liegt au\u00DFerhalb der Lokale.'\n    }\n  })\n\n  gazetteer = {...gazetteer, ...mapp.ui.elements.searchbox({\n    target: gazetteer.target,\n    name: 'gazetteer-search-input',\n    placeholder: gazetteer.placeholder,\n    searchFunction: search\n  })}\n\n  function search(e) {\n\n    // Clear results\n    gazetteer.list.innerHTML = ''\n\n    // Only search if value has length.\n    if (!e.target.value.length) return;\n\n    // Get possible coordinates from input.\n    let ll = e.target.value.split(',').map(parseFloat)\n\n    // Check whether coordinates are valid float values.\n    if (ll.length === 2 && ll.every(n => typeof n === 'number' && !isNaN(n) && isFinite(n))) {\n\n      // Check if both coordinates are within valid range (latitude: -90 to 90, longitude: -180 to 180).\n      const [lat, lng] = ll;\n\n      if (lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n        gazetteer.list.appendChild(mapp.utils.html.node`\n        <li onclick=${e => {\n            mapp.utils.gazetteer.getLocation({\n              label: `Latitude:${ll[0]}, Longitude:${ll[1]}`,\n              source: 'Coordinates',\n              lng: ll[1],\n              lat: ll[0]\n            }, gazetteer);\n          }}><span>Latitude:${ll[0]}, Longitude:${ll[1]}</span>`);\n\n        // Do not search if coordinates are provided.\n        return;\n\n      } else {\n\n        // Handle the case where coordinates are not within valid ranges.\n        // Add the error as a list item\n        gazetteer.list.appendChild(mapp.utils.html.node`\n          <li style=\"color: red;\">\n            <span>${mapp.dictionary.invalid_lat_long_range}</span>`);\n        \n      }\n    }\n\n    // An external gazetteer provider is requested\n    if (gazetteer.provider) {\n\n      // Check whether the gazetteer provider is available.\n      if (!Object.hasOwn(mapp.utils.gazetteer, gazetteer.provider)) {\n\n        console.warn('Requested gazetteer service not available');\n      } else {\n\n        // Query the external gazetteer provider\n        mapp.utils.gazetteer[gazetteer.provider](e.target.value, gazetteer)\n      }\n    }\n\n    // Request datasets gazetteer\n    mapp.utils.gazetteer.datasets(e.target.value, gazetteer)\n  }\n\n}", "/**\n## MAPP/UI\n\nThe primary module for the MAPP/UI API will import other MAPP/UI modules and assign itself to the `window.ui{}` object.\n\nThe `ui{}` object will be assigned to the global `mapp{}` object if loaded prior to the execution of the ui module script.\n\nThe `ui.mjs` module is used as entry point for the esbuild process to bundle the MAPP/UI API.\n\n@requires /ui/elements\n@requires /ui/locations\n@requires /ui/layers\n@requires /ui/utils\n\n@module ui\n*/\n\nimport layers from './ui/layers/_layers.mjs'\n\nimport locations from './ui/locations/_locations.mjs'\n\nimport Dataview from './ui/Dataview.mjs'\n\nimport Tabview from './ui/Tabview.mjs'\n\nimport elements from './ui/elements/_elements.mjs'\n\nimport utils from './ui/utils/_utils.mjs'\n\nimport Gazetteer from './ui/Gazetteer.mjs'\n\nself.ui = {\n  layers,\n  locations,\n  elements,\n  utils,\n  Gazetteer,\n  Dataview,\n  Tabview,\n}\n\nif (mapp) {\n\n  mapp.ui = ui\n}"],
  "mappings": "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",
  "names": ["view_default", "layer", "content", "key", "panel", "a", "b", "chk", "e", "minZoom", "entry", "maxZoom", "view", "header", "el", "listview_default", "params", "listview", "layer", "add", "createGroup", "group", "hideLayers", "e", "metaContent", "filters_default", "filter_text", "filter_numeric", "filter_in", "filter_date", "filter_boolean", "filter_null", "timeout", "applyFilter", "layer", "filter", "e", "booleanFilter", "checked", "nullFilter", "generateMinMax", "response", "min", "max", "entry", "affix", "val", "record", "chkSet", "dropdown", "options", "searchbox_filter", "pillComponent", "pills", "searchbox", "pattern", "filtered", "i", "chkBoxes", "idx", "inputAfter", "onClose", "inputBefore", "meta_default", "layer", "meta", "draw_default", "layer", "elements", "key", "node", "filter_default", "layer", "entry", "dropdown", "e", "filter", "content", "clearAll", "gazetteer_default", "layer", "gazetteer", "dataviews", "layer", "dataviewChkboxes", "entry", "dataview", "dv", "reports_default", "layer", "reportLinks", "key", "report", "href", "stylePanel", "layer", "content", "e", "checked", "key", "entry", "display", "z", "header", "categorizedTheme", "layer", "theme", "timeout", "e", "allSwitches", "disabledSwitches", "switch_", "cat", "field", "catLegendIcon", "icon", "classList", "cat_label", "label", "filter", "f", "key", "graduatedTheme", "layer", "theme", "catElements", "cat", "catClass", "catIcon", "classList", "basicTheme", "layer", "theme", "legendIcon", "icon", "layers_default", "view_default", "listview_default", "filters_default", "meta_default", "draw_default", "stylePanel", "filter_default", "gazetteer_default", "reports_default", "dataviews", "categorizedTheme", "graduatedTheme", "basicTheme", "layer", "view", "location", "header", "entry", "toggleLocationViewEdits", "valChange", "renderLocationView", "dv", "onClickEditToggle", "e", "listview_default", "params", "records", "clearAll", "e", "location", "target", "key", "record", "el", "hook", "gazCheck", "gazInput", "groups", "infoj", "location", "infoj_order", "listview", "_entry", "infoj_order_field", "entry", "keyIdx", "entryJSONB", "entryObject", "entrySkip", "entryNullValue", "entryDefault", "entryGroup", "entryNode", "entryTitle", "entryQuery", "el", "field", "fieldEntry", "classString", "paramString", "response", "boolean", "entry", "checked", "icon", "types", "image", "images", "documents", "onload", "imageLoad", "docLoad", "cloudinary_default", "entry", "trashBtn", "e", "trash", "upload", "docs", "doc", "reader", "img", "canvas", "max_size", "width", "height", "dataURL", "public_id", "response", "errorDetail", "errorMessage", "postUpdate", "valueSet", "content", "dataview", "entry", "dateString", "entry", "timeString", "formats", "date_default", "e", "val", "defaults", "geometry", "entry", "show", "modify", "checked", "draw", "edit", "icon", "chkbox", "update", "e", "btn", "feature", "key", "drawCallback", "json_default", "entry", "val", "e", "mvt_clone_default", "entry", "chkZoom", "paramString", "chkbox", "checked", "numeric", "entry", "edit", "pin_default", "entry", "chkbox", "checked", "pills_default", "entry", "link_default", "entry", "href", "tab_default", "entry", "tabview", "checked", "text", "entry", "textedit", "textoptions", "response", "row", "onInput", "e", "optionEntries", "option", "_entry", "textarea_default", "entry", "val", "e", "node", "time_default", "entry", "val", "stringVal", "e", "vector_layer", "entry", "checked", "hide", "show", "chkbox", "paramString", "key", "entry", "classList", "e", "title", "entry", "tooltipSpan", "_query_button", "entry", "query", "paramString", "response", "entries_default", "boolean", "dataview", "date_default", "defaults", "cloudinary_default", "geometry", "textarea_default", "numeric", "json_default", "pills_default", "key", "link_default", "mvt_clone_default", "pin_default", "tab_default", "text", "time_default", "title", "vector_layer", "_query_button", "locations_default", "view", "listview_default", "infoj", "entries_default", "Dataview", "_this", "checkDataview", "updateDataview", "show", "hide", "checked", "dataviewToolbar", "dataviewMapChange", "params", "paramString", "response", "target", "toolbarElements", "key", "item", "targetMapElement", "Tabview", "tabview", "addTab", "e", "entry", "showTab", "removeTab", "tab", "sibling", "card_default", "params", "e", "chkbox_default", "params", "e", "contextMenu_default", "modify", "draw", "menu", "drawer", "params", "onClick", "e", "drawing_default", "point", "line", "polygon", "rectangle", "circle_2pt", "circle", "locator", "drawOnclick", "layer", "interaction", "btn", "feature", "helpDialog", "e", "v", "coordinates", "unitsDropDown", "entry", "rangeSlider", "pos", "location", "coords", "dropdown_default", "params", "val", "_pills", "item", "ul", "li", "liOnClick", "e", "entry", "btn", "v", "headerOnClick", "bounds", "viewDiff", "el", "headerSpan", "dropdown_multi_default", "params", "btnPanel_default", "params", "e", "xmlSerializer", "legendIcon", "style", "createIconFromArray", "createIconFromInlineStyle", "createLineSymbol", "createPolygonSymbol", "canvas", "toLoad", "onImgLoad", "vectorContext", "icon", "legendScale", "imageStyle", "img", "iconUrl", "inlineStyle", "path", "backgroundImage", "dialog", "closeDialog", "classList", "handleStartEvent", "adjustDialogPosition", "e", "eventsMap", "moveEvent", "endEvent", "shiftEvent", "stopShift", "mapWidth", "mapHeight", "dialogWidth", "dialogHeight", "maxLeft", "maxTop", "leftShift", "topShift", "shiftContained", "shiftContainedCentre", "helpDialog", "helpDialog_default", "params", "searchbox", "component", "e", "slider", "params", "numericInput", "onRangeInput", "e", "val", "slider_ab", "params", "minInputParams", "minNumericInput", "maxInputParams", "maxNumericInput", "element", "onRangeInput", "e", "val", "pills", "component", "add", "remove", "pill", "val", "e", "child", "numericInput", "params", "e", "oninput", "numericChecks", "value", "elements_default", "btnPanel_default", "card_default", "chkbox_default", "contextMenu_default", "drawer", "drawing_default", "dropdown_default", "dropdown_multi_default", "numericInput", "legendIcon", "dialog", "pills", "helpDialog_default", "searchbox", "slider", "slider_ab", "idle", "idleLogout_default", "params", "resetTimer", "renewToken", "lock", "xhr", "e", "cookie", "imagePreview_default", "e", "resizeHandler_default", "params", "e", "stopResize", "Tabulator", "_this", "Chart", "utils_default", "idleLogout_default", "imagePreview_default", "resizeHandler_default", "Gazetteer_default", "gazetteer", "search", "e", "ll", "n", "lat", "lng", "layers_default", "locations_default", "elements_default", "utils_default", "Gazetteer_default", "Dataview", "Tabview"]
}

{
  "version": 3,
  "sources": ["../../../lib/ui/layers/view.mjs", "../../../lib/ui/layers/listview.mjs", "../../../lib/ui/layers/filters.mjs", "../../../lib/ui/layers/panels/meta.mjs", "../../../lib/ui/layers/panels/draw.mjs", "../../../lib/ui/layers/panels/filter.mjs", "../../../lib/ui/layers/panels/gazetteer.mjs", "../../../lib/ui/layers/panels/dataviews.mjs", "../../../lib/ui/layers/panels/reports.mjs", "../../../lib/ui/layers/panels/style.mjs", "../../../lib/ui/layers/legends/categorized.mjs", "../../../lib/ui/layers/legends/distributed.mjs", "../../../lib/ui/layers/legends/graduated.mjs", "../../../lib/ui/layers/legends/basic.mjs", "../../../lib/ui/layers/_layers.mjs", "../../../lib/ui/locations/view.mjs", "../../../lib/ui/locations/listview.mjs", "../../../lib/ui/locations/infoj.mjs", "../../../lib/ui/locations/entries/boolean.mjs", "../../../lib/ui/locations/entries/cloudinary.mjs", "../../../lib/ui/locations/entries/dataview.mjs", "../../../lib/ui/locations/entries/date.mjs", "../../../lib/ui/locations/entries/defaults.mjs", "../../../lib/ui/locations/entries/geometry.mjs", "../../../lib/ui/locations/entries/json.mjs", "../../../lib/ui/locations/entries/mvt_clone.mjs", "../../../lib/ui/locations/entries/numeric.mjs", "../../../lib/ui/locations/entries/pin.mjs", "../../../lib/ui/locations/entries/link.mjs", "../../../lib/ui/locations/entries/tab.mjs", "../../../lib/ui/locations/entries/text.mjs", "../../../lib/ui/locations/entries/textarea.mjs", "../../../lib/ui/locations/entries/time.mjs", "../../../lib/ui/locations/entries/vector_layer.mjs", "../../../lib/ui/locations/entries/_entries.mjs", "../../../lib/ui/locations/_locations.mjs", "../../../lib/ui/Dataview.mjs", "../../../lib/ui/Tabview.mjs", "../../../lib/ui/elements/card.mjs", "../../../lib/ui/elements/chkbox.mjs", "../../../lib/ui/elements/contextMenu.mjs", "../../../lib/ui/elements/drawer.mjs", "../../../lib/ui/elements/drawing.mjs", "../../../lib/ui/elements/dropdown.mjs", "../../../lib/ui/elements/dropdown_multi.mjs", "../../../lib/ui/elements/btnPanel.mjs", "../../../lib/ui/elements/legendIcon.mjs", "../../../lib/ui/elements/modal.mjs", "../../../lib/ui/elements/slider.mjs", "../../../lib/ui/elements/slider_ab.mjs", "../../../lib/ui/elements/toolbar_el.mjs", "../../../lib/ui/elements/_elements.mjs", "../../../lib/ui/utils/Chart.mjs", "../../../lib/ui/utils/Tabulator.mjs", "../../../lib/ui/utils/tabulatorUtils.mjs", "../../../lib/ui/utils/idleLogout.mjs", "../../../lib/ui/utils/imagePreview.mjs", "../../../lib/ui/utils/resizeHandler.mjs", "../../../lib/ui/utils/_utils.mjs", "../../../lib/ui/Gazetteer.mjs", "../../../lib/ui.mjs"],
  "sourcesContent": ["mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_zoom_to_extent: 'Zoom to filtered layer extent',\n    layer_visibility: 'Toggle visibility',\n  },\n  de: {\n    layer_zoom_to_extent: 'Zoom zum Ausma\u00DF des gefilterten Datensatzes',\n    layer_visibility: 'Umschalten der Ansicht',\n  },\n  cn: {\n    layer_zoom_to_extent: '\u7F29\u653E\u81F3\u76F8\u5E94\u7B5B\u9009\u8303\u56F4',\n    layer_visibility: '\u5207\u6362\u53EF\u89C1\u6027',\n  },\n  pl: {\n    layer_zoom_to_extent: 'Poka\u017C zasi\u0119g warstwy',\n    layer_visibility: 'Widoczno\u015B\u0107',\n  },\n  ko: {\n    layer_zoom_to_extent: '\uD544\uD130\uB41C \uB808\uC774\uC5B4\uD06C\uAE30\uC5D0 \uC90C(zoom)',\n    layer_visibility: '\uD1A0\uAE00 \uAC00\uC2DC\uC131',\n  },\n  fr: {\n    layer_zoom_to_extent: 'Zoom sur l\\'\u00E9tendue de la couche',\n    layer_visibility: 'Changer la visiblit\u00E9',\n  },\n  ja: {\n    layer_zoom_to_extent: '\u30D5\u30A3\u30EB\u30BF\u30FC\u3055\u308C\u305F\u30EC\u30A4\u30E4\u30FC\u7BC4\u56F2\u3092\u30BA\u30FC\u30E0\u306B',\n    layer_visibility: '\u8868\u793A\u5207\u66FF',\n  }\n})\n\nexport default (layer) => {\n\n  if (layer.view === null) {\n    \n    // Do not create a layer view.\n    return;\n  }\n\n  layer.view = mapp.utils.html.node`<div class=\"layer-view\">`\n    \n  // Create content from layer view panels and plugins\n  const content = Object.keys(layer)\n    .map(key => mapp.ui.layers.panels[key] && mapp.ui.layers.panels[key](layer))\n    .filter(panel => typeof panel !== 'undefined')\n\n  // Set default order for panel if not explicit in layer config.\n  layer.panelOrder = layer.panelOrder || ['draw-drawer','dataviews-drawer','filter-drawer','style-drawer','meta']\n\n  content.sort((a,b)=>{\n\n    // Sort according to data-id in panelOrder array.\n    return layer.panelOrder.findIndex(chk => chk === a.dataset?.id)\n      < layer.panelOrder.findIndex(chk => chk === b.dataset?.id)\n      ? 1 : -1;\n  })\n\n  if (layer.drawer !== null) {\n\n    const zoomToExtent = layer.filter.zoomToExtent && mapp.utils.html`\n      <button\n        data-id=zoomToExtent\n        title=${mapp.dictionary.layer_zoom_to_extent}\n        class=\"mask-icon fullscreen\"\n        onclick=${async e=>{\n          \n          // response indicates whether locations were found.\n          let response = await layer.zoomToExtent()\n\n          // disable button if no locations were found.\n          e.target.disabled = !response\n        }}>` || ``\n \n    // Create toogleDisplay button for header.\n    const toggleDisplay = mapp.utils.html.node`\n      <button\n        data-id=display-toggle\n        title=${mapp.dictionary.layer_visibility}\n        class=\"${`mask-icon toggle ${layer.display && 'on' || 'off'}`}\"\n        onclick=${e => layer.display ? layer.hide() : layer.show()}>`\n\n    // Add on callback for toggle button.\n    layer.showCallbacks.push(() => {\n      toggleDisplay.classList.add('on')\n    })\n\n    // Remove on callback for toggle button.\n    layer.hideCallbacks.push(() => {\n      toggleDisplay.classList.remove('on')\n    })\n\n    const header = mapp.utils.html`\n      <h2>${layer.name || layer.key}</h2>\n      ${zoomToExtent}\n      ${toggleDisplay}\n      <div class=\"mask-icon expander\"></div>`\n\n    // Create layer drawer node.\n    layer.drawer = mapp.ui.elements.drawer({\n      data_id: `layer-drawer`,\n      class: `layer-view raised ${layer.classList || ''} ${content.length? '' : 'empty'}`,\n      header: header,\n      content: content\n    })\n\n    // Render layer.drawer into layer.view\n    mapp.utils.render(layer.view, layer.drawer)\n\n  } else {\n\n    // Append elements directly to layer.view\n    content.forEach(el => layer.view.append(el))\n  }\n\n  // The layer view drawer should be disabled if layer.tables are not available for the current zoom level.\n  layer.mapview.Map.getTargetElement().addEventListener('changeEnd', ()=>{\n\n    if (!layer.tables) return;\n\n    if (layer.tableCurrent() === null) {\n\n      // Collapse drawer and disable layer.view.\n      layer.view.querySelector('[data-id=layer-drawer]').classList.remove('expanded')\n      layer.view.classList.add('disabled')\n\n    } else {\n\n      // Enable the layer.view.\n      layer.view.classList.remove('disabled')\n    }\n    \n  })\n}", "import view from './view.mjs'\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_group_hide_layers: 'Hide all layers in group',\n  },\n  de: {\n    layer_group_hide_layers: 'Ausschalten aller Ebenen in Gruppe',\n  },\n  cn: {\n    layer_group_hide_layers: '\u9690\u85CF\u56FE\u5C42',\n  },\n  pl: {\n    layer_group_hide_layers: 'Ukryj warstwy z tej grupy',\n  },\n  ko: {\n    layer_group_hide_layers: '\uADF8\uB8F9\uC5D0\uC11C \uB808\uC774\uC5B4 \uC228\uAE30\uAE30',\n  },\n  fr: {\n    layer_group_hide_layers: 'Cacher les couches du groupe',\n  },\n  ja: {\n    layer_group_hide_layers: '\u30B0\u30EB\u30FC\u30D7\u304B\u3089\u30EC\u30A4\u30E4\u30FC\u3092\u96A0\u3059',\n  }\n})\n\nexport default function (params){\n\n  if (!params.mapview) return\n\n  if (!params.target) return\n\n  const listview = {\n    node: params.target,\n    groups: {}\n  }\n\n  // Loop through the layers and add to layers list.\n  Object.values(params.mapview.layers).forEach(layer => add(layer))\n\n  // Loop through the layers and add to layers list.\n  function add(layer){\n\n    // Do not create a layer view.\n    if (layer.hidden) return;\n\n    // Create the layer view.\n    view(layer)\n\n    if (!layer.group) {\n      listview.node.appendChild(layer.view)\n      listview.node.dispatchEvent(new CustomEvent('addLayerView', {\n        detail: layer\n      }))\n      return\n    }\n\n    // Create new layer group if group does not exist yet.\n    if (!listview.groups[layer.group]) createGroup(layer)\n\n    // Add layer to group.\n    listview.groups[layer.group].addLayer(layer)\n\n    listview.node.dispatchEvent(new CustomEvent('addLayerView', {\n      detail: layer\n    }))\n  }\n\n  function createGroup(layer) {\n\n    // Create group object.\n    const group = {\n      list: []\n    }\n  \n    // Assign layer group to listview object.\n    listview.groups[layer.group] = group\n\n    // Create hide all group layers button.\n    const hideLayers = mapp.utils.html.node`\n      <button\n        class=\"mask-icon on visibility-off\"\n        title=${mapp.dictionary.layer_group_hide_layers}\n        onclick=${e => {\n\n          e.target.style.visibility = 'hidden'\n\n          group.list\n            .filter(layer => layer.display)\n            .forEach(layer => layer.hide())\n\n        }}>`\n \n    group.meta = mapp.utils.html.node`<div class=\"meta\">`\n\n    group.drawer = mapp.ui.elements.drawer({\n      data_id: `layer-drawer`,\n      class: `layer-group ${layer.groupClassList || ''}`,\n      header: mapp.utils.html`\n        <h2>${layer.group}</h2>\n        ${hideLayers}\n        <div class=\"mask-icon expander\"></div>`,\n      content: group.meta\n    })\n\n    listview.node.appendChild(group.drawer)\n\n    // Check whether some layers group are visible and toggle visible button display accordingly.\n    group.chkVisibleLayer = () => {\n\n      hideLayers.style.visibility = group.list.some(layer => layer.display) ?\n        'visible' : 'hidden'\n    }\n\n    group.addLayer = (layer) => {\n\n      layer.group = group\n  \n      if (layer.groupmeta) {\n        const metaContent = group.meta.appendChild(mapp.utils.html.node`<div>`)\n        metaContent.innerHTML = layer.groupmeta\n      }\n  \n      group.list.push(layer)\n  \n      group.drawer.appendChild(layer.view)\n\n      group.chkVisibleLayer()\n\n      layer.showCallbacks.push(()=>group.chkVisibleLayer())\n\n      layer.hideCallbacks.push(()=>group.chkVisibleLayer())      \n    }\n  \n  }\n}", "export default {\n  like: filter_text,\n  match: filter_text,\n  numeric: filter_numeric,\n  integer: filter_numeric,\n  in: filter_in,\n  ni: filter_in,\n  date: filter_date,\n  datetime: filter_date,\n  boolean: filter_boolean,\n  null: filter_null,\n}\n\nlet timeout;\n\nfunction applyFilter(layer, zoom) {\n  clearTimeout(timeout);\n\n  // enable zoomToExtent button.\n  let btn = layer.view.querySelector('[data-id=zoomToExtent]')\n  if (btn) btn.disabled = false;\n\n  // Debounce layer reload by 500\n  timeout = setTimeout(() => {\n    timeout = null;\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }, 500);\n}\n\nfunction filter_text(layer, filter){\n  return mapp.utils.html.node`\n  <input\n    type=\"text\"\n    onkeyup=${(e) => {\n      if (!e.target.value.length) {\n\n        // Delete filter for empty input.\n        delete layer.filter.current[filter.field]\n      } else {\n        layer.filter.current[filter.field] = {\n          [filter.type]: encodeURIComponent(`${filter.leading_wildcard && '%' || ''}${e.target.value}`)\n        }\n      }\n      applyFilter(layer)\n    }}>`;\n}\n\nfunction filter_boolean(layer, filter) {\n\n  function booleanFilter(checked) {\n    layer.filter.current[filter.field] = {\n      boolean: checked\n    }\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }\n\n  booleanFilter(false)\n\n  return mapp.ui.elements.chkbox({\n    label: filter.label || filter.title || 'chkbox',\n    onchange: booleanFilter\n  })\n}\n\nfunction filter_null(layer, filter) {\n\n  function nullFilter(checked) {\n    layer.filter.current[filter.field] = {\n      null: checked\n    }\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }\n\n  nullFilter(false)\n\n  return mapp.ui.elements.chkbox({\n    label: filter.label || filter.title || 'chkbox',\n    onchange: nullFilter\n  })\n}\n\nasync function filter_numeric(layer, filter){\n\n  if (!filter.max) {\n\n    let response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?${mapp.utils.paramString({\n      template: 'field_max',\n      locale: layer.mapview.locale.key,\n      layer: layer.key,\n      table: layer.tableCurrent(),\n      field: filter.field,\n    })}`);\n\n    filter.max = filter.type === 'integer' ? parseInt(response.max) : parseFloat(response.max);\n  }\n\n  if (!filter.min) {\n\n    let response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?${mapp.utils.paramString({\n      template: 'field_min',\n      locale: layer.mapview.locale.key,\n      layer: layer.key,\n      table: layer.tableCurrent(),\n      field: filter.field,\n    })}`);\n\n    filter.min = filter.type === 'integer' ? parseInt(response.min) : parseFloat(response.min);\n  }\n\n  if (!filter.step) {\n\n    filter.step = filter.type === 'integer' ? 1 : 0.01;\n  }\n\n\n  layer.filter.current[filter.field] = Object.assign(\n    {\n      gte: Number(filter.min),\n      lte: Number(filter.max)\n    },\n    layer.filter.current[filter.field]);\n\n  applyFilter(layer);\n\n  return mapp.ui.elements.slider_ab({\n    min: Number(filter.min),\n    max: Number(filter.max),\n    step: filter.step,\n    label_a: mapp.dictionary.layer_filter_greater_than, // Greater than\n    val_a: Number(filter.min),\n    callback_a: e => {\n      layer.filter.current[filter.field].gte = Number(e.target.value)\n      applyFilter(layer)\n    },\n    label_b: mapp.dictionary.layer_filter_less_than, // Less than\n    val_b: Number(filter.max),\n    callback_b: e => {\n      layer.filter.current[filter.field].lte = Number(e.target.value)\n      applyFilter(layer)\n    }\n\n  })\n\n}\n\nasync function filter_in(layer, filter) {\n\n  if (filter.distinct) {\n\n    // Query distinct field values from the layer table.\n    const response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'distinct_values',\n        dbs: layer.dbs,\n        locale: layer.mapview.locale.key,\n        layer: layer.key,\n        table: layer.tableCurrent(),\n        field: filter.field\n      }))\n\n    if (!response) {\n      console.warn(`Distinct values query did not return any values for field ${filter.field}`)\n      return;\n    }\n\n    filter[filter.type] = [response]\n\n      // Flatten response in array to account for the response being a single record and not an array.\n      .flat()\n\n      // Map the entry field from response records.\n      .map(record => record[filter.field])\n\n      // Filter out null values.\n      .filter(val => val !== null)\n  }\n\n  const chkSet = new Set(layer.filter?.current[filter.field]?.[filter.type] || []);\n\n  if (filter.dropdown) {\n\n    return mapp.ui.elements.dropdown({\n      multi: true,\n      placeholder: 'Select Multiple',\n      entries: filter[filter.type].map(val => ({\n        title: decodeURIComponent(val),\n        option: encodeURIComponent(val),\n        selected: chkSet.has(val)\n      })),\n      callback: async (e, options) => {\n\n        Object.assign(layer.filter.current, {\n          [filter.field]:{\n            [filter.type]: options\n          }\n        })\n        layer.reload()\n        layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n      }\n    })\n  }\n\n  return filter[filter.type].map(val => mapp.ui.elements.chkbox({\n    val: encodeURIComponent(val),\n    label: decodeURIComponent(val),\n    checked: chkSet.has(val),\n    onchange: (checked, val) => {\n  \n      if (checked) {\n  \n        // Create filter object if it doesn't exist.\n        if (!layer.filter.current[filter.field]) {\n          layer.filter.current[filter.field] = {}\n        }\n  \n        // Create empty in array if it doesn't exist.\n        if (!layer.filter.current[filter.field][filter.type]) {\n          layer.filter.current[filter.field][filter.type] = []\n        }\n  \n        // Add value to filter array.\n        layer.filter.current[filter.field][filter.type].push(val);\n                  \n      } else {\n  \n        // Get index of value in filter array.\n        const idx = layer.filter.current[filter.field][filter.type].indexOf(val);\n  \n        // Splice filter array on idx.\n        layer.filter.current[filter.field][filter.type].splice(idx, 1);\n  \n        // Remove filter object if it is empty.\n        if (!layer.filter.current[filter.field][filter.type].length) {\n          delete layer.filter.current[filter.field]\n        }\n  \n      }\n  \n      layer.reload()\n      layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  \n    }\n  }))\n}\n\nfunction filter_date(layer, filter) {\n\n  const inputAfter = mapp.utils.html.node`\n    <input\n      data-id=\"inputAfter\"\n      onchange=${onClose}\n      type=${filter.type === 'datetime' && 'datetime-local' || 'date'}>`;\n\n  const inputBefore = mapp.utils.html.node`\n    <input\n      data-id=\"inputBefore\"\n      onchange=${onClose}\n      type=${filter.type === 'datetime' && 'datetime-local' || 'date'}>`;\n\n  function onClose(e) {\n\n    if (e.target.dataset.id === 'inputAfter') {\n\n      layer.filter.current[filter.field] = Object.assign(\n        layer.filter.current[filter.field] || {},\n        {\n          gt: new Date(e.target.value).getTime() / 1000\n        })\n      \n    }\n\n    if (e.target.dataset.id === 'inputBefore') {\n\n      layer.filter.current[filter.field] = Object.assign(\n        layer.filter.current[filter.field] || {},\n        {\n          lt: new Date(e.target.value).getTime() / 1000\n        })\n      \n    }\n\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }\n\n  return mapp.utils.html`\n    <div style=\"\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n      grid-gap: 5px;\">\n      <label>Date after\n        ${inputAfter}</label>\n      <label>Date before\n        ${inputBefore}</label>`\n\n}", "export default layer => {\n\n    const meta = mapp.utils.html.node`<p data-id=\"meta\" class=\"meta\">`\n    meta.innerHTML = layer.meta\n    return meta\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_add_new_location: 'Add new locations',\n  },\n  de: {\n    layer_add_new_location: 'Erstelle neue Lage',\n  },\n  cn: {\n    layer_add_new_location: '\u6570\u636E\u68C0\u89C6',\n  },\n  pl: {\n    layer_add_new_location: 'Dodaj nowe miejsca',\n  },\n  ko: {\n    layer_add_new_location: '\uC0C8\uB85C\uC6B4 \uC704\uCE58 \uCD94\uAC00',\n  },\n  fr: {\n    layer_add_new_location: 'Ajouter des nouveaux lieux',\n  },\n  ja: {\n    layer_add_new_location: '\u65B0\u3057\u3044\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u8FFD\u52A0',\n  }\n})\n\nexport default layer => {\n\n  if (typeof layer.draw !== 'object') return;\n\n  // Do not create the panel.\n  if (layer.draw.hidden) return;\n \n  const elements = Object.keys(layer.draw)\n    .map(key => {\n\n      // Return element from drawing method.\n      return mapp.ui.elements.drawing[key] && mapp.ui.elements.drawing[key](layer)\n    })\n    .filter(node => !!node)\n\n  // Short circuit panel creation without elements.\n  if (!elements.length) return;\n\n  const panel = mapp.ui.elements.drawer({\n    data_id: `draw-drawer`,\n    class: `raised ${layer.draw.classList || ''}`,\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_add_new_location}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`\n      ${elements}`,\n  });\n\n  return panel;\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_filter_header: 'Filter',\n    layer_filter_select: 'Select filter from list',\n    layer_filter_clear_all: 'Clear all filters',\n    layer_filter_greater_than: 'Greater than',\n    layer_filter_less_than: 'Less than',\n  },\n  de: {\n    layer_filter_header: 'Filter',\n    layer_filter_select: 'Filter Auswahl',\n    layer_filter_clear_all: 'Entferne alle Filter'\n  },\n  cn: {\n    layer_filter_header: '\u7B5B\u9009',\n    layer_filter_select: '\u4ECE\u5217\u8868\u7B5B\u9009',\n  },\n  pl: {\n    layer_filter_header: 'Filtruj',\n    layer_filter_select: 'Wybierz filtr z listy',\n  },\n  ko: {\n    layer_filter_header: '\uD544\uD130',\n    layer_filter_select: '\uB9AC\uC2A4\uD2B8\uB85C \uBD80\uD130 \uD544\uD130 \uC120\uD0DD',\n  },\n  fr: {\n    layer_filter_header: 'Filtres',\n    layer_filter_select: 'Choisir un filtre dans la liste',\n  },\n  ja: {\n    layer_filter_header: '\u30D5\u30A3\u30EB\u30BF\u30FC',\n    layer_filter_select: '\u30EA\u30B9\u30C8\u304B\u3089\u30D5\u30A3\u30EB\u30BF\u30FC\u3092\u9078\u629E',\n  }\n})\n\nexport default layer => {\n\n  // Do not create the panel.\n  if (layer.filter.hidden) return;\n\n  // Layer without an infoj array of entries do not have a filter panel.\n  if (!layer.infoj) return;\n\n  layer.filter.list = layer.infoj\n    .filter(entry => entry.filter !== undefined)\n    .filter(entry => !layer.filter?.exclude?.includes(entry.field))\n    .filter(entry => ![entry.key, entry.field, entry.query, entry.type, entry.group].some(val => new Set(layer.infoj_skip || []).has(val)))\n    .map(entry => {\n\n      // The filter is defined as a string e.g. \"like\"\n      if (typeof entry.filter === 'string') {\n\n        // Create filter object with the filter key value as type.\n        entry.filter = {\n          type: entry.filter,\n          field: entry.field\n        }\n      }\n\n      // Assign entry.title as filter title if not explicit in filter config.\n      entry.filter.title ??= entry.title\n\n      // Assign entry.field as filter field if not explicit in filter config.\n      entry.filter.field ??= entry.field\n\n      return entry.filter\n    })\n\n  if (!layer.filter.list.length) return;\n\n  const dropdown = mapp.ui.elements.dropdown({\n    data_id: `${layer.key}-filter-dropdown`,\n    placeholder: mapp.dictionary.layer_filter_select,\n    keepPlaceholder: true,\n    entries: layer.filter.list,\n    callback: async (e, filter) => {\n\n      // Display clear all button.\n      layer.filter.view.querySelector('[data-id=clearall]').style.display = 'block';\n\n      // Return if filter card already exists.\n      if (filter.card) return;\n\n      filter.remove = () => {\n        delete layer.filter.current[filter.field];\n        delete filter.card\n        layer.reload();\n\n        // The changeEnd event will trigger dataview updates if set.\n        layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n\n        // enable zoomToExtent button.\n        let btn = layer.view.querySelector('[data-id=zoomToExtent]')\n        if (btn) btn.disabled = false;\n\n        // Only show the clearall filter button when filter cards are displayed as children to the filter view.\n        layer.filter.view.querySelector('[data-id=clearall]').style.display = layer.filter.view.children.length === 3 ? 'none' : 'block';\n      };\n\n      // Return if no interface method for the filter type exists.\n      if (!mapp.ui.layers.filters[filter.type]) return;\n\n      // Get interface content for filter card.\n      const content = [await mapp.ui.layers.filters[filter.type](layer, filter)].flat()\n\n      // Add meta element to beginning of contents array.\n      filter.meta && content.unshift(mapp.utils.html.node`<p>${filter.meta}`)\n\n      filter.card = layer.filter.view.appendChild(mapp.ui.elements.card({\n        header: filter.title,\n        close: filter.remove,\n        content\n      }))\n    }\n  })\n\n  const clearAll = mapp.utils.html`\n    <button\n      data-id=clearall\n      class=\"primary-colour\"\n      style=\"display: none; margin-bottom: 5px;\"\n      onclick=${e => {\n\n      layer.filter.list\n        .filter((filter) => filter.card)\n        .forEach(filter => {\n          filter.card.querySelector('[data-id=close]').click()\n        })\n\n      // enable zoomToExtent button.\n      let btn = layer.view.querySelector('[data-id=zoomToExtent]')\n\n      if (btn) btn.disabled = false;\n\n      layer.reload()\n\n    }}>${mapp.dictionary.layer_filter_clear_all}`\n\n  layer.filter.view = mapp.ui.elements.drawer({\n    data_id: `filter-drawer`,\n    class: `raised ${layer.filter.classList || ''}`,\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_filter_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`\n      ${dropdown}\n      ${clearAll}`\n  })\n\n  return layer.filter.view\n}\n", "export default layer => {\n\n  const gazetteer = Object.assign({\n    mapview: layer.mapview,\n    target: mapp.utils.html.node`<div>`,\n    layer: layer.key\n  }, layer.gazetteer)\n\n  mapp.ui.Gazetteer(gazetteer);\n  \n  return gazetteer.target\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_dataview_header: 'Data Views',\n  },\n  de: {\n    layer_dataview_header: 'Datenansichten',\n  },\n  cn: {\n    layer_dataview_header: '\u6570\u636E\u68C0\u89C6',\n  },\n  pl: {\n    layer_dataview_header: 'Widoki danych',\n  },\n  ko: {\n    layer_dataview_header: '\uB370\uC774\uD130 \uBCF4\uAE30',\n  },\n  fr: {\n    layer_dataview_header: 'Vues des donn\u00E9es',\n  },\n  ja: {\n    layer_dataview_header: '\u30C7\u30FC\u30BF\u30D3\u30E5\u30FC',\n  }\n})\n\nexport default layer => {\n  \n  // Create chkbox controls for each dataview entry.\n  const dataviewChkboxes = Object.entries(layer.dataviews).map(entry => {\n\n    if (typeof entry[1] !== 'object') return;\n\n    // Assign layer and key to the dataview entry object.\n    const dataview = Object.assign(entry[1], {\n      key: entry[0],\n      layer,\n      host: layer.mapview.host\n    })\n\n    // Find tabview element from data-id attribute.\n    const tabview = document.querySelector(`[data-id=${dataview.target}]`)\n\n    // Return if the named tabview is not found in document.\n    if (!tabview) return;\n\n    // Assign target html element for dataview.\n    dataview.target = mapp.utils.html.node`<div class=\"dataview-target\">`\n\n    // Create dataview from entry.\n    layer.display && dataview.display && createTabAndShow()\n\n    function createTabAndShow() {\n\n      if (dataview.show) return dataview.show()\n\n      mapp.ui.Dataview(dataview)\n        .then(() => dataview.show())\n\n      // Pass dataview entry as detail to the tabview.\n      // The dataview entry becomes a tab.\n      tabview.dispatchEvent(new CustomEvent('addTab', {\n        detail: dataview\n      }))\n    }\n\n    layer.showCallbacks.push(()=>{\n      dataview.display && createTabAndShow()\n    })\n\n    // Return the chkbox control.\n    return mapp.ui.elements.chkbox({\n      label: dataview.title || dataview.key,\n      checked: !!dataview.display,\n      onchange: (checked) => {\n  \n        dataview.display = checked\n\n        // Show or remove tab according to the checked/display value.\n        dataview.display ?\n          createTabAndShow() :\n          dataview.remove()\n    \n      }\n    })\n\n  })\n\n  if (layer.dataviews.hide) return;\n\n  // Create a drawer with the dataview chkbox controls.\n  const drawer = mapp.ui.elements.drawer({\n    data_id: `dataviews-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_dataview_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`${dataviewChkboxes}`\n  })\n\n  return drawer\n}", "export default layer => {\n\n  // Create chkbox controls for each dataview entry.\n  const reportLinks = Object.keys(layer.reports).map(key => {\n\n    const report = layer.reports[key]\n  \n    report.key = key\n  \n    report.host = layer.mapview.host\n  \n    const href = `${report.host}/view?${mapp.utils.paramString({\n      template: report.template,\n      locale: layer.mapview.locale.key,\n      lat: mapp.hooks.current?.lat,\n      lng: mapp.hooks.current?.lng,\n      z: mapp.hooks.current?.z,\n    })}`;\n  \n    return mapp.utils.html`\n      <a\n        class=\"link-with-img\"\n        target=\"_blank\"\n        href=\"${href}\">\n        <div class=\"mask-icon event-note\"></div>\n        <span>${report.title || report.key}`;\n  \n  });\n  \n  // Create a drawer with the dataview chkbox controls.\n  const drawer = mapp.ui.elements.drawer({\n    data_id: `reports-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>Reports</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`${reportLinks}`\n  })\n  \n  return drawer\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_style_header: 'Style',\n    layer_style_select_theme: 'Select thematic style',\n    layer_style_display_labels: 'Display labels',\n    layer_style_display_hover: 'Enable hover',\n    layer_style_switch_caption: 'Click on labels to switch visibility or ',\n    layer_style_switch_all: 'switch all',\n    layer_grid_legend_ratio: 'Display colour as a ratio to the size',\n    layer_style_cluster: 'Multiple locations',\n  },\n  de: {\n    layer_style_header: 'Stil',\n    layer_style_select_theme: 'Auswahl eines thematischen Stiles',\n    layer_style_display_labels: 'Umschalten der Label Ansicht',\n    layer_style_switch_caption: 'Auswahl der Label schaltet Ansicht um oder ',\n    layer_style_switch_all: 'Alle ausw\u00E4hlen',\n    layer_grid_legend_ratio: 'Farbe im Verh\u00E4ltnis zur Gr\u00F6\u00DFe',\n    layer_style_cluster: 'Mehrere Lagen',\n  },\n  cn: {\n    layer_style_header: '\u98CE\u683C\u6837\u5F0F',\n    layer_style_select_theme: '\u9009\u62E9\u4E3B\u9898\u98CE\u683C',\n    layer_style_display_labels: '\u663E\u793A\u6807\u7B7E',\n    layer_style_switch_caption: '\u5355\u51FB\u56FE\u6807\u4EE5\u5207\u6362\u53EF\u89C1\u6027 ',\n    layer_style_switch_all: '\u5168\u90E8\u5207\u6362',\n    layer_grid_legend_ratio: '\u663E\u793A\u989C\u8272\u4E0E\u5C3A\u5BF8\u6BD4\u4F8B',\n    layer_style_cluster: '\u591A\u4E2A\u5730\u70B9',\n  },\n  pl: {\n    layer_style_header: 'Styl',\n    layer_style_select_theme: 'Wybierz styl tematyczny',\n    layer_style_display_labels: 'Poka\u017C etykiety',\n    layer_style_switch_caption: 'Kliknij etykiety aby zmieni\u0107 widoczno\u015B\u0107 albo ',\n    layer_style_switch_all: 'zmie\u0144 wszystkie',\n    layer_grid_legend_ratio: 'Poka\u017C kolor w proporcji do rozmiaru',\n    layer_style_cluster: 'Wi\u0119cej miejsc',\n  },\n  ko: {\n    layer_style_header: '\uC2A4\uD0C0\uC77C',\n    layer_style_select_theme: '\uC8FC\uC81C\uBCC4 \uC2A4\uD0C0\uC77C \uC120\uD0DD',\n    layer_style_display_labels: '\uB77C\uBCA8 \uD45C\uC2DC',\n    layer_style_switch_caption: '\uAC00\uC2DC\uC131 \uBCC0\uACBD\uC744 \uC704\uD574 \uB77C\uBCA8 \uD074\uB9AD \uB610\uB294 ',\n    layer_style_switch_all: '\uBAA8\uB450 \uBCC0\uACBD',\n    layer_grid_legend_ratio: '\uD06C\uAE30\uBE44\uC728\uC5D0 \uB530\uB978 \uC0C9\uC0C1 \uD45C\uC2DC',\n    layer_style_cluster: '\uBCF5\uC218 \uC704\uCE58',\n  },\n  fr: {\n    layer_style_header: 'Style',\n    layer_style_select_theme: 'Choisir un th\u00E8me dans la liste',\n    layer_style_display_labels: 'Afficher les \u00E9tiquettes',\n    layer_style_switch_caption: 'Cliquer sur l\\'etiquette pour changer la visiblit\u00E9 ou ',\n    layer_style_switch_all: 'changer tout',\n    layer_grid_legend_ratio: 'Rapport de coleur et de taille',\n    layer_style_cluster: 'Plusieurs lieux',\n  },\n  ja: {\n    layer_style_header: '\u30B9\u30BF\u30A4\u30EB',\n    layer_style_select_theme: '\u30C6\u30FC\u30DE\u30B9\u30BF\u30A4\u30EB\u3092\u9078\u629E',\n    layer_style_display_labels: '\u30E9\u30D9\u30EB\u3092\u8868\u793A',\n    layer_style_switch_caption: '\u8868\u793A\u5207\u66FF\u3048\u306B\u306F\u5404\u30E9\u30D9\u30EB\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u304B ',\n    layer_style_switch_all: '\u5168\u8868\u793A\u6216\u3044\u306F\u5168\u975E\u8868\u793A',\n    layer_grid_legend_ratio: '\u8272\u306F\u30B5\u30A4\u30BA\u306E\u6BD4\u7387\u3067\u8868\u793A',\n    layer_style_cluster: '\u591A\u6570\u306E\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3',\n  }\n})\n\nexport default layer => {\n\n  // Do not create the panel.\n  if (layer.style.hidden) return;\n\n  const content = []\n\n  if (layer.style.opacitySlider) {\n\n    content.push(mapp.ui.elements.slider({\n      label: 'Change layer opacity:',\n      min: 0,\n      max: 100,\n      val: parseInt(layer.L.getOpacity()*100),\n      callback: e => {\n        layer.L.setOpacity(parseFloat(e.target.value/100))\n      }\n    }))\n  }\n\n  if (layer.style.scaleSlider) {\n\n    content.push(mapp.ui.elements.slider({\n      label: 'Change icon scale:',\n      min: layer.style.scaleSlider.min,\n      max: layer.style.scaleSlider.max,\n      step: layer.style.scaleSlider.step,\n      val: layer.style.default.icon.scale,\n      callback: e => {\n        layer.style.default.icon.scale = e.target.value\n        layer.L.changed()\n      }\n    }))\n  }\n\n  if (layer.style.hover) {\n\n    // Add checkbox to toggle label display.\n    layer.style.hoverCheckbox = mapp.ui.elements.chkbox({\n      data_id: 'hoverCheckbox',\n      label: layer.style.hovers && mapp.dictionary.layer_style_display_hover\n        || layer.style.hover.title || mapp.dictionary.layer_style_display_hover,\n      checked: !!layer.style.hover.display,\n      onchange: (checked) => {\n        layer.style.hover.display = checked\n      }\n    })\n\n    content.push(layer.style.hoverCheckbox)\n\n    if (Object.keys(layer.style.hovers || 0).length > 1) {\n\n      // Add dropdown to switch label.\n      content.push(mapp.ui.elements.dropdown({\n        placeholder: layer.style.hover.title,\n        entries: Object.keys(layer.style.hovers).map(key => ({\n          title: layer.style.hovers[key].title || key,\n          option: key\n        })),\n        callback: (e, entry) => {\n  \n          const display = layer.style.hover.display\n  \n          // Set hover from dropdown option.\n          layer.style.hover = layer.style.hovers[entry.option]\n  \n          // Assign default featureHover method if non is provided.\n          layer.style.hover.method ??= mapp.layer.featureHover;\n  \n          layer.style.hover.display = display\n        }\n      }))\n    }\n  }\n\n  if (layer.style.label) {\n\n    // Add checkbox to toggle label display.\n    layer.style.labelCheckbox = mapp.ui.elements.chkbox({\n      data_id: 'labelCheckbox',\n      label: layer.style.labels && mapp.dictionary.layer_style_display_labels\n        || layer.style.label.title || mapp.dictionary.layer_style_display_labels,\n      checked: !!layer.style.label.display,\n      onchange: (checked) => {\n        layer.style.label.display = checked\n        layer.reload()\n      }\n    })\n\n    content.push(layer.style.labelCheckbox)\n\n    if (Object.keys(layer.style.labels || 0).length > 1) {\n\n      // Add dropdown to switch label.\n      content.push(mapp.ui.elements.dropdown({\n        placeholder: layer.style.label.title,\n        entries: Object.keys(layer.style.labels).map(key => ({\n          title: layer.style.labels[key].title || key,\n          option: key\n        })),\n        callback: (e, entry) => {\n  \n          const display = layer.style.label.display\n  \n          // Set label from dropdown option.\n          layer.style.label = layer.style.labels[entry.option]\n  \n          layer.style.label.display = display\n  \n          layer.reload()\n        }\n      }))\n    }\n  }\n  \n  // Add zoom level check for label display\n  layer.style.label && layer.mapview.Map.getTargetElement().addEventListener('changeEnd', () => {\n    const z = layer.mapview.Map.getView().getZoom();\n\n    if (z <= layer.style.label.minZoom || z >= layer.style.label.maxZoom) {\n      layer.style.labelCheckbox.classList.add('disabled');\n    } else {\n      layer.style.labelCheckbox.classList.remove('disabled');\n    }\n  });\n\n  // Add theme control\n  if (Object.keys(layer.style.themes || 0).length > 1) {\n    content.push(mapp.utils.html`\n      <div>${mapp.dictionary.layer_style_select_theme}</div>\n        ${mapp.ui.elements.dropdown({\n          placeholder: layer.style.theme.title,\n          entries: Object.keys(layer.style.themes).map(key =>({\n            title:  layer.style.themes[key].title || key,\n            option: key\n          })),\n          callback: (e, entry) => {\n\n            // Set theme from dropdown option.\n            layer.style.theme = layer.style.themes[entry.option]\n\n            if (layer.style.theme.setLabel && layer.style.labels) {\n\n              layer.style.label = layer.style.labels[layer.style.theme.setLabel]\n            }\n\n            if (layer.style.theme.setHover && layer.style.hovers) {\n\n              layer.style.hover = layer.style.hovers[layer.style.theme.setHover]\n            }\n\n            // Replace the children of the style panel.\n            layer.view.querySelector('[data-id=style-drawer]')\n              .replaceChildren(...mapp.ui.layers.panels.style(layer).children)\n\n            layer.reload()\n          }\n        })}`)\n  } else if (layer.style.theme?.title){\n\n    // Add theme title before legend.\n    content.push(mapp.utils.html`\n      <h3>${layer.style.theme.title}`)\n\n  }\n\n  function modalButton(){\n    return mapp.utils.html`\n      <button\n        style=\"height: 1.5em; width: 1.5em; float: right; margin-top: 5px;\"\n        class=\"mask-icon open-in-new\"\n        title=\"Open in Modal\"\n        onclick=${e=>{\n          let btn = e.target\n\n          btn.style.display = 'none'\n\n          mapp.ui.elements.modal({\n            target: layer.mapview.Map.getTargetElement(),\n            content: layer.style.legend.parentElement,\n            close: () => {\n              layer.style.drawer.append(layer.style.legend.parentElement)\n              btn.style.display = 'block'\n            }\n          })\n          \n        }}>`\n  }\n\n  mapp.ui.layers.legends[layer.style.theme?.type] && content.push(mapp.utils.html`\n    ${layer.style.allowModal && modalButton() || undefined}\n    <div class=\"legend\">\n      ${layer.style.theme?.meta && mapp.utils.html`<p>${layer.style.theme.meta}`}\n      ${mapp.ui.layers.legends[layer.style.theme.type](layer)}`)\n\n  // There are no elements for the style panel.\n  if (!content.length) return;\n\n  // Create a drawer for multiple panel elements on content array.\n  layer.style.drawer = mapp.ui.elements.drawer({\n    data_id: `style-drawer`,\n    class: `raised ${layer.style.classList || ''}`,\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_style_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: content\n  })\n\n  return layer.style.drawer\n}", "export default (layer) => {\n  /**\n  * Creates a map legend for the given map layer\n  * @param {Object} layer - Map layer the legend is for\n  */\n\n  //legend.layout - Container display layout, \"grid\" | \"flex\"\n  //legend.alignContents - How the contents are aligned, \"left\" | \"center\" | \"row\"\n  const legendOptions = layer.style.theme.legend;\n\n  const theme = layer.style.theme\n\n  const grid = []\n\n  const contentsClass = ['contents'];\n  \n  contentsClass.push(legendOptions?.alignContents)\n\n  let timeout;\n\n  // Switch all control\n  const switchControl = layer.filter &&\n    mapp.utils.html`\n      <div\n        class=\"switch-all\"\n        style=\"grid-column: 1/3;\">\n        ${mapp.dictionary.layer_style_switch_caption}\n        <button\n          class=\"primary-colour bold\"\n          onclick=${e => {\n\n            let allSwitches = [...e.target.closest('.legend').querySelectorAll('.switch')];\n            let disabledSwitches = allSwitches.filter((switch_) => switch_.classList.contains('disabled'));\n\n            if (disabledSwitches.length == 0 || disabledSwitches.length == allSwitches.length) {\n\n              // if all switches are either enabled or disabled, click on all \n              allSwitches.forEach(switch_ => switch_.click());\n\n            } else {\n\n              // if only some of them are enabled, click only on disabled ones\n              disabledSwitches.forEach(switch_ => switch_.click());\n            }\n\n          }}>${mapp.dictionary.layer_style_switch_all}\n        </button>.`\n\n  Object.entries(theme.cat).forEach(cat => {\n\n    // Icon has not been defined inside a style block.\n    if (cat[1].icon) {\n\n      cat[1].style = {...cat[1].style, icon: cat[1].icon}\n    }\n\n    const cat_style = Array.isArray(cat[1].style?.icon)\n\n      // Array style icons cannot be assigned to the default.\n      ? cat[1].style\n\n      // Assign icon, or style as icon, or cat to the layer style default.\n      : Object.assign({},\n        layer.style.default,\n        cat[1].style || cat[1].icon || cat[1]);\n\n    if (!cat[1].style?.icon) delete cat_style.icon;\n\n    // Cat icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 24px; width: 24px; grid-column: 1;\">\n        ${mapp.ui.elements.legendIcon(\n          Object.assign({ width: 24, height: 24 }, cat_style)\n        )}`;\n\n    // Cat label with filter function.\n    let label = mapp.utils.html`\n      <div\n        class=${`label ${layer.filter && 'switch' ||''} ${\n\n          // Check whether cat is in current filter.\n          layer.filter?.current[theme.field]?.ni?.indexOf(cat[0]) > 0 ? 'disabled' : ''\n        }`}\n        style=\"grid-column: 2;\"\n        onclick=${e => {\n\n          if (!layer.filter) return;\n\n          e.target.classList.toggle('disabled')\n\n          // Add cat value to current NI (not in) field filter.\n          if (e.target.classList.contains('disabled')) {\n\n            // Create empty field filter object if non exists.\n            if (!layer.filter.current[theme.field]) {\n              layer.filter.current[theme.field] = {}\n            }\n\n            // Create empty NI filter array for field if non exists.\n            if (!layer.filter.current[theme.field].ni) {\n              layer.filter.current[theme.field].ni = []\n            }\n\n            // Push cat value into the NI filter array.\n            layer.filter\n              .current[theme.field].ni\n              .push(cat[1].keys || cat[0])\n           \n            // Flatten the filter in case of arrays filter.\n            layer.filter\n              .current[theme.field].ni = layer.filter.current[theme.field].ni.flat()\n\n          // Remove cat value from current NI field filter.\n          } else {\n\n            if (Array.isArray(cat[1].keys)) {\n\n              cat[1].keys.forEach(key => {\n\n                // Splice key out of the NI array.\n                layer.filter\n                  .current[theme.field].ni\n                  .splice(layer.filter.current[theme.field].ni.indexOf(key), 1)\n\n              })\n\n            } else {\n\n              // Splice value out of the NI array.\n              layer.filter\n                .current[theme.field].ni\n                .splice(layer.filter.current[theme.field].ni.indexOf(cat[0]), 1)\n\n            }\n \n            // Delete current field filter if NI array is empty.\n            if (!layer.filter.current[theme.field].ni.length) {\n              delete layer.filter.current[theme.field]\n            }\n          }\n\n          if (timeout) clearTimeout(timeout)\n\n          timeout = setTimeout(() => {\n\n            // theme flag is set in styles or theme.\n            (layer.style.filter || theme.filter)\n              ? layer.L.changed()\n              : layer.reload()\n\n          }, 400)\n\n        }}>${cat[1].label || cat[0]}`\n\n    // Push icon and label into legend grid.\n    grid.push(mapp.utils.html`\n    <div \n      data-id=${cat[0]}\n      class=\"${contentsClass.join(' ')}\">\n      ${icon}${label}`)\n  })\n\n  // Attach row for cluster locations.\n  if (layer.style.cluster) {\n\n    // Create cluster icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 40px; width: 40px;\">\n        ${mapp.ui.elements.legendIcon(Object.assign({\n          width: 40,\n          height: 40\n        }, layer.style.default, layer.style.cluster))}`\n   \n    // Create cluster label.\n    let label = mapp.utils.html`\n      <div\n        class=\"label\">\n        ${mapp.dictionary.layer_style_cluster}`\n\n    // Push icon and label into legend grid.\n    grid.push(mapp.utils.html`\n      <div \n        data-id=\"cluster\"\n        class=${contentsClass.join(' ')}>\n        ${icon}${label}`)\n  }\n\n  layer.style.legend = mapp.utils.html.node`\n    <div class=\"legend-wrapper\">\n      ${switchControl || ''}\n      <div class=${`contents-wrapper ${legendOptions?.layout || 'grid'}`}>\n        ${grid}\n  `\n  \n  return layer.style.legend;\n}\n", "export default layer => {\n  layer.style.legend = mapp.utils.html.node`<div>`\n\n  return layer.style.legend\n}", "export default layer => {\n\n  function getCatStyleIcon(cat, layer) {\n    \n    let cat_style;\n    if (Array.isArray(cat.style?.icon)) {\n      // Array style icons cannot be assigned to the default.\n      cat_style = cat.style;\n    } else {\n      // Assign icon, or style as icon, or cat to the layer style default.\n      cat_style = Object.assign({},\n        layer.style.default,\n        cat.style || cat.icon || cat\n      );\n    }\n    \n    if (!cat.style?.icon) {\n      delete cat_style.icon;\n    }\n    \n    return cat_style.icon || cat_style;\n  }\n\n  layer.style.legend = mapp.utils.html.node`\n    <div class=\"legend-wrapper\">\n      <div class=${`contents-wrapper ${layer.style.theme.legend?.layout || 'grid'} ${layer.style.theme.legend?.nowrap ? 'nowrap' : ''}`}>\n        ${layer.style.theme.cat_arr.map(cat => {\n          return mapp.utils.html`\n            <div \n              data-id=${cat.value}\n              class=${`contents ${layer.style.theme.legend?.horizontal ? 'horizontal' : ''}`}\n            >\n              <div style=\"height: 24px; width: 24px; grid-column: 1;\">\n                ${mapp.ui.elements.legendIcon(\n                  Object.assign(\n                    {\n                      width: 24,\n                      height: 24\n                    },\n                    getCatStyleIcon(cat, layer),\n                  )\n                )}\n              </div>\n              <div class=\"label\" style=\"grid-column: 2;\">\n                ${cat.label || cat.value}\n              </div>\n            </div>\n          `\n        })}\n      </div>\n    </div>\n  `\n  return layer.style.legend;\n}", "export default layer => {\n\n  const grid = []\n\n  let icon = mapp.utils.html`\n  <div\n    style=\"height: 24px; width: 24px;\">\n    ${mapp.ui.elements.legendIcon(\n      Object.assign({ width: 24, height: 24 }, Object.assign({}, layer.style.default, layer.style.theme.style))\n    )}`;\n\n  grid.push(mapp.utils.html`\n    <div \n      class=\"contents\">\n      ${icon}<div class=\"label\">${layer.style.theme.label}`)\n\n  layer.style.legend = mapp.utils.html.node`<div class=\"contents-wrapper grid\">${grid}`\n\n  return layer.style.legend\n}", "import view from './view.mjs'\n\nimport listview from './listview.mjs'\n\nimport filters from './filters.mjs'\n\n// Panels\nimport meta from './panels/meta.mjs'\n\nimport draw from './panels/draw.mjs'\n\nimport filter from './panels/filter.mjs'\n\nimport gazetteer from './panels/gazetteer.mjs'\n\nimport dataviews from './panels/dataviews.mjs'\n\nimport reports from './panels/reports.mjs'\n\nimport style from './panels/style.mjs'\n\n// Styles\n\nimport categorized from './legends/categorized.mjs'\n\nimport distributed from './legends/distributed.mjs'\n\nimport graduated from './legends/graduated.mjs'\n\nimport basic from './legends/basic.mjs'\n\nexport default {\n  view,\n  listview,\n  filters,\n  panels: {\n    meta,\n    draw,\n    style,\n    filter,\n    gazetteer,\n    reports,\n    dataviews\n  },\n  legends: {\n    categorized,\n    distributed,\n    graduated,\n    basic,\n  },\n  styles: {\n    categorized: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return categorized(layer)},\n    graduated: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return graduated(layer)},\n    grid: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return grid(layer)},\n    basic: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return basic(layer)},\n  }\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    location_zoom: 'Zoom map to feature bounds',\n    location_save: 'Save changes to cloud',\n    location_remove: 'Remove feature from selection',\n    location_delete: 'Delete location',\n  },\n  de: {\n    location_zoom: 'Ansicht den Lagen Geometrien anpassen',\n    location_save: 'Speichern der Daten\u00E4nderungen',\n    location_remove: 'Lagen Auswahl aufheben',\n    location_delete: 'L\u00F6schen der Lage',\n  },\n  cn: {\n    location_zoom: '\u7F29\u653E\u5730\u56FE\u81F3\u76EE\u6807\u8303\u56F4',\n    location_save: '\u5C06\u66F4\u6539\u4FDD\u5B58\u81F3\u4E91',\n    location_remove: '\u5220\u9664\u6240\u9009\u76EE\u6807\u8981\u7D20',\n    location_delete: '\u5220\u9664\u5730\u70B9',\n  },\n  pl: {\n    location_zoom: 'Poka\u017C zasi\u0119g miejsca',\n    location_save: 'Zapisz zmiany',\n    location_remove: 'Odznacz miejsce',\n    location_delete: 'Usu\u0144 miejsce',\n  },\n  ko: {\n    location_zoom: '\uD55C\uACC4\uB97C \uD3EC\uD568\uD55C \uC90C \uC9C0\uB3C4',\n    location_save: '\uBCC0\uACBD\uC0AC\uD56D \uD06C\uB77C\uC6B0\uB4DC \uC800\uC7A5',\n    location_remove: '\uC120\uD0DD\uC5D0\uC11C \uD2B9\uC9D5 \uC81C\uAC70',\n    location_delete: '\uC704\uCE58 \uC0AD\uC81C',\n  },\n  fr: {\n    location_zoom: 'Zoom sur le lieu',\n    location_save: 'Enregistrer les modifications',\n    location_remove: 'Le d\u00E9s\u00E9lectionner',\n    location_delete: 'Supprimer le lieu',\n  },\n  ja: {\n    location_zoom: '\u30D5\u30A3\u30FC\u30C1\u30E3\u7BC4\u56F2\u306B\u306F\u30DE\u30C3\u30D7\u3092\u30BA\u30FC\u30E0',\n    location_save: '\u30AF\u30E9\u30A6\u30C9\u306B\u5909\u66F4\u3092\u4FDD\u5B58',\n    location_remove: '\u9078\u629E\u304B\u3089\u30D5\u30A3\u30FC\u30C1\u30E3\u30FC\uFF08\u6A5F\u80FD\uFF09\u3092\u524A\u9664',\n    location_delete: '\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u524A\u9664',\n  }\n})\n\nexport default location => {\n\n  location.removeCallbacks?.push(function () {\n    location.view.remove()\n  })\n\n  // Header with expander icon. \n  const header = [\n    mapp.utils.html`<h2>${location.record.symbol}`,\n    mapp.utils.html`<div class=\"mask-icon expander\">`\n  ]\n\n  // Zoom to location bounds.\n  location.infoj.some(\n    entry => (entry.type === 'pin' || entry.type === 'geometry')\n      && entry.value) && header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_zoom}\n      class = \"mask-icon search\"\n      onclick = ${e => {\n          location.flyTo()\n        }}>`)\n\n  // Edits must be toggled.\n  if (location.layer?.toggleLocationViewEdits\n\n    // Check whether there is anything to edit in the first place.\n    && location.infoj.some(entry => typeof entry.edit !== 'undefined')) {\n\n    // Remove edit from infoj entries\n    location.removeEdits = () => {\n\n      // Iterate through the location.infoj entries.\n      location.infoj\n\n        // Filter entries which have an edit key.\n        .filter(entry => typeof entry.edit !== 'undefined')\n        .forEach(entry => {\n\n          // Remove newValue\n          // Unsaved edits will be lost.\n          delete entry.newValue\n\n          // Change edit key to _edit\n          entry._edit = entry.edit\n          delete entry.edit\n        })\n    }\n\n    // New locations should be editable.\n    !location.new && location.removeEdits()\n\n    location.editToggle = mapp.utils.html.node`\n      <button\n        title = \"Enable edits\"\n        class = ${`mask-icon edit ${location.new && 'on' || ''}`}\n        onclick = ${e => {\n\n        // Edits are on\n        if (e.target.classList.contains('on')) {\n\n          // Remove on class from button.\n          e.target.classList.remove('on')\n\n          // Remove edits from infoj entries.\n          location.removeEdits()\n\n        } else {\n\n          // Add on class to button.\n          e.target.classList.add('on')\n\n          // Restore edit in infoj entries\n          location.infoj.forEach(entry => {\n\n            if (!entry._edit) return;\n\n            entry.edit = entry._edit\n            delete entry._edit\n          })\n\n        }\n\n        // Remove location.viewEntries\n        location.viewEntries.remove()\n\n        // Recreate location.viewEntries\n        location.viewEntries = location.view.appendChild(mapp.ui.locations.infoj(location))\n\n      }}>`\n\n    header.push(location.editToggle)\n  }\n\n  // Update icon.\n  header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_save}\n      class = \"btn-save mask-icon done\"\n      style = \"display: none;\"\n      onclick = ${e => {\n      location.view.classList.add('disabled')\n      location.update()\n    }}>`);\n\n  // The updateInfo event must be called after the editToggle callback.\n  location.updateCallbacks?.push(function () {\n    location.view.dispatchEvent(new Event('updateInfo'))\n  })\n\n  // Trash icon.\n  if (location.layer?.edit?.delete || location.layer?.deleteLocation) {\n\n    header.push(mapp.utils.html`\n      <button\n        title = ${mapp.dictionary.location_delete}\n        class = \"mask-icon trash\"\n        onclick = ${e => {\n        location.trash()\n      }}>`)\n  }\n\n  // Clear selection.\n  header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_remove}\n      class = \"mask-icon close no\"\n      onclick = ${e => {\n      location.remove()\n      // location.layer.mapview.Map.updateSize()\n    }}>`)\n\n  location.view = mapp.ui.elements.drawer({\n    class: 'location-view raised expanded',\n    header: header\n  })\n\n  location.viewEntries = location.view.appendChild(mapp.ui.locations.infoj(location))\n\n  location.view.querySelector('.header').style.borderBottom = `3px solid ${location.record.colour}`\n\n  // Add listener for custom valChange event.\n  location.view.addEventListener('valChange', e => {\n\n    if (e.detail.valChangeMethod instanceof Function) {\n\n      e.detail.valChangeMethod(e.detail)\n      return;\n    }\n\n    // entry object is provided as event detail.\n    if (e.detail.value != e.detail.newValue) {\n\n      // New value is different from current value.\n      e.detail.node.classList.add('val-changed')\n\n    } else {\n\n      // New value is the same as current value.\n      delete e.detail.newValue\n      e.detail.node.classList.remove('val-changed')\n    }\n\n    // Hide upload button if no other field in the infoj has a newValue.\n    location.view.querySelector('.btn-save')\n      .style.display = location.infoj\n        .some(entry => typeof entry.newValue !== 'undefined')\n      && 'inline-block' || 'none';\n\n  })\n\n  location.view.addEventListener('updateInfo', () => {\n\n    // Remove location.viewEntries.\n    location.viewEntries.remove()\n\n    // Hides the upload icon.\n    location.view.querySelector('.btn-save').style.display = 'none'\n\n    // Location has toggle editing.\n    if (location.editToggle) {\n\n      location.editToggle.classList.remove('on')\n\n      // Remove edits from infoj entries.\n      location.removeEdits()\n    }\n\n    // Refresh dataviews\n    if (location.layer?.dataviews) {\n      Object.values(location.layer.dataviews).forEach(dv => {\n        if (dv.display === true) {\n          dv.update();\n        }\n      });\n    }\n\n    // Enables the location view node and child elements.\n    location.view.classList.remove('disabled')\n\n    // Recreate location.viewEntries.\n    location.viewEntries = location.view.appendChild(mapp.ui.locations.infoj(location))\n  })\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    location_clear_all: 'Clear locations',\n    location_listview_full: 'The listview for locations is full.'\n  },\n  de: {\n    location_clear_all: 'Entferne Auswahl'\n  },\n  cn: {\n    location_clear_all: '\uBAA8\uB4E0 \uC704\uCE58 \uC81C\uAC70',\n  },\n  pl: {\n    location_clear_all: 'Wyczy\u015B\u0107 selekcje',\n  },\n  ko: {\n    location_clear_all: '\u6E05\u9664\u6240\u6709\u5730\u70B9',\n  },\n  fr: {\n    location_clear_all: 'Des\u00E9lectionner tous les lieux.',\n  },\n  ja: {\n    location_clear_all: '\u5168\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u30AF\u30EA\u30A2',\n  }\n})\n\nexport default params => {\n\n  if (!params.mapview) {\n\n    console.warn('A mapview is required in the locations listview params argument.')\n  }\n\n  if (!params.target) {\n\n    console.warn('A target element is required in the locations listview params argument.')\n  }\n\n  const records = params.mapview.locale?.listview_records || [\n    {\n      symbol: 'A',\n      colour: '#2E6F9E'\n    },\n    {\n      symbol: 'B',\n      colour: '#EC602D'\n    },\n    {\n      symbol: 'C',\n      colour: '#5B8C5A'\n    },\n    {\n      symbol: 'D',\n      colour: '#B84444'\n    },\n    {\n      symbol: 'E',\n      colour: '#514E7E'\n    },\n    {\n      symbol: 'F',\n      colour: '#E7C547'\n    },\n    {\n      symbol: 'G',\n      colour: '#368F8B'\n    },\n    {\n      symbol: 'H',\n      colour: '#841C47'\n    },\n    {\n      symbol: 'I',\n      colour: '#61A2D1'\n    },\n    {\n      symbol: 'J',\n      colour: '#37327F'\n    }\n  ]\n\n  const clearAll = params.target.appendChild(mapp.utils.html.node`\n    <button \n      style=\"display: none; width: 100%; text-align: right;\"\n      class=\"tab-display bold primary-colour text-shadow\"\n      onclick=${e => {\n\n      // Remove all mapview locations\n      Object.values(params.mapview.locations)\n        .forEach(location => location.remove())\n    }}>\n      ${mapp.dictionary.location_clear_all}`)\n\n  // Create proxy for mapview.locations\n  params.mapview.locations = new Proxy(params.mapview.locations, {\n    set: function (target, key, location) {\n\n      // Find a free record for location.\n      const record = records.find(record => !record.hook)\n\n      // No empty record found.\n      if (!record) {\n\n        alert(mapp.dictionary.location_listview_full)\n        return true;\n      }\n\n      // Proxy default.\n      Reflect.set(...arguments)\n\n      // Set record hook from location.\n      record.hook = location.hook\n\n      // Assign record to the location.\n      location.record = record\n\n      // Set style from record.\n      location.style = {\n        strokeColor: record.colour,\n        fillColor: record.colour,\n        fillOpacity: 0.1\n      };\n\n      // Create OL Style object.\n      location.Style = mapp.utils.style([\n        {\n          strokeColor: '#000',\n          strokeOpacity: 0.1,\n          strokeWidth: 8,\n        },\n        {\n          strokeColor: '#000',\n          strokeOpacity: 0.1,\n          strokeWidth: 6,\n        },\n        {\n          strokeColor: '#000',\n          strokeOpacity: 0.1,\n          strokeWidth: 4,\n        },\n        {\n          strokeColor: location.style.strokeColor || '#000',\n          strokeWidth: 2,\n          fillColor: location.style.fillColor || '#fff',\n          fillOpacity: location.style.fillOpacity || 0.2,\n        }\n      ]);\n\n      // Create OL Style object for pin icon.\n      location.pinStyle = mapp.utils.style({\n        icon: {\n          type: 'markerLetter',\n          letter: record.symbol,\n          color: location.style.strokeColor,\n          scale: 3,\n          anchor: [0.5, 1]\n        }\n      })\n\n      // Create location view.\n      mapp.ui.locations.view(location)\n\n      // Collapse all location view drawer in list.\n      Object.values(params.target.children).forEach(el => el.classList.remove('expanded'))\n\n      // New location view should be inserted after clearAll but before first current location view.\n      params.target.insertBefore(location.view, clearAll.nextSibling)\n\n      // Send event after the location view has been added to the DOM.\n      location.view.dispatchEvent(new Event('addLocationView'))\n\n      // Show the clear all button.\n      clearAll.style.display = 'block'\n\n      // Click locations tab header.\n      document.querySelector('[data-id=locations]').click()\n\n      // Hide locations tab if no gazetteer input present.\n      document.querySelector('[data-id=locations]').style.display = 'block'\n\n      return true\n    },\n    deleteProperty: function (target, hook) {\n\n      // Proxy default\n      Reflect.deleteProperty(...arguments)\n\n      const record = records.find(record => record.hook === hook)\n\n      record && delete record.hook\n\n      setTimeout(gazCheck, 300)\n\n      return true\n    },\n  })\n\n  function gazCheck() {\n\n    // clearAll should not be shown without locations to clear\n    if (!document.querySelectorAll('#locations > .location-view').length) {\n  \n      // Activate the layers panel\n      document.querySelector('[data-id=layers]').click()\n  \n      clearAll.style.display = 'none'\n  \n      // Find gazetteer input.\n      const gazInput = document.querySelector('#locations input')\n  \n      if (gazInput) {\n  \n        // Clear the gazetteer input value.\n        gazInput.value = '';\n        \n      } else {\n  \n        // Hide locations tab if no gazetteer input present.\n        document.querySelector('[data-id=locations]').style.display = 'none'\n      }\n    }\n  }\n}\n\n", "export default (location, infoj) => {\n\n  if (!location.infoj) return\n\n  // Create a grid view div.\n  const listview = mapp.utils.html.node`<div class=\"location-view-grid\">`\n\n  // Create object to hold view groups.\n  const groups = {}\n\n  // Iterate through info fields and add to info table.\n  for (const entry of infoj || location.infoj) {\n\n    // The location view entries should not be processed if the view is disabled.\n    if (location.view && location.view.classList.contains('disabled')) break;\n\n    // Location view elements will appended to the entry.listview element.\n    entry.listview = listview\n\n    // The default entry type is text.\n    entry.type = entry.type || 'text'\n\n    // Lookup for json value field entry\n    if (entry.objectAssignFromField) {\n\n      let fieldEntry = entry.location.infoj.find(_entry => _entry.field === entry.objectAssignFromField)\n\n      fieldEntry && Object.assign(entry, fieldEntry.value)\n    }\n\n    if (entry.objectMergeFromField) {\n\n      let fieldEntry = entry.location.infoj.find(_entry => _entry.field === entry.objectMergeFromField)\n\n      fieldEntry && mapp.utils.merge(entry, fieldEntry.value)\n    }\n\n    // Merge from another entry.\n    if (entry.objectMergeFromEntry) {\n\n      // Find the entry to merge.\n      let fieldEntry = entry.location.infoj.find(_entry => _entry.type === entry.objectMergeFromEntry)\n\n      // Only merge the entry.merge object.\n      fieldEntry\n        && fieldEntry.merge instanceof Object\n        && mapp.utils.merge(entry, fieldEntry.merge)\n    }\n\n    // Skip entries from infoj_skip array;\n    if (Array.isArray(entry.location?.layer?.infoj_skip)) {\n\n      // Check whether some val from this array is in infoj_skip set.\n      if ([entry.key, entry.field, entry.query, entry.type, entry.group]\n        .some(val => new Set(entry.location?.layer?.infoj_skip).has(val))) continue;\n    }\n\n    // Skip entry, no matter what.\n    if (entry.skipEntry) continue;\n\n    // Skip entry depending on flag and value.\n    if (skipEntry(entry)) continue;\n\n    // Assign a default nullValue\n    if (entry.nullValue\n      && entry.value === null\n      && !entry.defaults\n      && !entry.edit) entry.value = entry.nullValue;\n\n    // Groups must be checked first since it should be possible to next any type of location view element in a group.\n    if (entry.group) {\n\n      // Create new group\n      if (!groups[entry.group]) {\n\n        // If entry.expanded, then console warn to change this \n        // As the configuration has changed\n        if (entry.expanded) {\n          console.warn('entry.expanded is deprecated. Use entry.groupClassList: \"expanded\" instead.')\n          // Add to the string as this can have other classes.\n          entry.groupClassList += ' expanded'\n        }\n\n        groups[entry.group] = entry.listview.appendChild(\n          mapp.ui.elements.drawer({\n            class: `group ${entry.groupClassList && 'expanded' || ''}`,\n            header: mapp.utils.html`\n              <h3>${entry.group}</h3>\n              <div class=\"mask-icon expander\"></div>`,\n          }))\n      }\n\n      // The group will replace the entry listview to which elements will be appended.\n      entry.listview = groups[entry.group]\n    }\n\n    entry.node = entry.listview.appendChild(mapp.utils.html.node`\n      <div\n        data-type=${entry.type}\n        class=${`contents ${entry.type} ${entry.class || ''} ${entry.inline && 'inline' || ''}`}>`)\n\n    if (entry.title) {\n\n      // Append title element to entry.node\n      entry.node.append(mapp.ui.locations.entries.title(entry))\n    }\n\n    // Check whether entry has a value\n    if (entry.value === null || typeof entry.value === 'undefined') {\n\n      // Assign the default value if set.\n      entry.value = entry.default || entry.value\n    }\n\n    if (entry.query) {\n\n      // Assign queryparams from layer, and locale.\n      entry.queryparams = Object.assign(\n        entry.queryparams || {},\n        entry.location.layer.queryparams || {},\n        entry.location.layer.mapview.locale.queryparams || {})\n\n      // Check whether query returns data.\n      if (entry.queryCheck || entry.run === true) {\n\n        // Stringify paramString from object.\n        const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n        // Run the entry query.\n        mapp.utils\n          .xhr(`${entry.host || entry.location.layer.mapview.host}/api/query?${paramString}`)\n          .then(response => {\n\n            // Assign query response as entry value.\n            entry.value = response;\n\n            // Check whether entry should be skipped.\n            if (skipEntry(entry)) {\n\n              // Remove the entry.node from location view.\n              entry.node.remove();\n              return;\n            }\n\n            // Create element to be appended into empty entry.node\n            const el = mapp.ui.locations.entries[entry.type]?.(entry)\n\n            el && entry.node.append(el)\n          })\n\n        continue;\n      }\n\n    }\n\n    if (!Object.hasOwn(mapp.ui.locations.entries, entry.type)) {\n      console.warn(`entry.type:${entry.type} method not found.`)\n      continue;\n    }\n\n    // Create element to be appended into empty entry.node\n    const el = mapp.ui.locations.entries[entry.type]?.(entry)\n\n    // Break this for loop!\n    if (el === 'break') break;\n\n    el && entry.node.append(el)\n  }\n\n  return listview\n}\n\nfunction skipEntry(entry) {\n\n  // Skip entries which are falsy if flagged.\n  if (entry.skipFalsyValue\n    && !entry.value?.length\n    && !entry.edit) return true;\n\n  // Skip entries which are undefined if flagged.\n  if (entry.skipUndefinedValue\n    && typeof entry.value === 'undefined'\n    && !entry.edit) return true;\n\n  // Skip entries which are null if flagged.\n  if (entry.skipNullValue\n    && entry.value === null\n    && !entry.edit) return true;\n\n}", "export default entry => {\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || entry.title,\n    checked: entry.value,\n    disabled: !entry.edit,\n    onchange: (checked) => {\n\n      entry.newValue = checked\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', {\n          detail: entry\n        }))\n  \n    }\n  })\n\n  const node = mapp.utils.html.node`${chkbox}`\n\n  return node\n}", "const types = {\n  image,\n  images,\n  documents\n}\n\nconst onload = {\n  image: imageLoad,\n  images: imageLoad,\n  documents: docLoad\n}\n\nexport default entry => types[entry.type](entry)\n\nfunction image(entry) {\n\n  if (entry.value) {\n\n    const trashBtn = mapp.utils.html`\n      <button \n        style=\"position: absolute; width: 2em; height: 2em; right: 0.5em; top: 0.5em;\"\n        class=\"mask-icon trash no\"\n        data-name=${entry.value.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n        data-src=${entry.value}\n        onclick=${e => trash(e, entry)}>`\n\n    // Render image with src from cloudinary reference as value.\n    return mapp.utils.html.node`\n      <div style=\"position: relative;\">\n        <img\n          style=\"width: 100%\"\n          src=${entry.value}\n          onclick=${mapp.ui.utils.imagePreview}>\n          ${entry.edit && trashBtn}`\n\n  }\n  \n  if (entry.edit) {\n\n    return mapp.utils.html.node`\n      <input\n        type=\"file\"\n        accept=\"image/*;capture=camera\"\n        onchange=${e => upload(e, entry)}>`\n  }\n}\n\nfunction images(entry) {\n\n  const images = entry.value?.map(image => {\n\n    const trashBtn = mapp.utils.html`\n      <button\n        class=\"mask-icon trash no\"\n        data-name=${image.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n        data-src=${image}\n        onclick=${e => trash(e, entry)}>`\n\n    return mapp.utils.html`\n      <div>\n        <img \n          src=${image}\n          onclick=${mapp.ui.utils.imagePreview}>\n          ${entry.edit && trashBtn}`\n\n  }) || []\n\n  if (entry.edit) images.push(mapp.utils.html.node`\n    <div class=\"mask-icon add-photo pos-center\">\n      <input\n        type=\"file\"\n        accept=\"image/*;capture=camera\"\n        onchange=${e => upload(e, entry)}>`)\n\n  if (!images.length) return;\n\n  entry.list = mapp.utils.html.node`<div class=\"images-grid\">${images}`\n\n  return entry.list;\n}\n\nfunction documents(entry) {\n\n  const docs = entry.value?.map(doc => {\n\n    const trashBtn = mapp.utils.html`\n      <button\n        class=\"mask-icon trash no\"\n        data-name=${doc.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n        data-href=${doc}\n        onclick=${e => trash(e, entry)}>`\n\n    return mapp.utils.html`\n      <div class=\"link-with-img\">\n        ${(entry.edit) && trashBtn}\n          <a\n            target=\"_blank\"\n            href=${doc}>${doc.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '')}`\n\n  }) || []\n\n  entry.uploadBtn = mapp.utils.html.node`\n    <div class=\"mask-icon cloud-upload\">\n      <input\n        style=\"opacity: 0; width: 3em; height: 3em;\"\n        type=\"file\"\n        accept=\".txt,.pdf,.doc,.docx,.xls,.xlsx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document;\"\n        onchange=${e => upload(e, entry)}>`\n\n  entry.edit && docs.push(entry.uploadBtn)\n\n  if (!docs.length) return;\n\n  entry.list = mapp.utils.html.node`<div>${docs}`\n\n  return entry.list;\n}\n\nasync function upload(e, entry) {\n\n  // Location view must disabled while uploading resource.\n  entry.location.view?.classList.add('disabled')\n\n  const reader = new FileReader()\n\n  if (!e.target.files[0]) return;\n\n  entry.file = e.target.files[0]\n\n  reader.onload = e => onload[entry.type](e, entry)\n\n  reader.readAsDataURL(entry.file)\n}\n\nfunction imageLoad(e, entry) {\n\n  const img = new Image()\n\n  img.onload = async () => {\n\n    let\n      canvas = mapp.utils.html.node`<canvas>`,\n      max_size = 1024,\n      width = img.width,\n      height = img.height\n\n    // resize\n    if (width > height && width > max_size) {\n      height *= max_size / width\n      width = max_size\n\n    } else if (height > max_size) {\n      width *= max_size / height\n      height = max_size\n    }\n\n    canvas.width = width\n    canvas.height = height\n\n    canvas.getContext('2d').drawImage(img, 0, 0, width, height)\n\n    const dataURL = canvas.toDataURL('image/jpeg', 0.5)\n\n    const public_id = entry.file.name.replace(/^.*\\//, '').replace(/\\.([\\w-]{3})/, '') + entry.suffix_date ? `@${Date.now()}` : '';\n\n    const response = await mapp.utils.xhr({\n      method: 'POST',\n      requestHeader: {\n        'Content-Type': 'application/octet-stream'\n      },\n      url: `${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n        public_id,\n        resource_type: 'image',\n        folder: entry.cloudinary_folder\n      })}`,\n      body: mapp.utils.dataURLtoBlob(dataURL)\n    })\n\n    if (!response || response.error) {\n      const errorDetail = response?.error?.message ? ` Error: ${response.error.message}` : '';\n      const errorMessage = `Cloudinary Image upload failed!${errorDetail}`;\n      alert(errorMessage);\n      return;\n    }\n\n    if (entry.type === 'image') {\n\n      // Only a single image is supported by the entry.type.\n      entry.value = response.secure_url\n    } else {\n\n      // Add the secure_url to the entry values array and update the location.\n      entry.value = Array.isArray(entry.value) ? entry.value.concat([response.secure_url]) : [response.secure_url]\n    }\n\n    postUpdate(entry)\n  }\n\n  img.src = e.target.result\n}\n\nasync function docLoad(e, entry) {\n\n  const response = await mapp.utils.xhr({\n    method: 'POST',\n    requestHeader: {\n      'Content-Type': 'application/octet-stream'\n    },\n    url: `${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n      public_id: entry.file.name,\n      resource_type: 'raw',\n      folder: entry.cloudinary_folder\n    })}`,\n    body: e.target.result\n  })\n\n  if (!response || response.error) {\n    const errorDetail = response?.error?.message ? ` Error: ${response.error.message}` : '';\n    const errorMessage = `Cloudinary document upload failed!${errorDetail}`;\n    alert(errorMessage);\n    return;\n  }\n  // Add the secure_url to the entry values array and update the location.\n  entry.value = Array.isArray(entry.value) ? entry.value.concat([response.secure_url]) : [response.secure_url]\n\n  postUpdate(entry)\n}\n\nasync function trash(e, entry) {\n\n  if (!confirm('Remove item?')) return;\n\n  // Send request to cloudinary to destroy resource.\n  await mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n    destroy: true,\n    public_id: e.target.dataset.name,\n    folder: entry.cloudinary_folder\n  })}`)\n\n  // Remove the resource link from the entry values array and update the location.\n  const valueSet = new Set(entry.value)\n\n  valueSet.delete(e.target.dataset.src || e.target.dataset.href)\n\n  if (entry.type === 'image') {\n\n    entry.value = null\n  } else {\n\n    entry.value = valueSet.size ? Array.from(valueSet) : null;\n  }\n\n  postUpdate(entry)\n}\n\nasync function postUpdate(entry) {\n\n  entry.location.view?.classList.add('disabled')\n\n  // Update the geometry field value.\n  await mapp.utils.xhr({\n    method: 'POST',\n    url:\n      `${entry.location.layer.mapview.host}/api/location/update?` +\n      mapp.utils.paramString({\n        locale: entry.location.layer.mapview.locale.key,\n        layer: entry.location.layer.key,\n        table: entry.location.table,\n        id: entry.location.id,\n      }),\n    body: JSON.stringify({ [entry.field]: entry.value }),\n  })\n\n  const content = mapp.ui.locations.entries[entry.type](entry)\n\n  mapp.utils.render(entry.node, content)\n\n  entry.title && content.before(mapp.ui.locations.entries.title(entry))\n\n  entry.location.view?.classList.remove('disabled')\n}", "export default entry => {\n\n  // The entry value may have been assigned if the query was already run in the infoj method.\n  entry.data ??= entry.value\n\n  if (entry.data === null) {\n\n    // The entry must be disabled if the query has run and the data is null.\n    // This is to prevent the query running over and over again getting the same result.\n    delete entry.display\n    entry.disabled = true\n  } else {\n\n    delete entry.disabled\n  }\n\n  // Dataview methods require the layer and host to be defined on the entry.\n  entry.layer = entry.location.layer\n  entry.host = entry.host || entry.location.layer.mapview.host\n\n  // An entry which depend on another entry field will not be displayed if that field value is falsy.\n  if (entry.dependents && entry.dependents.some(\n      dependant => entry.location.infoj.some(\n        _entry => (!_entry.value && _entry.field === dependant)\n      ))) delete entry.display;\n\n  // Dataview has already been created. e.g. after the location (view) is updated.\n  if (entry.update) {\n\n    // Update dataview if displayed.\n    entry.display && entry.update()\n\n    // Return elements to location view.\n    return mapp.utils.html.node`\n      ${entry.chkbox || ''}\n      ${entry.locationViewTarget || ''}`\n  }\n\n  // Dataview will be rendered into target identified by ID.\n  if (typeof entry.target === 'string' && document.getElementById(entry.target)) {\n\n    // Assign element by ID as target.\n    entry.target = document.getElementById(entry.target)\n  \n    // Create and update the dataview.\n    mapp.ui.Dataview(entry).then(() => entry.update())\n  \n    return;\n  }\n\n  // Find tabview element from data-id attribute.\n  entry.tabview = entry.tabview || typeof entry.target === 'string'\n    && document.querySelector(`[data-id=${entry.target}]`)\n\n  // Dataview will be rendered into a tabview panel.\n  if (entry.tabview) {\n\n    // Assign target html element for dataview.\n    entry.target = mapp.utils.html.node`<div class=\"dataview-target\">`\n\n    // Dataview should be displayed.\n    entry.display && createTabAndShow(entry)\n  };\n\n  if (!entry.target) {\n\n    console.warn('type:dataview entry must have a target')\n    return;\n  }\n\n  // Dataview will be rendered into location view.\n  if (typeof entry.target === 'string') {\n      \n    entry.locationViewTarget = mapp.utils.html.node`\n      <div\n        class=\"${`location ${entry.class}`}\">`\n  \n    entry.target = entry.locationViewTarget\n\n    entry.display && mapp.ui.Dataview(entry).then(() => entry.update())\n  }\n\n  // A checkbox will only be created if the label key value is provided.\n  entry.chkbox = entry.label && mapp.ui.elements.chkbox({\n    label: entry.label,\n    disabled: entry.disabled,\n    checked: !!entry.display,\n    onchange: (checked) => {\n\n      entry.display = checked\n\n      // Dataview is location view.\n      if (entry.locationViewTarget) {\n\n        // Hide dataview\n        if (!entry.display) {\n          entry.locationViewTarget.style.display = 'none'\n          return;\n        }\n\n        entry.locationViewTarget.style.display = 'block'\n        \n        // Location view has already been created.\n        typeof entry.update === 'function' && entry.update()\n\n        // Create location view.\n        typeof entry.update !== 'function' && mapp.ui.Dataview(entry).then(() => {\n\n          // Run update query if data has not already been asigned.\n          typeof entry.data === 'object'\n            ? entry.setData(entry.data)\n            : entry.update()\n        })\n\n        return;\n      }\n\n      // Dataview is in tabview\n      entry.display ? createTabAndShow(entry) : entry.remove()\n    }\n  })\n\n  // Return elements to location view.\n  return mapp.utils.html.node`\n    ${entry.chkbox || ''}\n    ${entry.locationViewTarget || ''}`\n}\n\nfunction createTabAndShow(entry) {\n\n  // The show method indicates that the tab has already been created.\n  if (entry.show) return entry.show()\n\n  // Dataview creation must be complete for methods to be available.\n  mapp.ui.Dataview(entry).then(() => {\n\n    // Assign border style based on the location view record (from list)\n    entry.tab_style = `border-bottom: 3px solid ${entry.location.style.strokeColor}`\n\n    // Create tab after dataview creation is complete.\n    entry.tabview.dispatchEvent(new CustomEvent('addTab', {\n      detail: entry\n    }))\n\n    // Show the tab if display is true.\n    entry.display && entry.show()\n  })\n}", "export default entry => {\n\n  let val\n\n  if (entry.edit) {\n\n    val = mapp.utils.html.node`\n      <input\n        type=${entry.type === 'datetime' && 'datetime-local' || 'date'}\n        value=${entry.value &&\n          (entry.type === 'datetime' && new Date(entry.value * 1000).toISOString().split('Z')[0]\n            || new Date(entry.value * 1000).toISOString().split('T')[0])}\n        onchange=${e => {\n\n          entry.newValue = new Date(e.target.value).getTime() / 1000\n\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n\n        }}>`;\n        \n  } else {\n\n    val = entry.value && new Date(entry.value * 1000).toLocaleString(entry.locale, entry.options)\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${val}`\n\n  return node\n}", "export default entry => {\n\n  let val = entry.value\n\n  if (!val) {\n\n    val = entry.defaults === 'user' && mapp.user?.email || entry.nullValue\n\n    if (val) {\n \n      mapp.utils.xhr({\n        method: 'POST',\n        url: `${entry.location.layer.mapview.host}/api/location/update?` +\n          mapp.utils.paramString({\n            locale: entry.location.layer.mapview.locale.key,\n            layer: entry.location.layer.key,\n            table: entry.location.layer.table,\n            id: entry.location.id,\n          }),\n        body: JSON.stringify({\n          [entry.field]: val\n        }),\n      });\n\n    }\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${entry.prefix}${val}${entry.suffix}`\n\n  return node\n}", "export default entry => {\n\n  // The geometry value must be JSON.\n  entry.value = typeof entry.value === 'string' && JSON.parse(entry.value) || entry.value\n\n  // Turn off display with no geometry to display.\n  entry.display = (entry.display && entry.value)\n\n  // Drawing is only available within an edit context.\n  if (entry.edit?.draw) {\n\n    entry.draw = entry.edit.draw\n  }\n\n  // Editing with drawing is toggled off.\n  if (entry._edit?.draw) delete entry.draw\n\n  // Return if entry has no geometry value and cannot be drawn in to.\n  if (!entry.value && !entry.draw) return;\n\n  // Assigning the mapview to the entry makes the entry behave like a layer object for draw and modify interactions.\n  entry.mapview = entry.location.layer.mapview\n\n  // Assign entry.style to location.style\n  entry.style = {...entry.location?.style, ...entry.style}\n\n  // Create ol style from entry.style if not yet defined.\n  entry.Style ??= mapp.utils.style(entry.style)\n\n  // Assign method to show geometry in mapview.\n  entry.show = show\n\n  // Create checkbox to control geometry display.\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'Geometry',\n    data_id: `${entry.field}-chkbox`,\n    checked: !!entry.display,\n    disabled: !entry.value,\n    onchange: (checked) => {\n\n      // Show geometry of checked.\n      if (checked) {\n        entry.show()\n\n      } else {\n\n        // Remove the geometry layer from map.\n        entry.display = false\n        entry.L && entry.location.layer.mapview.Map.removeLayer(entry.L)\n      }\n    }\n  })\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show()\n\n  // Push elements for drawing methods into list.\n  const list = []\n\n  // Call the draw method \n  draw(entry, list);\n\n  // Push modify button into list.\n  if (entry.edit) {\n\n    // Only if the entry has a value, should the modify button be shown (as you can't modify a null geometry)\n    if (entry.value) {\n\n      // If label is provided for the Modify Button, use it. Otherwise use default.\n      let modifyBtnLabel = entry.edit?.modifyBtnOnly?.label || 'Modify Geometry';\n\n      let modifyBtn = mapp.utils.html.node`\n      <button\n        class=\"flat bold wide primary-colour\"\n        onclick=${e => modify(e, entry)}>\n        ${modifyBtnLabel}`\n\n      if (entry.edit?.modifyBtnOnly) {\n        return modifyBtn\n      }\n\n      list.push(modifyBtn)\n    }\n    \n  }\n\n\n  // Push modify button into list.\n  entry.value && entry.edit?.delete && list.push(mapp.utils.html`\n    <button\n      class=\"flat wide no-colour\"\n      onclick=${() => {\n\n      if (entry.display) {\n        remove()\n        return;\n      }\n\n      entry.show()\n\n      // Allow for geometries to be shown before confirming the deletion.\n      setTimeout(remove, 500)\n\n      async function remove() {\n\n        // Return if user does not confirm deletion.\n        if (!confirm('Delete Geometry?')) return;\n\n        entry.value = null\n\n        postUpdate(entry)\n      }\n\n    }}>Delete Geometry`)\n\n  const icon = entry.style && mapp.utils.html`\n    ${mapp.ui.elements.legendIcon(\n    Object.assign({ width: 24, height: 24 }, entry.style)\n  )}`;\n\n  if (list.length > 0) {\n\n    // Return drawer with list elements to entry node.\n    return mapp.ui.elements.drawer({\n      data_id: `draw-drawer`,\n      class: entry.draw?.classList,\n      header: mapp.utils.html`\n        ${chkbox}\n        <div class=\"mask-icon expander\"></div>\n        ${icon}`,\n      content: mapp.utils.html`\n        ${list}`,\n    })\n\n  }\n\n  // Return checkbox only if list is empty.\n  return mapp.utils.html.node`<div class=\"flex-spacer\">${chkbox}${icon}`\n}\n\n// Method to toggle the entry's geometry display.\nfunction show() {\n\n  this.display = true\n\n  const chkbox = this.location\n    .view?.querySelector(`[data-id=${this.field}-chkbox] input`)\n\n  if (chkbox) chkbox.checked = true\n\n  if (this.L) {\n\n    // Remove existing layer to prevent assertion error.\n    this.location.layer.mapview.Map.removeLayer(this.L)\n    delete this.L\n  }\n\n  // Create new geometry layer from entry value\n  this.L = this.location.layer.mapview.geoJSON({\n    zIndex: this.zIndex || 99,\n    geometry: this.value,\n    Style: this.Style,\n    dataProjection: this.srid || this.location?.layer?.srid\n  })\n\n  // Removes layer from mapview when location is removed.\n  this.location.Layers.push(this.L)\n}\n\n// Method for button element to call modify interaction.\nfunction modify(e, entry) {\n\n  const btn = e.target\n\n  // Check whether to cancel interaction.\n  if (btn.classList.contains('active')) {\n\n    // Cancel modify interaction.\n    entry.mapview.interactions.highlight()\n    return;\n  }\n\n  btn.classList.add('active')\n\n  // Tick display checkbox if not already set.\n  !entry.display && entry.show()\n\n  // Remove existing entry geometry layer.\n  entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n  const feature = entry.L.getSource().getFeatures()[0]\n\n  entry.mapview.interactions.modify({\n    Feature: feature.clone(),\n    layer: entry.location.layer,\n    snap: entry.edit.snap,\n    srid: entry.srid || entry.location.layer.srid,\n    callback: feature => {\n\n      // Reset interaction and button\n      btn.classList.remove('active')\n\n      delete entry.mapview.interaction\n\n      // Set highlight interaction if no other interaction is current after 400ms.\n      setTimeout(() => {\n        !entry.mapview.interaction && entry.mapview.interactions.highlight()\n      }, 400)\n\n      // The callback returns a feature as geojson.\n      if (feature) {\n\n        // Assign feature geometry as new value.\n        entry.value = feature.geometry\n\n        postUpdate(entry)\n\n        return;\n      }\n\n      // Add original layer back with no new feature geometry returned from draw interaction.\n      entry.location.layer.mapview.Map.addLayer(entry.L)\n    }\n  })\n}\n\n// Method for button element to call draw interaction.\nfunction draw(entry, list) {\n\n  // Short circuit without an entry.draw config.\n  if (!entry.draw) return;\n\n  entry.draw.callback = feature => {\n\n    if (!feature) return;\n\n    // Assign feature geometry as new value.\n    entry.value = feature.geometry\n\n    postUpdate(entry)\n  }\n\n  Object.keys(entry.draw).forEach(key => {\n\n    if (mapp.ui.elements.drawing[key]) {\n      list.push(mapp.ui.elements.drawing[key](entry))\n    }\n  })\n\n}\n\nasync function postUpdate(entry) {\n\n  if (entry.L) {\n\n    // Remove existing entry geometry layer.\n    entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n    delete entry.L\n  }\n\n  entry.location.view?.classList.add('disabled')\n\n  // Update the geometry field value.\n  await mapp.utils.xhr({\n    method: 'POST',\n    url:\n      `${entry.location.layer.mapview.host}/api/location/update?` +\n      mapp.utils.paramString({\n        locale: entry.location.layer.mapview.locale.key,\n        layer: entry.location.layer.key,\n        table: entry.location.table,\n        id: entry.location.id,\n      }),\n    body: JSON.stringify({ [entry.field]: entry.value }),\n  })\n\n  if (entry.location.layer.geom === entry.field) {\n\n    // Reload the layer if the layers geom field has been updated.\n    entry.location.layer.reload()\n  }\n\n  const content = mapp.ui.locations.entries[entry.type](entry)\n\n  mapp.utils.render(entry.node, content)\n\n  entry.title && content.before(mapp.ui.locations.entries.title(entry))\n\n  entry.location.view?.classList.remove('disabled')\n}", "export default entry => {\n\n  let val = mapp.utils.html`\n    <pre><code>${JSON.stringify(entry.value, null, 2)}`\n\n  if (entry.edit) {\n\n    val = mapp.utils.html`\n    <textarea\n      style=\"auto; min-height: 50px;\"\n      onfocus=${e => {\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }}\n      onfocusout=${e => {\n        e.target.style.height = 'auto';\n      }}\n      oninput=${e => {\n\n        entry.json = (() => {\n          try {\n            return JSON.parse(e.target.value)\n          } catch (e) {\n            return false \n          }\n        })();\n\n        e.target.style.border = entry.json ? 'none' : '1px solid red';\n      }}\n      onkeyup=${e => {\n        entry.newValue = typeof entry.json !== 'object' ? entry.value : entry.json;\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}\n      onkeydown=${e => setTimeout(() => {\n        e.target.style.height = 'auto';\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }, 100)}>${JSON.stringify(entry.value, null, 2)}`\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">${val}`\n\n  return node\n}", "export default entry => {\n\n  // The entry has already been processed.\n  // There is an entry.panel to be rendered into the entry.node.\n  if (entry.panel) return entry.panel;\n\n  // Assign mapview to entry to provide shortened lookup.\n  entry.mapview = entry.location.layer.mapview\n\n  // Assign the mvt layer to be cloned from mapview layers.\n  entry.Layer = entry.mapview.layers[entry.layer]\n\n  if (!entry.Layer) {\n    console.warn('mvt_clone Layer not found in mapview.layers object.')\n    return;\n  }\n\n  // The entry must have a style object.\n  entry.style ??= entry.Layer.style\n\n  if (entry.style.default) {\n\n    // Assign the location style to the default style.\n    entry.style.default = {...entry.location?.style, ...entry.style.default}\n  }\n\n  // Create clone VectorTile layer.\n  entry.L = new ol.layer.VectorTile({\n    source: entry.Layer.L.getSource(),\n    renderBuffer: 200,\n    zIndex: entry.zIndex,\n\n    // Assign style from entry.style\n    style: mapp.layer.Style(entry)\n  });\n\n  // Add the clone layer to the mvt layer clones.\n  entry.Layer.clones.add(entry.L)\n\n  if (entry.style.themes) {\n\n    // Assign the first theme from themes if undefined.\n    entry.style.theme ||= entry.style.themes[Object.keys(entry.style.themes)[0]]\n  }\n\n  // Assign method to show the clone layer.\n  entry.show = async () => {\n\n    entry.display = true;\n\n    // The OL clone layer already exists.\n    if (entry.L && entry.featureLookup) {\n\n      if (entry.style.panel) entry.style.panel.style.display = 'block'\n\n      try {\n        entry.mapview.Map.addLayer(entry.L)\n\n      } catch {\n        // Will catch assertation error when layer is already added.\n      }\n\n      return;\n    }\n\n    // Create query paramString from the entry object.\n    const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n    // Query the featureLookup.\n    entry.featureLookup = await mapp.utils.xhr(`${entry.host || entry.mapview.host}/api/query?${paramString}`)\n\n    // The query does not return a response.\n    if (entry.featureLookup === null) {\n\n      // Disable the chkbox input.\n      entry.panel.querySelector('input').disabled = true\n\n      // The entry.style.panel will not be created.\n      return;\n    }\n\n    // Create a style panel as entry.style.panel and append to entry.node.\n    entry.style.panel = mapp.ui.layers.panels.style(entry)\n    \n    if (entry.style.panel) {\n      entry.panel.append(entry.style.panel)\n      entry.view = entry.panel\n    }\n    \n    // Add the clone layer to the mapview.Map.\n    entry.mapview.Map.addLayer(entry.L)\n\n    // Add a location.removeCallback to remove the clone from mapview.Map as well as the mvt layer clones.\n    entry.location.removeCallbacks.push(() => {\n      entry.mapview.Map.removeLayer(entry.L)\n      entry.Layer.clones.delete(entry.L)\n    })\n\n  };\n\n  // Assign method to hide the clone layer.\n  entry.hide = async () => {\n\n    entry.display = false\n\n    // Hide the style drawer.\n    if (entry.style.panel) entry.style.panel.style.display = 'none'\n\n    // Remove the geometry layer from map.\n    entry.mapview.Map.removeLayer(entry.L)\n\n    // Remove the clone from the mvt layer clones.\n    entry.Layer.clones.delete(entry.L)\n  }\n\n  entry.reload = () => entry.L?.changed()\n\n  // Create checkbox to control geometry display.\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'MVT Clone',\n    data_id: `${entry.field}-chkbox`,\n    checked: !!entry.display,\n    onchange: (checked) => checked ? entry.show() : entry.hide()\n  })\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show()\n\n  // Create a node consistent of the chkbox and the style drawer.\n  entry.panel = mapp.utils.html.node`<div>${chkbox}`\n\n  // Disable chkbox if layer is out of zoom range\n  function chkZoom() {\n\n    // The mvt layer can be displayed at all zoom levels.\n    if (!entry.Layer.tables) return;\n\n    // if the featureLookup is null, the layer cannot be displayed.\n    // This is for when you zoom out beyond the zoom range of the layer, and then zoom back in.\n    if (entry.featureLookup === null) return; \n\n    // The clone layer cannot be displayed.\n    if (entry.Layer.tableCurrent() === null) {\n\n      // Disable checkbox.\n      entry.panel.querySelector('input').disabled = true\n\n      // Hide style drawer if present.\n      if (entry.style.panel) entry.style.panel.style.display = 'none'\n\n      // Remove clone layer if present in set but should not be displayed.\n      !entry.display && entry.mapview.Map.removeLayer(entry.L)\n\n      return;\n    }\n\n    // Enable checkbox.\n    entry.panel.querySelector('input').disabled = false\n\n    // Display style drawer if present.\n    if (entry.style.panel) entry.style.panel.style.display = 'block'\n\n    // Try to add entry.L to mapview.Map\n    try {\n      entry.display && entry.mapview.Map.addLayer(entry.L)\n    } catch {\n      // Will catch assertation error when layer is already added.\n    }\n\n  }\n\n  chkZoom()\n\n  // Add zoom level check to mapview changeEnd event.\n  entry.mapview.Map.getTargetElement().addEventListener('changeEnd', chkZoom)\n\n  // Remove zoom level check from mapview changeEnd event.\n  entry.location.removeCallbacks.push(() => {\n\n    // Remove layer from map when location is removed.\n    entry.mapview.Map.removeLayer(entry.L)\n\n    entry.mapview.Map.getTargetElement().removeEventListener('changeEnd', chkZoom)\n  })\n\n  // Return the node to the location view.\n  return entry.panel\n}", "export default entry => {\n\n  formatEntryValue(entry);\n\n  if (!entry.edit) {\n    return displayValueNode(entry);\n  }\n\n  if (entry.edit.range) {\n    return createSlider(entry);\n  }\n\n  return createNumberInput(entry);\n}\n\nfunction formatEntryValue(entry) {\n  if (isNaN(entry.value)) return;\n\n  if (entry.type === 'integer') {\n\n    const options = {\n      \n      // Number of decimal places is always 0 for integers\n      maximumFractionDigits: 0\n    };\n    entry.value = parseFloat(entry.value).toLocaleString(entry?.formatterParams?.locale || 'en-GB', options);\n  } else {\n\n    // Convert the value using toLocaleString with the formatterParams defined\n    entry.value = parseFloat(entry.value).toLocaleString(entry?.formatterParams?.locale || 'en-GB', entry?.formatterParams?.options)\n  }\n}\n\nfunction createSlider(entry) {\n  return mapp.ui.elements.slider({\n    min: entry.edit.range.min,\n    max: entry.edit.range.max,\n    val: entry.value,\n    callback: e => {\n      entry.newValue = entry.type === 'integer'\n        ? parseInt(e.target.value)\n        : parseFloat(e.target.value);\n\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', { detail: entry })\n      );\n    }\n  });\n}\n\nfunction createNumberInput(entry) {\n  return mapp.utils.html.node`\n    <input\n      type=\"number\"\n      value=${entry.value}\n      placeholder=${entry.edit.placeholder}\n      onkeyup=${e => handleKeyUp(e, entry)}\n    >`;\n}\n\nfunction handleKeyUp(e, entry) {\n  if (entry.type === 'integer') {\n    e.target.value = parseInt(e.target.value);\n  }\n\n  entry.newValue = e.target.value;\n  entry.location.view?.dispatchEvent(\n    new CustomEvent('valChange', { detail: entry })\n  );\n}\n\nfunction displayValueNode(entry) {\n  return mapp.utils.html.node`\n    <div class=\"val\" style=${entry.css_val}>\n      ${entry.prefix}${entry.value}${entry.suffix}\n    </div>`;\n}", "export default entry => {\n\n  entry.srid = entry.srid || entry.location.layer.srid\n\n  // Remove existing pin layer\n  entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n  entry.L = entry.location.layer.mapview.geoJSON({\n    zIndex: Infinity,\n    geometry: {\n      type: 'Point',\n      coordinates: entry.value,\n    },\n    dataProjection: entry.srid,\n    Style: entry.style && mapp.utils.style(entry.style) || entry.Style || entry.location.pinStyle\n  })\n\n  entry.location.layer.display && entry.location.layer.L?.changed()\n\n  entry.location.Layers.push(entry.L)\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'Pin',\n    checked: true,//!!entry.display,\n    onchange: (checked) => {\n      entry.display = checked\n      checked ?\n        entry.location.layer.mapview.Map.addLayer(entry.L) :\n        entry.location.layer.mapview.Map.removeLayer(entry.L);\n    }\n  })\n\n  const node = mapp.utils.html.node`${chkbox}`\n\n  return node\n}", "export default entry => {\n\n  // Ensure that params are set for link generation\n  entry.params ??= {}\n\n  if (entry.report) {\n\n    // Assign URL path for report.\n    entry.url ??= `${entry.location.layer.mapview.host}/view?`\n\n    // Assign URL params for report.\n    Object.assign(entry.params, {\n      template: entry.report.template,\n      id: entry.location.id,\n      layer: entry.location.layer.key,\n      locale: entry.location.layer.mapview.locale.key\n    })\n\n    // Assign entry.label for link text.\n    entry.label ??= entry.report.label || 'Report'\n    entry.icon_class ??= 'mask-icon wysiwyg'\n  }\n\n  if (!entry.url) {\n\n    console.warn(`An entry.url must be defined for the URL path.`)\n    return;\n  }\n\n  // Set default label and icon_class\n  entry.icon_class ??= 'mask-icon open-in-new'\n  entry.label ??= 'Link'\n\n  // Construct href from URL + params.\n  const href = entry.url + mapp.utils.paramString(entry.params)\n\n  const node = mapp.utils.html.node`\n    <div class=\"link-with-img\">\n      <div style=${entry.icon_style || ''} class=${entry.icon_class}></div>\n      <a target=\"_blank\" href=${href}>${entry.label}`\n\n  return node\n}", "export default entry => {\n\n  const tabview = document.querySelector(`[data-id=${entry.target}]`)\n\n  // Assign border style based on the location view record (from list)\n  entry.tab_style = `border-bottom: 3px solid ${entry.location.style.strokeColor}`\n\n  // Create tabview after dataview creation is complete.\n  tabview.dispatchEvent(new CustomEvent('addTab', {\n    detail: entry\n  }))\n\n  // Show the tab if display is true.\n  entry.display && entry.show()\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label,\n    checked: !!entry.display,\n    onchange: (checked) => {\n\n      entry.display = checked\n\n      // Show or remove tab according to the checked/display value.\n      entry.display ?\n        entry.show() :\n        entry.remove()\n  \n    }\n  })\n  \n  return mapp.utils.html.node`${chkbox}`\n}", "export default entry => {\n\n  // Short circuit if not editable without a value.\n  if (!entry.edit && !entry.value) return;\n\n  // Return inputs for editing.\n  if (entry.edit) return edit(entry)\n\n  // Return value as text, including prefix and suffix.\n  return mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=${entry.css_val}>\n      ${entry.prefix}${entry.value}${entry.suffix}`\n}\n\n// Edit function\nfunction edit(entry) {\n\n  // If edit options are defined.\n  if (entry.edit.options) {\n\n    // Create container with loading text.\n    entry.container = mapp.utils.html.node`<div>Loading...`;\n\n    // If options is an array and contains values, we can create a dropdown.\n    if (entry.edit.options.length) {\n\n      // Create dropdown from options.\n      options(entry)\n\n    } \n    // If options is empty array, we need to query the table to populate it.\n    else {\n\n      // Query distinct field values from the layer table.\n      mapp.utils.xhr(\n        `${entry.location.layer.mapview.host}/api/query?` +\n        mapp.utils.paramString({\n          template: 'distinct_values',\n          dbs: entry.location.layer.dbs,\n          locale: entry.location.layer.mapview.locale.key,\n          layer: entry.location.layer.key,\n          filter: entry.location.layer.filter?.current,\n          table: entry.location.layer.tableCurrent(),\n          field: entry.field\n        })).then(response => {\n\n          // Return first value from object row as options array.\n          entry.edit.options = [response].flat().map(row => {\n            return Object.values(row)[0]\n          })//.filter(val => val !== null)\n          \n          // Create dropdown from options.\n          options(entry)\n        })\n    }\n\n    // Return container.\n    return entry.container\n  }\n\n  // Return text input if no options are defined (free text input).\n  return mapp.utils.html.node`\n    <input\n      type=\"text\"\n      maxlength=${entry.edit.maxlength}\n      value=\"${entry.value || ''}\"\n      placeholder=\"${entry.edit.placeholder || ''}\"\n      onkeyup=${e => {\n      entry.newValue = e.target.value\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', { detail: entry }))\n    }}>`\n}\n\n// Options function\nfunction options(entry) {\n\n  // Create array of objects for optionEntries.\n  const optionEntries = entry.edit.options.map(option => ({\n\n    // Assign null if option is null.\n    title: option === null ? null : \n\n      // Assign string as title.\n      typeof option === 'string' && option\n      \n      // Assign first key as title.\n      || Object.keys(option)[0],\n\n    // Assign null if option is null.\n    option: option === null ? null : \n    \n      // Assign string as option.\n      typeof option === 'string' && option\n      \n      // Assign first value as option.\n      || Object.values(option)[0]\n  }))\n\n  // Find title for the entry.value\n  const option = optionEntries.find(e => e.option === entry.value)\n\n  // Render dropdown.\n  mapp.utils.render(entry.container, mapp.ui.elements.dropdown({\n    placeholder: entry.edit.placeholder,\n    span: option?.title || entry.value,\n    // Set entries to optionEntries provided.\n    entries: optionEntries,\n    callback: (e, _entry) => {\n\n      // Assign entry option as newValue.\n      entry.newValue = _entry.option\n\n      // Check whether newValue is different from current value.\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', {\n          detail: entry,\n        })\n      );\n    }\n  }))\n\n}", "export default entry => {\n\n  let val = entry.type !== 'html' ? entry.value : ''\n\n  if (entry.edit) {\n\n    val = mapp.utils.html`\n    <textarea\n      style=\"auto; min-height: 50px;\"\n      maxlength=${entry.edit.maxlength}\n      placeholder=\"${entry.edit.placeholder || ''}\"\n      onfocus=${e => {\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }}\n      onfocusout=${e => {\n        e.target.style.height = 'auto';\n      }}\n      onkeyup=${e => {\n        entry.newValue = e.target.value\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}\n      onkeydown=${e => setTimeout(() => {\n        e.target.style.height = 'auto';\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }, 100)}>\n      ${entry.value || ''}`\n  }\n\n  const node = mapp.utils.html.node`\n  <div\n    class=\"val\"\n    style=\"${`${entry.css_val || ''}`}\">${val}`\n\n  if (!entry.edit && entry.type === 'html') {\n    node.innerHTML = entry.value || ''\n  }\n\n  return node\n}", "export default entry => {\n\n  let val\n\n  let stringVal = entry.value && entry.value.toString().replace('.',':')\n\n  stringVal = stringVal && stringVal.length < 3 && `${stringVal}:00` || stringVal\n\n  if (entry.edit) {\n\n    val = mapp.utils.html.node`\n      <input\n        type=\"time\"\n        value=${stringVal}\n        onchange=${e => {\n\n          entry.newValue = parseFloat(e.target.value.replace(':','.'))\n\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n\n        }}>`;\n        \n  } else {\n\n    val = stringVal\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${val}`\n\n  return node\n}", "export default entry => {\n\n  // The entry has already been processed.\n  // There is an entry.panel to be rendered into the entry.node.\n  if (entry.panel) return entry.panel;\n\n  // Assign mapview to entry to provide shortened lookup.\n  entry.mapview = entry.location.layer.mapview\n\n  entry.style ??= {}\n\n  if (entry.style.default) {\n\n    // Assign the location style to the default style.\n    entry.style.default = {...entry.location?.style, ...entry.style.default}\n  }\n\n  // Create checkbox to control geometry display.\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'MVT Clone',\n    data_id: `${entry.field}-chkbox`,\n    checked: !!entry.display,\n    onchange: (checked) => checked ? show(entry) : hide(entry)\n  })\n\n  // Show geometry if entry is set to display.\n  entry.display && show(entry)\n\n  // Create a node consistent of the chkbox and the style drawer.\n  entry.panel = mapp.utils.html.node`<div>${chkbox}`\n\n  // Remove zoom level check from mapview changeEnd event.\n  entry.location.removeCallbacks.push(() => {\n\n    // Remove layer from map when location is removed.\n    entry.mapview.Map.removeLayer(entry.L)\n  })\n\n  // Return the node to the location view.\n  return entry.panel\n}\n\nasync function show(entry) {\n\n  entry.display = true;\n\n  // The OL clone layer already exists.\n  if (entry.L) {\n\n    if (entry.style.panel) entry.style.panel.style.display = 'block'\n\n    try {\n      entry.mapview.Map.addLayer(entry.L)\n\n    } catch {\n      // Will catch assertation error when layer is already added.\n    }\n\n    return;\n  }\n\n  // Create query paramString from the entry object.\n  const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n  // Query the featureLookup.\n  entry.features = await mapp.utils.xhr(`${entry.host || entry.mapview.host}/api/query?${paramString}`)\n\n  mapp.layer.formats[entry.format](entry)\n\n  // Create a style panel as entry.style.panel and append to entry.node.\n  entry.style.panel = mapp.ui.layers.panels.style(entry)\n  entry.style.panel && entry.panel.append(entry.style.panel)\n\n  // Add the clone layer to the mapview.Map.\n  entry.mapview.Map.addLayer(entry.L)\n\n  // Add a location.removeCallback to remove the clone from mapview.Map as well as the mvt layer clones.\n  entry.location.removeCallbacks.push(() => {\n    entry.mapview.Map.removeLayer(entry.L)\n  })\n\n}\n\nfunction hide(entry) {\n\n  entry.display = false\n\n  // Hide the style drawer.\n  if (entry.style.panel) entry.style.panel.style.display = 'none'\n\n  // Remove the geometry layer from map.\n  entry.mapview.Map.removeLayer(entry.L)\n}", "import boolean from './boolean.mjs'\n\nimport cloudinary from './cloudinary.mjs'\n\nimport dataview from './dataview.mjs'\n\nimport date from './date.mjs'\n\nimport defaults from './defaults.mjs'\n\nimport geometry from './geometry.mjs'\n\nimport json from './json.mjs'\n\nimport mvt_clone from './mvt_clone.mjs'\n\nimport numeric from './numeric.mjs'\n\nimport pin from './pin.mjs'\n\nimport link from './link.mjs'\n\nimport tab from './tab.mjs'\n\nimport text from './text.mjs'\n\nimport textarea from './textarea.mjs'\n\nimport time from './time.mjs'\n\nimport vector_layer from './vector_layer.mjs'\n\nexport default {\n  boolean,\n  dataview,\n  date,\n  datetime: date,\n  defaults,\n  documents: cloudinary,\n  geometry,\n  html: textarea,\n  image: cloudinary,\n  images: cloudinary,\n  integer: numeric,\n  json,\n  key,\n  link,\n  mvt_clone,\n  numeric,\n  pin,\n  report: link,\n  tab,\n  text,\n  textarea,\n  time,\n  title,\n  vector_layer\n}\n\nfunction key(entry) {\n\n  const node = mapp.utils.html.node`\n  <div class=\"layer-key\">\n    <span>\n      ${entry.location.layer.name}`\n\n  return node\n}\n\nfunction title(entry) {\n\n  const tooltipSpan = entry.tooltip ? mapp.utils.html`\n  <span\n    style=\"line-height: 1; margin-left: 0.4em;\"\n    class=\"mobile-display-none mask-icon question-mark\">${entry.tooltip}` : '';\n\n  return mapp.utils.html.node`\n    <div\n      class=\"label\"\n      style=${entry.css_title}\n      title=${entry.tooltip}>${entry.title}\n      ${tooltipSpan}`\n}", "import view from './view.mjs'\n\nimport listview from './listview.mjs'\n\nimport infoj from './infoj.mjs'\n\nimport entries from './entries/_entries.mjs'\n\nexport default {\n  view,\n  listview,\n  infoj,\n  entries\n}", "export default async (_this) => {\n\n  // The dataview target is defined as string.\n  if (typeof _this.target === 'string') {\n\n    // assign target element by ID.\n    _this.target = document.getElementById(_this.target);\n  }\n\n  // Dataviews must be rendered into a target element.\n  if (!_this.target) {\n    console.warn('Dataview creation requires a target key-value');\n    console.log(_this);\n    return;\n  }\n\n  // Assign queryparams from layer, locale.\n  _this.queryparams = {\n    ..._this.queryparams,\n    ..._this.layer?.queryparams,\n    ..._this.layer?.mapview?.locale?.queryparams,\n    ..._this.location?.layer?.queryparams,\n    ..._this.location?.layer?.mapview?.locale?.queryparams}\n\n  // Update method for _this.\n  _this.update = async () => {\n\n    // Dataviews must not update without a query.\n    if (!_this.query) return;\n\n    // Compile params object from dataview entry.\n    const params = mapp.utils.queryParams(_this);\n\n    // Stringify paramString from object.\n    const paramString = mapp.utils.paramString(params);\n\n    // Query data as response from query.\n    const response = await mapp.utils.xhr(\n      `${_this.host || _this.location.layer.mapview.host\n      }/api/query?${paramString}`\n    );\n\n    if (response instanceof Error) return;\n\n    // The responseFunction must set the data to the dataview object.\n    if (typeof _this.responseFunction === 'function') {\n      _this.responseFunction(response);\n      return;\n    }\n\n    typeof _this.setData === 'function' && _this.setData(response);\n  };\n\n  // Create a container to accomodate for a toolbar and dataview container.\n  // Target must already be HTMLElement\n  if (_this.toolbar && _this.target instanceof HTMLElement) {\n    // Target for the dataview\n    let target = mapp.utils.html.node`<div class=\"dataview-target\">`;\n\n    let toolbar =\n      (typeof _this.toolbar === 'function' && _this.toolbar()) ||\n      Object.keys(_this.toolbar).map((key) =>\n        mapp.ui.elements.toolbar_el[key]?.(_this)\n      );\n\n    // Append flex container target element and assign as panel to dataview entry.\n    // The panel will be assigned in a tabview.\n    _this.panel = _this.target.appendChild(mapp.utils.html.node`\n        <div class=\"flex-col\">\n          <div class=\"btn-row\">${toolbar}</div>\n          ${target}`);\n\n    // Assign dataview target as target.\n    _this.target = target;\n  }\n\n  // Create a ChartJS dataview is chart is defined.\n  if (_this.chart) await mapp.ui.utils.Chart(_this);\n\n  // Columns in entry indicate missing table config.\n  if (typeof _this.columns !== 'undefined') {\n    console.warn('Table dataviews should be configured inside a tables object');\n\n    // Assign columns to table config.\n    _this.table = { columns: _this.columns };\n  }\n\n  // Create a Tabulator dataview if columns are defined.\n  if (_this.table) await mapp.ui.utils.Tabulator(_this);\n\n  // Update the dataview on mapChange if set.\n  _this.mapChange\n    && _this.layer\n    && _this.layer.mapview.Map.getTargetElement()\n      .addEventListener('changeEnd', () => {\n\n        // Only update dataview if corresponding layer is visible.\n        if (_this.layer && !_this.layer.display) return;\n\n        // Only update dataview if _this.tab is active.\n        if (_this.tab && !_this.tab.classList.contains('active')) return;\n\n        // Execute mapChange if defined as function or dataview update method.\n        (typeof _this.mapChange === 'function' && _this.mapChange()) ||\n          _this.update();\n      });\n\n  return _this;\n};", "export default tabview => {\n\n  if (!tabview.node) return;\n\n  tabview.tabs = tabview.node.appendChild(mapp.utils.html.node`<div class=\"tabs\">`)\n\n  tabview.panel = tabview.node.appendChild(mapp.utils.html.node`<div class=\"panel\">`)\n\n  // Set data attribute ID from element ID.\n  tabview.id && tabview.node.setAttribute('data-id', tabview.id);\n\n  tabview.addTab = addTab\n\n  tabview.node.addEventListener('addTab', e => tabview.addTab(e.detail))\n\n  return tabview;\n}\n\n// add entry as tab to this tabview.\nfunction addTab(entry) {\n\n  const tabview = this\n\n  if (entry.location) {\n \n    // The tabview should be removed if the location is removed.\n    entry.location.removeCallbacks.push(()=>entry.remove())\n\n  } else if (entry.layer) {\n\n    // Show tab when layer is displayed.\n    entry.layer.showCallbacks.push(()=>{\n\n      // Entry must have display flag.\n      entry.display && entry.show()\n    })\n  \n    // Hide tab when layer is hidden.\n    entry.layer.hideCallbacks.push(()=>{\n      entry.remove()\n    })\n  }\n\n  entry.tab = mapp.utils.html.node`\n    <div class=\"tab\">\n      <button\n        .disabled=${entry.disabled}\n        class=\"header\"\n        style=\"${entry.tab_style || ''}\"\n        onclick=${showTab}>\n          ${entry.label || entry.title || entry.key || 'Tab'}`\n\n  // Append the tab to the tabview tabs\n  entry.show && tabview.tabs.append(entry.tab)          \n      \n  entry.panel = entry.panel || entry.target || mapp.utils.html.node`\n    <div class=\"${`panel ${entry.class || ''}`}\">`\n\n  entry.panel.addEventListener('activate', ()=>{\n    entry.update && entry.update()\n  })\n\n  entry.show = showTab\n\n  entry.remove = removeTab\n\n  function showTab (){\n\n    // Render entry.panel into tabview.panel\n    mapp.utils.render(tabview.panel, entry.panel)\n\n    // Remove the active class from all tabs.\n    tabview.tabs.childNodes.forEach(tab => tab.classList.remove('active'))\n\n    // Add the tab element to tabs container if the tab element has no parent yet.\n    !entry.tab.parentElement && tabview.tabs.append(entry.tab)\n\n    // Make the tab active by assigning class.\n    entry.tab.classList.add('active')\n\n    // The activate event should be delayed with a timeout.\n    // This prevents each tab to activate when multiple tabs are added in quick succession.\n    tabview.timer && window.clearTimeout(tabview.timer)\n\n    tabview.timer = window.setTimeout(()=>{\n      if (entry.panel instanceof HTMLElement) {\n        entry.panel.dispatchEvent(new CustomEvent('activate'))\n        return\n      }\n      entry.target instanceof HTMLElement\n        && entry.target.dispatchEvent(new CustomEvent('activate'))\n    }, 500)\n\n    tabview.showTab && tabview.showTab(entry)\n  }\n\n  function removeTab () {\n\n    // A tab without parent element cannot be in the tab bar.\n    if (!entry.tab.parentElement) return\n\n    // Find a sibling of the entry.\n    const sibling = entry.tab.nextElementSibling || entry.tab.previousElementSibling\n\n    // Remove the tab element from tab bar.\n    entry.tab.remove()\n\n    // Activate the sibling.\n    if (sibling) return sibling.querySelector('.header').click()\n\n    tabview.removeLastTab && tabview.removeLastTab()\n  }\n}", "export default (params) => mapp.utils.html.node`\n  <div \n    data-id=${params.data_id || 'card'}\n    class=\"drawer\">\n    <div class=\"header bold\">\n      <span>${params.header}</span>\n      <button\n        data-id=close\n        class=\"mask-icon close\"\n        onclick=${e => {\n          e.target.closest('.drawer').remove()\n          params.close && params.close(e)\n        }}>\n    </div>\n    ${params.content}`;", "export default (params) => mapp.utils.html.node`\n  <label \n    data-id=${params.data_id || 'chkbox'}\n    class=\"checkbox\">\n    <input\n      type=\"checkbox\"\n      .disabled=${!!params.disabled}\n      .checked=${!!params.checked}\n      onchange=${e=>{\n        params.onchange && params.onchange(e.target.checked, params.val)\n      }}>\n    </input>\n    <div></div>\n    <span>${params.label}`", "export default {\n  modify,\n  draw\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    remove_last_vertex: 'Remove last vertex',\n    delete_vertex: 'Remove vertex'\n  },\n  de: {\n    remove_last_vertex: 'Entferne letzten Scheitelpunkt',\n    delete_vertex: 'Entferne Scheitelpunkt'\n  },\n  cn: {\n    remove_last_vertex: '\u5220\u9664\u6700\u540E\u4E00\u4E2A\u9876\u70B9',\n  },\n  pl: {\n    remove_last_vertex: 'Usu\u0144 ostatni wierzcho\u0142ek',\n  },\n  ko: {\n    remove_last_vertex: '\uB9C8\uC9C0\uB9C9 \uC815\uC810(\uAF2D\uC9C0\uC810) \uC81C\uAC70',\n  },\n  fr: {\n    remove_last_vertex: 'Effacer le dernier point',\n  },\n  ja: {\n    remove_last_vertex: '\u6700\u5F8C\u306E\u30D0\u30FC\u30C6\u30C3\u30AF\u30B9\u3092\u524A\u9664',\n  }\n})\n\nfunction modify(e) {\n\n  e && e.preventDefault()\n   \n  const menu = []\n  \n  // Show save option in contextmenu\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${() => this.interaction.finish(this.interaction.getFeature())}>\n      ${mapp.dictionary.save}`)\n\n  // Add cancel option to contextmenu.\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${()=>this.interaction.finish()}>\n      ${mapp.dictionary.cancel}`)\n\n  // Set context menu popup on last vertex.\n  this.popup({\n    coords: this.interaction.vertices[this.interaction.vertices.length-1],\n    content: mapp.utils.html.node`<ul>${menu}`,\n  })\n}\n\nfunction draw(e) {\n\n  if (this.interaction.vertices.length === 0) return;\n  \n  const menu = []\n  \n  menu.push(mapp.utils.html`\n  <li\n    onclick=${()=>this.interaction.finish(this.interaction.getFeature())}>\n      ${mapp.dictionary.save}`)\n\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${()=>this.interaction.finish()}>\n      ${mapp.dictionary.cancel}`)\n\n  // Set timeout to for the drawend popup to appear after async onchange event popup.\n  setTimeout(()=>this.popup({\n    coords: this.interaction.vertices[this.interaction.vertices.length - 1],\n    content: mapp.utils.html.node`<ul>${menu}`,\n    autoPan: true\n  }),100)\n}", "export default (params) => mapp.utils.html.node`\n  <div \n    data-id=${params.data_id || 'drawer'}\n    class=${`drawer expandable ${params.class || ''}`}>\n    <div\n      class=\"header\"\n      onclick=${(e) => {\n     \n        if (e.target.parentElement.classList.contains('empty')) return;\n      \n        // If expanded? Remove expanded from closest expandable and return.\n        if (e.target.parentElement.classList.contains('expanded')) {\n          return e.target.parentElement.classList.remove('expanded');\n        }\n      \n        // Accordion: Remove expanded from all siblings of closest expandable.\n        if (params.accordion) {\n          [...e.target.parentElement.parentElement.children].forEach(sibling => {\n            sibling.classList.remove('expanded');\n          });\n        }\n      \n        // Add expanded class to closest expandable.\n        e.target.parentElement.classList.add('expanded');\n      }}>\n      ${params.header}\n    </div>\n    ${params.content}`;", "export default {\n  point,\n  line,\n  polygon,\n  rectangle,\n  circle_2pt,\n  circle,\n  locator\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    draw_point: 'Point',\n    draw_position: 'Current Position',\n    draw_polygon: 'Polygon',\n    draw_rectangle: 'Rectangle',\n    circle_config: 'Circle configuration',\n    draw_circle: 'Circle from Centre',\n    draw_circle_2pt: 'Manual Circle',\n    draw_line: 'Line',\n    create: 'Create'\n  },\n  de: {\n    draw_point: 'Punkt',\n    draw_polygon: 'Polygon',\n    draw_rectangle: 'Rechteck',\n    draw_circle: 'Kreis',\n    draw_line: 'Linie',\n    create: 'Erstellen'\n  },\n  cn: {\n    draw_point: '\u70B9',\n    draw_polygon: '\u591A\u8FB9\u5F62',\n    draw_rectangle: '\u957F\u65B9\u5F62',\n    draw_circle: '\u5708',\n    draw_line: '\u7EBF',\n  },\n  pl: {\n    draw_point: 'Punkt',\n    draw_polygon: 'Poligon',\n    draw_rectangle: 'Prostok\u0105t',\n    draw_circle: 'Okrag',\n    draw_line: 'Linia',\n  },\n  ko: {\n    draw_point: '\uC810',\n    draw_polygon: '\uB2E4\uAC01\uD615',\n    draw_rectangle: '\uC9C1\uC0AC\uAC01\uD615',\n    draw_circle: '\uC6D0',\n    draw_line: '\uC120',\n  },\n  fr: {\n    draw_point: 'Point',\n    draw_polygon: 'Polygone',\n    draw_rectangle: 'Rectangle',\n    draw_circle: 'Cercle',\n    draw_line: 'Ligne',\n  },\n  ja: {\n    draw_point: '\u30DD\u30A4\u30F3\u30C8',\n    draw_polygon: '\u30DD\u30EA\u30B4\u30F3',\n    draw_rectangle: '\u9577\u65B9\u5F62',\n    draw_circle: '\u4E38',\n    draw_line: '\u7DDA',\n  }\n})\n\nfunction point(layer) {\n\n  // Set the default values\n  layer.draw.point = Object.assign({\n    layer,\n    type: 'Point',\n  }, typeof layer.draw.point === 'object' && layer.draw.point || {})\n\n  // If a label is provided, use it, otherwise use the default\n  let label = layer.draw.point?.label || mapp.dictionary.draw_point\n\n  // Create the button\n  layer.draw.point.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => {\n\n      const btn = e.target\n\n      if (btn.classList.contains('active')) {\n\n        // Cancel draw interaction.\n        btn.classList.remove('active')\n        layer.mapview.interactions.highlight()\n        return;\n      }\n\n      btn.classList.add('active')\n\n      !layer.display && layer.show()\n\n      layer.draw.point.callback = feature => {\n\n        layer.draw.callback(feature, layer.draw.point)\n\n        btn.classList.remove('active')\n\n        delete layer.mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !layer.mapview.interaction && layer.mapview.interactions.highlight()\n        }, 400)\n\n      }\n\n      layer.mapview.interactions.draw(layer.draw.point)\n\n    }}>\n      ${label}`\n\n  return layer.draw.point.btn\n}\n\nfunction line(layer) {\n\n  // Set the default values\n  layer.draw.line = Object.assign({\n    layer,\n    type: 'LineString',\n  }, typeof layer.draw.line === 'object' && layer.draw.line || {})\n\n  // If a label is provided, use it, otherwise use the default\n  let label = layer.draw.line?.label || mapp.dictionary.draw_line\n\n\n  // Create the button\n  layer.draw.line.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => {\n\n      const btn = e.target\n\n      if (btn.classList.contains('active')) {\n\n        // Cancel draw interaction.\n        btn.classList.remove('active')\n        layer.mapview.interactions.highlight()\n        return;\n      }\n\n      btn.classList.add('active')\n\n      !layer.display && layer.show()\n\n      layer.draw.line.callback = feature => {\n\n        layer.draw.callback(feature, layer.draw.polygon)\n\n        btn.classList.remove('active')\n\n        delete layer.mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !layer.mapview.interaction && layer.mapview.interactions.highlight()\n        }, 400)\n\n      }\n\n      layer.mapview.interactions.draw(layer.draw.line)\n\n    }}>\n      ${label}`\n\n  return layer.draw.line.btn\n}\n\nfunction polygon(layer) {\n\n  // Set the default values\n  layer.draw.polygon = Object.assign({\n    layer,\n    type: 'Polygon',\n  }, typeof layer.draw.polygon === 'object' && layer.draw.polygon || {})\n\n  // If a label is provided, use it, otherwise use the default\n  let label = layer.draw.polygon?.label || mapp.dictionary.draw_polygon\n\n  // Create the button\n  layer.draw.polygon.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => {\n\n      const btn = e.target\n\n      if (btn.classList.contains('active')) {\n\n        // Cancel draw interaction.\n        btn.classList.remove('active')\n        layer.mapview.interactions.highlight()\n        return;\n      }\n\n      btn.classList.add('active')\n\n      !layer.display && layer.show()\n\n      layer.draw.polygon.callback = feature => {\n\n        layer.draw.callback(feature, layer.draw.polygon)\n\n        btn.classList.remove('active')\n\n        delete layer.mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !layer.mapview.interaction && layer.mapview.interactions.highlight()\n        }, 400)\n\n      }\n\n      layer.mapview.interactions.draw(layer.draw.polygon)\n\n    }}>\n      ${label}`\n\n  return layer.draw.polygon.btn\n}\n\nfunction rectangle(layer) {\n\n  // Set the default values\n  layer.draw.rectangle = Object.assign({\n    layer,\n    type: 'Circle',\n    geometryFunction: ol.interaction.Draw.createBox(),\n  }, typeof layer.draw.rectangle === 'object' && layer.draw.rectangle || {})\n\n  // If a label is provided, use it, otherwise use the default\n  let label = layer.draw.rectangle?.label || mapp.dictionary.draw_rectangle\n\n  // Create the button\n  layer.draw.rectangle.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => {\n\n      const btn = e.target\n\n      if (btn.classList.contains('active')) {\n\n        // Cancel draw interaction.\n        btn.classList.remove('active')\n        layer.mapview.interactions.highlight()\n        return;\n      }\n\n      btn.classList.add('active')\n\n      !layer.display && layer.show()\n\n      layer.draw.rectangle.callback = feature => {\n\n        layer.draw.callback(feature, layer.draw.rectangle)\n\n        btn.classList.remove('active')\n\n        delete layer.mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !layer.mapview.interaction && layer.mapview.interactions.highlight()\n        }, 400)\n\n      }\n\n      layer.mapview.interactions.draw(layer.draw.rectangle)\n\n    }}>\n      ${label}`\n\n  return layer.draw.rectangle.btn\n}\n\nfunction circle_2pt(layer) {\n\n  // Set the default values\n  layer.draw.circle_2pt = Object.assign({\n    layer,\n    type: 'Circle',\n    geometryFunction: ol.interaction.Draw.createRegularPolygon(33),\n  }, typeof layer.draw.circle_2pt === 'object' && layer.draw.circle_2pt || {})\n\n  // If a label is provided, use it, otherwise use the default\n  let label = layer.draw.circle_2pt?.label || mapp.dictionary.draw_circle_2pt\n\n  // Create the button\n  layer.draw.circle_2pt.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e => {\n\n      const btn = e.target\n\n      if (btn.classList.contains('active')) {\n\n        // Cancel draw interaction.\n        btn.classList.remove('active')\n        layer.mapview.interactions.highlight()\n        return;\n      }\n\n      btn.classList.add('active')\n\n      !layer.display && layer.show()\n\n      layer.draw.circle_2pt.callback = feature => {\n\n        layer.draw.callback(feature, layer.draw.circle_2pt)\n\n        btn.classList.remove('active')\n\n        delete layer.mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !layer.mapview.interaction && layer.mapview.interactions.highlight()\n        }, 400)\n\n      }\n\n      layer.mapview.interactions.draw(layer.draw.circle_2pt)\n\n    }}>\n      ${label}`\n\n  return layer.draw.circle_2pt.btn\n}\n\nfunction circle(layer) {\n\n  // Set the default values\n  layer.draw.circle = Object.assign({\n    layer,\n    type: 'Point',\n    units: 'meter',\n    radius: 100,\n    radiusMin: 1,\n    radiusMax: 1000,\n\n    // Methods to transform input radius.\n    unitConversion: {\n      meter: v => v,\n      km: v => v * 1000,\n      miles: v => v * 1609.34,\n      meter2: v => Math.sqrt(v / Math.PI),\n      km2: v => Math.sqrt(v * 1000000 / Math.PI),\n    },\n    geometryFunction: (coordinates) => {\n\n      const polygonCircular = new ol.geom.Polygon.circular(\n        ol.proj.toLonLat(coordinates),\n        layer.draw.circle.unitConversion[layer.draw.circle.units](layer.draw.circle.radius),\n        64\n      );\n\n      return polygonCircular.transform('EPSG:4326', 'EPSG:3857')\n    }\n  }, typeof layer.draw.circle === 'object' && layer.draw.circle || {})\n\n  // if label is provided, use it, otherwise use the default\n  let label = layer.draw.circle?.label || mapp.dictionary.draw_circle;\n\n  // Create the button\n  const unitsDropDown = mapp.utils.html.node`\n    <div style=\"display: grid; grid-template-columns: 100px 1fr; align-items: center;\">\n      <div style=\"grid-column: 1;\">Units</div>\n      <div style=\"grid-column: 2;\">\n        ${mapp.ui.elements.dropdown({\n    placeholder: layer.draw.circle.units,\n    entries: [\n      {\n        title: 'Meter',\n        option: 'meter',\n      },\n      {\n        title: 'KM',\n        option: 'km',\n      },\n      {\n        title: 'Miles',\n        option: 'miles',\n      },\n      {\n        title: 'Meter\u00B2',\n        option: 'meter2',\n      },\n      {\n        title: 'KM\u00B2',\n        option: 'km2',\n      },\n    ],\n    callback: (e, entry) => {\n      layer.draw.circle.units = entry.option;\n    }\n  })}`\n\n  const rangeSlider = mapp.ui.elements.slider({\n    label: 'Radius',\n    min: layer.draw.circle.radiusMin,\n    max: layer.draw.circle.radiusMax,\n    val: layer.draw.circle.radius,\n    callback: e => {\n      layer.draw.circle.radius = parseFloat(e.target.value)\n    }\n  })\n\n  layer.draw.circle.panel = mapp.utils.html.node`\n    <div class=\"panel flex-col\">\n      ${unitsDropDown}\n      ${rangeSlider}`\n\n  layer.draw.circle.btn = mapp.utils.html.node`\n  <button\n    class=\"flat wide bold primary-colour\"\n    onclick=${e => {\n\n      const btn = e.target\n\n      if (btn.classList.contains('active')) {\n\n        // Cancel draw interaction.\n        btn.classList.remove('active')\n        layer.mapview.interactions.highlight()\n        return;\n      }\n\n      // Expand the config drawer.\n      btn.previousElementSibling.classList.add('expanded')\n\n      btn.classList.add('active')\n\n      !layer.display && layer.show()\n\n      layer.draw.circle.callback = feature => {\n\n        layer.draw.callback(feature, layer.draw.circle)\n\n        btn.classList.remove('active')\n\n        delete layer.mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !layer.mapview.interaction && layer.mapview.interactions.highlight()\n        }, 400)\n\n      }\n\n      layer.mapview.interactions.draw(layer.draw.circle)\n\n    }}>${label}`\n\n  // Return the config element in a drawer with the interaction toggle button as sibling.\n  return mapp.utils.html.node`<div>\n    ${mapp.ui.elements.drawer({\n    header: mapp.utils.html`\n        <h3>${mapp.dictionary.circle_config}</h3>\n        <div class=\"mask-icon expander\"></div>`,\n    content: layer.draw.circle.panel})}\n    ${layer.draw.circle.btn}`\n}\n\nfunction locator(layer) {\n\n  layer.draw.locator = Object.assign({\n    layer,\n    type: 'Point',\n  }, typeof layer.draw.locator === 'object' && layer.draw.locator || {})\n\n  layer.draw.locator.btn = mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"  \n      onclick=${e => {\n\n      mapp.utils.getCurrentPosition(async (pos) => {\n\n        const location = {\n          layer: layer,\n          table: layer.tableCurrent(),\n          new: true\n        }\n\n        const coords = ol.proj.transform(\n          [parseFloat(pos.coords.longitude), parseFloat(pos.coords.latitude)],\n          'EPSG:4326', `EPSG:${layer.srid}`)\n\n        location.id = await mapp.utils.xhr({\n          method: 'POST',\n          url: `${layer.mapview.host}/api/location/new?` +\n            mapp.utils.paramString({\n              locale: layer.mapview.locale.key,\n              layer: layer.key,\n              table: location.table\n            }),\n          body: JSON.stringify({\n            [layer.geom]: {\n              type: 'Point',\n              coordinates: coords\n            }\n          })\n        })\n \n        mapp.location.get(location)\n      })\n\n    }}>${mapp.dictionary.draw_position}`\n\n  return layer.draw.locator.btn\n}", "export default (params) => {\n\n  params.selectedTitles = new Set()\n  params.selectedOptions = new Set()\n\n  // Create array of li elements for dropdown.\n  const ul = params.entries.map((entry) => {\n\n    // Create li element with click event.\n    const li = mapp.utils.html.node`<li onclick=${(e) => {\n\n      // Find the closest dropdown button.\n      const btn = e.target.closest('button.dropdown')\n\n      // Will collapse the dropdown if current state is 'active'.\n      !params.multi && btn.classList.toggle('active')\n\n      if (params.multi) {\n\n        // Will show select background if add to classlist.\n        e.target.classList.toggle('selected')\n\n        // Add or remove title and option value from sets.\n        if (e.target.classList.contains('selected')) {\n          params.selectedTitles.add(entry.title)\n          params.selectedOptions.add(entry.option)\n        } else {\n          params.selectedTitles.delete(entry.title)\n          params.selectedOptions.delete(entry.option)\n        }\n\n        // Set btn text to reflect selection or show placeholder.\n        btn.querySelector('[data-id=header-span]')\n          .textContent = params.selectedTitles.size && Array.from(params.selectedTitles).map(v => decodeURIComponent(v)).join(', ')\n          || params.span || params.placeholder\n\n        // Execute callback method and pass array of current selection.\n        params.callback?.(e, Array.from(params.selectedOptions));\n\n        return;\n      }\n\n      if (!params.keepPlaceholder) {\n\n        // Dropdown is not multi\n        btn.querySelector('[data-id=header-span]').textContent = entry.title;\n      }\n\n      params.callback?.(e, entry);\n\n    }}>${entry.title}`\n\n    // The entry is already selected during creation of dropdown.\n    if (entry.selected) {\n      li.classList.add('selected')\n      params.selectedTitles.add(entry.title)\n      params.selectedOptions.add(entry.option)\n    }\n\n    return li\n  })\n\n  return mapp.utils.html.node`\n    <button \n      data-id=${params.data_id || 'dropdown'}\n      class=\"dropdown\">\n      <div class=\"head\" onclick=${(e) => {\n\n        const bounds = e.target.getBoundingClientRect()\n\n        const viewport = document.body.getBoundingClientRect()\n\n        // Set the maxHeight of the ul based on the difference between the bottom and document.body height.\n        e.target.nextElementSibling.style.maxHeight = `${viewport.height - bounds.bottom}px`\n\n        e.target.nextElementSibling.style.width = `${e.target.offsetWidth}px`\n\n        // Collapse dropdown element and short circuit.\n        if (e.target.parentElement.classList.contains('active')) {\n          e.target.parentElement.classList.remove('active');\n          return;\n        }\n\n        // Collapse any expandxed dropdown elements in document.\n        document.querySelectorAll('button.dropdown')\n          .forEach((el) => el.classList.remove('active'));\n\n        // Expand this dropdown element.\n        e.target.parentElement.classList.add('active');\n\n      }}>\n      <span data-id=header-span>${\n\n        // join the selected titles if selectTitles set has a size.\n        params.selectedTitles.size && Array.from(params.selectedTitles).join(', ')\n\n        // header should be the span value.\n        || params.span\n\n        // use placeholder.\n        || params.placeholder}\n      </span>\n      <div class=\"icon\"></div>\n      </div>\n      <ul>${ul}`;\n}", "export default (params) => {\n\n  console.warn('mapp.ui.elements.dropdown should be used with the multi flag')\n\n  params.multi = true\n\n  return mapp.ui.elements.dropdown(params)\n}", "export default (params) => mapp.utils.html.node`\n    <button \n        data-id=${params.data_id || 'btnPanel'}\n        class=${`btn-panel ${params.class || ''}`}\n        style=${params.style || ''}\n        onclick=${e => {\n            e.target.classList.toggle('active')\n            params.callback(e)\n        }}>\n        <div class=\"header\">\n            <h3>${params.label}</h3>\n            <div\n                class=\"mask-icon\"\n                style=${`\n                    mask-image: url(\"${params.icon}\");\n                    -webkit-mask-image: url(\"${params.icon}\");\n                `}>\n            </div>\n        </div>\n        ${params.panel && mapp.utils.html`\n            <div class=\"panel\">${params.panel}`}`", "const xmlSerializer = new XMLSerializer()\n\nexport default (params) => {\n\n  // Create icon\n  if (params.svg || params.type || params.icon) {\n\n    // The icon style is an array\n    if (Array.isArray(params.icon)) {\n\n      // Filter out empties from the array.\n      params.icon = params.icon.filter(x => x)\n\n      // Create a canvas for the icon\n      const canvas = document.createElement('canvas')\n      canvas.width = params.width;\n      canvas.height = params.height;\n\n      let toLoad = params.icon.length++\n      function onImgLoad() {\n  \n        // All icon images must be loaded prior to drawing the image with the OL API\n        if (--toLoad) return;\n\n        // Define the vectorContext for the icon render.\n        const vectorContext = ol.render.toContext(canvas.getContext('2d'), {\n          size: [params.width, params.height],\n          pixelRatio: 1\n        });\n\n        // The anchor is defined by the first icon in the array.\n        let anchor = params.icon[0].anchor || [0.5, 0.5]\n\n        params.icon.forEach(icon => {\n\n          // The legendStyle must be set for each icon individually.\n          vectorContext.setStyle(icon.legendStyle);\n\n          // Draw a point geometry based on the canvas size and the anchor.\n          vectorContext.drawGeometry(new ol.geom.Point([canvas.width * anchor[0], canvas.height * anchor[1]]));\n        })\n\n      }\n\n      // The legendStyle should be defined on the first icon in the icon array.\n      let legendScale = params.icon[0].legendScale || 1\n\n      // Create a legendStyle for each icon in the array.\n      params.icon.forEach(icon => {\n\n        if (icon.legendStyle) {\n          onImgLoad()\n          return;\n        }\n\n        // The icon.url must be generated from the svgSymbols utility library.\n        if (icon.type && Object.hasOwn(mapp.utils.svgSymbols, icon.type)) {\n          icon.url = mapp.utils.svgSymbols[icon.type](icon)\n        }\n\n        try {\n\n          icon.legendStyle = new ol.style.Style({\n            image: new ol.style.Icon({\n              src: icon.svg || icon.url,\n              crossOrigin: 'anonymous',\n              scale: legendScale * (icon.scale || 1),\n              anchor: icon.legendAnchor || icon.anchor || [0.5, 0.5],\n            })\n          })\n\n        } catch(err) {\n\n          console.error(err)\n          console.log(icon)\n          return;\n        }\n\n        // Assign a load event for the image and load the image.\n\n        const image = icon.legendStyle.getImage()\n\n        image.getImage(1).addEventListener('load', onImgLoad);\n        image.load();\n      })\n\n      return canvas;\n    }\n\n    const inlineStyle = `\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: ${(params.width + 'px') || '100%'};\n      height: ${(params.height + 'px') || '100%'};\n      background-image:url(${params.icon?.svg || params.svg || params.icon?.url || params.url || mapp.utils.svgSymbols[params.icon?.type || params.type](params.icon || params)})`\n\n    return mapp.utils.html`<div style=${inlineStyle}>`\n  }\n\n  // Create line symbol\n  if (!params.fillColor) {\n\n    let path = `\n      M 0,${params.height / 2}\n      L ${params.width / 2},${params.height / 2}\n      ${params.width / 2},${params.height / 2}\n      ${params.width},${params.height / 2}`\n\n    let icon = mapp.utils.svg.node`\n      <svg height=${params.height} width=${params.width}>\n        <path d=${path}\n          fill=\"none\"\n          stroke=${params.strokeColor}\n          stroke-width=${params.strokeWidth || 1}/>`\n\n    let backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n\n    let inlineStyle = `\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: ${params.width}px;\n      height: ${params.height}px;\n      background-image: url(${backgroundImage});`\n\n    return mapp.utils.html`<div style=${inlineStyle}>`\n  }\n\n  // Create poly symbol.\n  if (params.fillColor) {\n\n    let icon = mapp.utils.svg.node`\n      <svg height=${params.height} width=${params.width}>\n        <rect\n          x=${params.strokeWidth || 1}\n          y=${params.strokeWidth || 1}\n          rx=\"4px\"\n          ry=\"4px\"\n          stroke-linejoin=\"round\"\n          width=${params.width - 2 * (params.strokeWidth || 1)}\n          height=${params.height - 2 * (params.strokeWidth || 1)}\n          fill=${params.fillColor}\n          fill-opacity=${params.fillOpacity || 1}\n          stroke=${params.strokeColor}\n          stroke-width=${params.strokeWidth || 1}>`\n\n    let backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n\n    let inlineStyle = `\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: ${params.width}px;\n      height: ${params.height}px;\n      background-image: url(${backgroundImage});`\n\n    return mapp.utils.html`<div style=${inlineStyle}>`\n  }\n\n}", "export default (params) => {\n  // Ensure the target is an HTMLElement before proceeding\n  if (!(params.target instanceof HTMLElement)) return;\n\n  // Construct the modal element and append it to the target element\n  params.modal = params.target.appendChild(mapp.utils.html.node`\n    <div \n      style=\"top: 10px; right: 10px; overflow: auto;\"\n      data-id=${params.data_id || 'modal'}\n      class=\"modal\">\n      <div class=\"header bold\">\n        <span>${params.header}</span>\n        <button\n          data-id=close\n          class=\"mask-icon close\"\n          onclick=${closeModal}>\n      </div>\n      ${params.content}`);\n\n  //set the width and height of the modal from where it gets defined.    \n  params.modal.style.width = params.width || '50%';\n  params.modal.style.height = params.height || '50%';\n\n  // Function to handle the modal closure\n  function closeModal(e) {\n    e.target.closest('.modal').remove();\n    params?.close?.(e);\n  }\n\n  // Function to add event listeners for drag functionality\n  function addEventListeners() {\n    params.modal.addEventListener('mousedown', handleStartEvent);\n    params.modal.addEventListener('touchstart', handleStartEvent);\n  }\n\n  // Function to handle the start of a drag event, setting up the necessary event listeners for moving and ending the drag\n  function handleStartEvent(e) {\n\n    if (e.target.matches('input, textarea')) return;\n\n    params.modal.style.cursor = 'grabbing';\n\n    const eventsMap = {\n      mousedown: { move: 'mousemove', end: 'mouseup' },\n      touchstart: { move: 'touchmove', end: 'touchend' },\n    };\n\n    const { move: moveEvent, end: endEvent } = eventsMap[e.type];\n\n    window.addEventListener(moveEvent, shiftEvent);\n    window.addEventListener(endEvent, stopShift);\n  }\n\n\n  // Function to end the drag event, resetting cursor style and removing the move and end event listeners\n  function stopShift() {\n    params.modal.style.cursor = 'grab';\n\n    x = undefined;\n    y = undefined;\n    window.removeEventListener('mousemove', shiftEvent);\n    window.removeEventListener('touchmove', shiftEvent);\n    window.removeEventListener('mouseup', stopShift);\n    window.removeEventListener('touchend', stopShift);\n  }\n\n  // Variables to hold the current position during a drag event\n  let x, y;\n\n  // Function to handle the move event during a drag, updating the position of the modal while keeping it within the window bounds\n  function shiftEvent(e) {\n    // Retrieve the current touch or mouse position\n    const pageX = (e.touches && e.touches[0].pageX) || e.pageX;\n    const pageY = (e.touches && e.touches[0].pageY) || e.pageY;\n\n    // If x and y are not defined, it is the first move event; store the current positions and exit\n    if (!x || !y) {\n      x = pageX;\n      y = pageY;\n      return;\n    }\n\n    // Calculate the new position of the modal based on the drag distance\n    let newRight = parseInt(params.modal.style.right) + (x - pageX);\n    let newTop = parseInt(params.modal.style.top) + (pageY - y);\n\n    // Retrieve the dimensions of the entire HTML page\n    const targetBounds = document.documentElement.getBoundingClientRect();\n\n    // Calculate the central anchor point of the modal (center in X and Y coordinates)\n    const modalCenterX = window.innerWidth - newRight - (params.modal.offsetWidth / 2);\n    const modalCenterY = newTop + (params.modal.offsetHeight / 2);\n\n    // If the central anchor point of the modal goes outside the HTML page's boundaries, prevent the move\n    if (\n      modalCenterX < targetBounds.left ||\n      modalCenterX > targetBounds.right ||\n      modalCenterY < targetBounds.top ||\n      modalCenterY > targetBounds.bottom\n    ) {\n      return;\n    }\n\n    // If within boundaries, update the modal's position based on the drag\n    params.modal.style.right = newRight + 'px';\n    params.modal.style.top = newTop + 'px';\n\n    // Store the current positions for use in the next move event\n    x = pageX;\n    y = pageY;\n  }\n\n  // Initialize the event listeners when the module is executed\n  addEventListeners();\n};", "export default params => {\n\n  return mapp.utils.html.node`\n    <div\n      role=\"group\"\n      data-id=${params.data_id || 'slider'}\n      title=${params.title || ''}\n      class=\"input-range single\"\n      style=${`--min: ${params.min}; --max: ${params.max}; --a: ${params.val}; ${params.style || ''}`}>\n      <div class=\"label-row\">\n        <label>${params.label}</label>\n        <input data-id=\"a\"\n          type=\"number\"\n          min=${params.min}\n          max=${params.max}\n          step=${params.step || 1}\n          value=${params.val}\n          oninput=${onInput}></input>\n      </div>\n      <div class=\"track-bg\"></div>\n      <input data-id=\"a\"\n        type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step || 1}\n        value=${params.val}\n        oninput=${onInput}>`\n\n  function onInput(e) {\n\n    let val = parseFloat(e.target.value)\n\n    if (isNaN(val) || val < params.min) val = params.min\n\n    const group = e.target.closest('.input-range')\n\n    if (val > params.max) {\n      group.style.setProperty(`--max`, val)\n      group.querySelectorAll('input').forEach(el => el.max = val)\n    }\n\n    group.style.setProperty(`--${e.target.dataset.id}`, val)\n\n    group.querySelectorAll('input')\n      .forEach(el => {\n        if (el.dataset.id != e.target.dataset.id) return;\n        if (el == e.target) return;\n        el.value = val\n      })\n\n    params.callback && params.callback(e)\n  }\n\n}", "export default params => {\n\n  const element = mapp.utils.html.node`\n    <div\n      role=\"group\"\n      class=\"input-range multi\"\n      style=${`\n        --min: ${params.min};\n        --max: ${params.max};\n        --a: ${params.val_a};\n        --b: ${params.val_b};`}>\n      <div \n        class=\"label-row\">\n        <label>${params.label_a || 'A'}\n          <input data-id=\"a\" type=\"number\"\n            value=${params.val_a}\n            min=${params.min}\n            max=${params.max}\n            style=\"--c: var(--a)\"\n            oninput=${onInput}></input>\n        </label>\n        <label>${params.label_b || 'B'}\n          <input data-id=\"b\" type=\"number\"\n            value=${params.val_b}\n            min=${params.min}\n            max=${params.max}\n            style=\"--c: var(--b)\"\n            oninput=${onInput}></input>\n        </label>\n      </div>\n      <div class=\"track-bg\"></div>\n      <input data-id=\"a\" type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step || 1}\n        value=${params.val_a}\n        oninput=${onInput}/>\n      <input data-id=\"b\" type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step || 1}\n        value=${params.val_b}\n        oninput=${onInput}/>`\n\n  function onInput(e) {\n\n    e.target.value = e.target.value > params.max ? params.max : e.target.value;\n\n    element.style.setProperty(`--${e.target.dataset.id}`, e.target.value)\n    \n    element.querySelectorAll('input')\n      .forEach(el => {\n        if (el.dataset.id != e.target.dataset.id) return;\n        if (el == e.target) return;\n        el.value = e.target.value\n      })\n\n    e.target.dataset.id === 'a'\n      && typeof params.callback_a === 'function'\n      && params.callback_a(e)\n\n    e.target.dataset.id === 'b'\n      && typeof params.callback_b === 'function'\n      && params.callback_b(e)      \n\n  }\n\n  return element\n}", "export default {\n  viewport,\n  layerfilter,\n  download_json,\n  download_csv,\n  clear_table_filters,\n}\n\nfunction viewport(dataview) {\n\n  return mapp.utils.html`\n    <button class=${`flat ${dataview.viewport && 'active' ||''}`}\n      onclick=${e => {\n        e.target.classList.toggle('active')\n        dataview.viewport = !dataview.viewport\n        dataview.update()\n      }}>Viewport`\n\n}\n\nfunction layerfilter(dataview) {\n\n  return mapp.utils.html`\n    <button class=${`flat ${dataview.queryparams.filter && 'active' ||''}`}\n      onclick=${e => {\n        e.target.classList.toggle('active')\n        dataview.queryparams.filter = !dataview.queryparams.filter\n        dataview.update()\n      }}>Layer Filter`\n\n}\n\nfunction download_json(dataview) {\n\n  return mapp.utils.html`\n    <button class=\"flat\"\n      onclick=${() => {\n        dataview.Tabulator.download('json', `${dataview.title || 'table'}.json`)\n      }}>Export as JSON`\n\n}\n\nfunction download_csv(dataview) {\n\n  return mapp.utils.html`\n    <button class=\"flat\"\n      onclick=${() => {\n\n        // The data array must have a length\n        if (!dataview.data.length) return;\n\n        // download_csv is an object with \n        if (dataview.toolbar.download_csv instanceof Object) {\n\n          // Parse data from download_csv.fields\n          const data = dataview.data.map(record => {\n\n            // Check whether string values should be escaped.\n            return dataview.toolbar.download_csv.fields.map(field => (record[field.field] && field.string) ?\n              `\"${record[field.field].replace(`\"`, `\\\\\"`)}\"` : record[field.field])\n          })\n\n          // Unshift the header row with either the title or field names.\n          data.unshift(dataview.toolbar.download_csv.fields.map(field => field.title || field.field))\n\n          mapp.utils.csvDownload(data, dataview.toolbar.download_csv)\n          return;\n        }\n        \n        // Use Tabulator download method\n        dataview.Tabulator.download('csv', `${dataview.title || 'table'}.csv`)\n\n      }}>Download as CSV`\n\n}\n\nfunction clear_table_filters(dataview) {\n\n  return mapp.utils.html`\n    <button class=\"flat\"\n      onclick=${() => {\n        dataview.Tabulator.clearFilter(true);\n      }}>Clear Filters`;\n\n}", "import card from './card.mjs'\n\nimport chkbox from './chkbox.mjs'\n\nimport contextMenu from './contextMenu.mjs'\n\nimport drawer from './drawer.mjs'\n\nimport drawing from './drawing.mjs'\n\nimport dropdown from './dropdown.mjs'\n\nimport dropdown_multi from './dropdown_multi.mjs'\n\nimport btnPanel from './btnPanel.mjs'\n\nimport legendIcon from './legendIcon.mjs'\n\nimport modal from './modal.mjs'\n\nimport slider from './slider.mjs'\n\nimport slider_ab from './slider_ab.mjs'\n\nimport toolbar_el from './toolbar_el.mjs'\n\nexport default {\n  btnPanel,\n  card,\n  chkbox,\n  contextMenu,\n  drawer,\n  drawing,\n  dropdown,\n  dropdown_multi,\n  legendIcon,\n  modal,\n  slider,\n  slider_ab,\n  toolbar_el\n}", "let promise, Chart = null\n\nasync function chart(canvas, options) {\n\n  // Assign promise to load ChartJS library if null.\n  promise ??= new Promise(resolve => {\n\n    // Assign from window if Chart library is loaded from link\n    if (window.Chart) {\n\n      Chart = window.Chart\n\n      resolve()\n  \n      return\n    }\n\n    // Import Chart and plugins.\n    Promise\n      .all([\n        import('https://cdn.jsdelivr.net/npm/chart.js/+esm'),\n        import('https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels/+esm'),\n        import('https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation/+esm')\n\n      ])\n      .then(imports => {\n\n        // Register imports\n        imports[0].Chart.register(...imports[0].registerables);\n  \n        imports[0].Chart.register(imports[1].default);\n\n        imports[0].Chart.register(imports[2].default); \n  \n        Chart = imports[0].Chart\n\n        resolve()\n      })\n      .catch(error => {\n        console.error(error.message)\n        alert('Failed to load Chart.js library. Please reload the browser.')\n      })\n  \n  })\n\n  // Await promise to load chart library.\n  await promise\n\n  // Return ChartJS creator method.\n  return new Chart(canvas, options);\n}\n\nexport default async function(_this) {\n\n  // Charts most be rendered into a canvas type element.\n  const canvas = _this.target.appendChild(mapp.utils.html.node`<canvas>`);\n\n  // Await initialisation of ChartJS object.\n  _this.ChartJS = await chart(\n    canvas,\n    mapp.utils.merge(\n      {\n        type: 'bar',\n        options: {\n          plugins: {\n            legend: {\n              display: false,\n            },\n            datalabels: {\n              display: false,\n            },\n          },\n        },\n      },\n      _this.chart\n    )\n  );\n\n  // Set chart data\n  _this.setData = (data) => {\n\n    // data is falsy\n    if (_this.noDataMask && !data) {\n\n      _this.noDataMask = typeof _this.noDataMask === 'string' ? _this.noDataMask : 'No Data';\n\n      // Remove display from target\n      _this.target.style.display = 'none';\n\n      // Create _this.mask if undefined.\n      _this.mask ??= mapp.utils.html.node`<div class=\"dataview-mask\">${_this.noDataMask}`\n      \n      // Append _this.mask to the target parent.\n      _this.target.parentElement?.append(_this.mask)\n\n    } else {\n\n      // Remove _this.mask from dom.\n      _this.mask?.remove();\n\n      // Set dataview target to display as block.\n      _this.target.style.display = 'block';\n    }\n\n    // Create a dataset with empty data array if data is undefined.\n    data ??= { datasets: [{ data: [] }] };\n\n    // Set data in datasets array if no datasets are defined in data.\n    data.datasets ??= [{ data }]\n\n    _this.data = data;\n\n    // Assign datasets from chart object to data.datasets.\n    _this.chart.datasets?.length && data.datasets.forEach((dataset, i) =>\n      Object.assign(dataset, _this.chart.datasets[i]));\n\n    // Assign data.labels from chart if nullish.\n    data.labels ??= _this.chart.labels;\n\n    // Set data to chartjs object.\n    _this.ChartJS.data = data;\n\n    // Update the chartjs object.\n    _this.ChartJS.update();\n\n    // Execute setDataCallback method if defined as function.\n    typeof _this.setDataCallback === 'function' && _this.setDataCallback(_this);\n  };\n\n  // Set _this.data if provided.\n  _this.data && _this.setData(_this.data)\n}", "let promise, Tabulator = null\n\nasync function tabulator() {\n\n  // Create promise to load Tabulator library if null.\n  promise ??= new Promise(resolve => {\n\n    // Assign from window if Tabulator library is loaded from link\n    if (window.Tabulator) {\n\n      Tabulator = window.Tabulator\n\n      resolve()\n\n      return\n    }\n\n    // Append the tabulator css to the document head.\n    document.getElementsByTagName('HEAD')[0].append(mapp.utils.html.node`\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/tabulator-tables@5.5.2/dist/css/tabulator.min.css\"/>`);\n\n    // Import Chart and plugins.\n    Promise\n      .all([\n        import('https://unpkg.com/tabulator-tables@5.5.2/dist/js/tabulator_esm.min.js')\n      ])\n      .then(imports => {\n\n        Tabulator = imports[0].TabulatorFull\n\n        resolve()\n      })\n      .catch(error => {\n        console.error(error.message)\n        alert('Failed to load Tabulator library. Please reload the browser.')\n      })\n\n  })\n\n  await promise\n\n  // Built Tabulator instance\n  const Table = new Tabulator(...arguments);\n\n  // Await for the Tabulator table instance to be built in Promise\n  await new Promise(resolve => Table.on('tableBuilt', resolve))\n\n  // Find ul_parents that are positioned fixed in table header.\n  const ul_parents = Table.element.querySelectorAll('.ul-parent')\n\n  // Adjust fixed dropdowns on scroll.\n  ul_parents.length && Table.on(\"scrollHorizontal\", left => {\n\n    // Get the table element bounds.\n    const table_bounds = Table.element.getBoundingClientRect()\n\n    for (const ul_parent of ul_parents) {\n\n      // Get the ul_parent bounds.\n      const header_bounds = ul_parent.getBoundingClientRect()\n\n      // Get ul element itself\n      const ul = ul_parent.querySelector('ul')\n\n      // The ul may not exist if populated from a query.\n      if (ul) {\n\n        // Set fixed element to be the difference of the parent and table bounds on scroll.\n        ul.style.left = `${header_bounds.left - table_bounds.left}px`\n      }\n\n    }\n  });\n\n  // Return built Tabulator instance.\n  return Table\n}\n\nexport default async function (_this) {\n\n  // Apply tabulator column methods\n  mapp.ui.utils.tabulator.columns(_this)\n\n  // Await initialisation of Tabulator object.\n  _this.Tabulator = await tabulator(\n    _this.target,\n    {\n      //renderVertical: 'basic',\n      //renderHorizontal: 'virtual',\n      selectable: false,\n      //data: _this.data,\n      ..._this.table\n    });\n\n  // Table will not automatically redraw on resize.\n  if (_this.table.autoResize === false) {\n    let debounce = 0;\n\n    // debounce resizeOberserver by 800.\n    _this.resizeObserver = new ResizeObserver(() => {\n      clearTimeout(debounce);\n      debounce = setTimeout(() => {\n        _this.target.offsetHeight > 9 && _this.Tabulator.redraw();\n      }, 800);\n    });\n\n    _this.resizeObserver.observe(_this.target);\n  }\n\n  // Assign tabulator events from object.\n  events(_this)\n\n  // Set Tabulator data.\n  _this.setData = setData\n\n  // Set _this.data if provided.\n  _this.data && _this.setData(_this.data)\n}\n\nfunction events(_this) {\n\n  if (typeof _this.events !== 'object') return;\n\n  Object.entries(_this.events).forEach((event) => {\n\n    // Get event method from tabulator utils.\n    if (typeof mapp.ui.utils.tabulator[event[1].util || event[1]] === 'function') {\n\n      _this.Tabulator.on(event[0],\n        mapp.ui.utils.tabulator[event[1].util || event[1]](_this, event[1]));\n      return;\n    }\n\n    // Shortcircuit if events object value is not a function.\n    if (typeof event[1] !== 'function') return;\n\n    // Key is event name. Value is the event function.\n    _this.Tabulator.on(event[0], event[1]);\n  });\n}\n\nfunction setData(data) {\n\n  if (this.noDataMask && !data) {\n\n    this.noDataMask = typeof this.noDataMask === 'string' ? this.noDataMask : 'No Data';\n\n    // Remove display from target\n    this.target.style.display = 'none';\n\n    // Create this.mask if undefined.\n    this.mask ??= mapp.utils.html.node`<div class=\"dataview-mask\">${this.noDataMask}`\n\n    // Append this.mask to the target parent.\n    this.target.parentElement?.append(this.mask)\n\n  } else {\n\n    // Remove this.mask from dom.\n    this.mask?.remove();\n\n    // Set dataview target to display as block.\n    this.target.style.display = 'block';\n  }\n\n  // Set data as empty array if nullish.\n  data ??= []\n\n  // Make an array of data if not already an array.\n  data &&= Array.isArray(data) ? data : [data];\n\n  // Set data to the tabulator object\n  this.Tabulator.setData(data);\n\n  this.data = data;\n\n  // Execute setDataCallback method if defined as function.\n  typeof this.setDataCallback === 'function' && this.setDataCallback(_this);\n};", "export default {\n  headerFilter: {\n    like,\n    numeric,\n    set,\n    date: dateFilter\n  },\n  formatter: {\n    toLocalString,\n    date\n  },\n  select,\n  columns\n}\n\nfunction columns(_this) {\n\n  // Check for custom column methods.\n  _this.table.columns.forEach((col) => chkCol(col));\n\n  function chkCol(col) {\n\n    // Column is an array of sub columns.\n    if (Array.isArray(col.columns)) {\n\n      col.columns.forEach(col => chkCol(col))\n      return;\n    }\n\n    // Check for custom headerFilter matched in the ui utils.\n    if (typeof col.headerFilter === 'string'\n      && mapp.ui.utils.tabulator.headerFilter[col.headerFilter]) {\n\n      // Assign custom headerFilter from ui utils.\n      col.headerFilter =\n        mapp.ui.utils.tabulator.headerFilter[col.headerFilter](_this);\n    }\n\n    // Check for custom formatter in the ui utils.\n    if (typeof col.formatter === 'string'\n      && mapp.ui.utils.tabulator.formatter[col.formatter]) {\n\n      // Assign custom formatter from ui utils.\n      col.formatter =\n        mapp.ui.utils.tabulator.formatter[col.formatter](_this);\n    }\n  }\n}\n\nfunction like(_this) {\n  \n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n    const field = cell.getColumn().getField()\n\n    function likeFilter(e) {\n\n      // Set layer filter and reload layer and table data.\n      if (headerFilterParams.layerFilter) {\n\n        if (e.target.value.length) {\n\n          // Set filter\n          _this.layer.filter.current[field] = {\n            [headerFilterParams.type || 'like']: encodeURIComponent(e.target.value)\n          }\n\n        } else { \n\n          // Remove filter\n          delete _this.layer.filter.current[field];\n        }\n\n        // Reload layer.\n        _this.layer.reload();\n\n        // Reload table.\n        _this.update();\n\n        return;\n      }\n\n      // Get filter for that field if exists\n      const likeFilter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == 'like')\n\n      // Remove existing like filter\n      if (likeFilter) {\n        _this.Tabulator.removeFilter(...Object.values(likeFilter))\n\n        // Remove layer filter\n        headerFilterParams.layerFilter && delete _this.layer.filter.current[field]\n      }\n\n      const filters = _this.Tabulator.getFilters()\n\n      if (e.target.value.length) {\n\n        // add like filter to existing filters.\n        filters.push({ field: field, type: 'like', value: e.target.value })\n\n        // apply filters to table.\n        _this.Tabulator.setFilter(filters)\n      }\n    }\n\n    return mapp.utils.html.node`<span>\n      <input\n        type=\"text\"\n        placeholder=\"Filter\"\n        oninput=${likeFilter}\n        onblur=${likeFilter}>`\n\n  }\n}\n\nfunction numeric(_this) {\n\n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n    // Select the field\n    const field = cell.getColumn().getField()\n\n    const inputMin = mapp.utils.html`\n      <input \n        type=\"number\" \n        placeholder=\"Min\"\n        oninput=${minEvent}\n        onchange=${minEvent}\n        onblur=${minEvent}>`\n\n    function minEvent(e) {\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == '>=')\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layerFilter && delete _this.layer.filter.current[field]\n      }\n\n      // Add filter for valid target value.\n      if (Number(e.target.value)) {\n        _this.Tabulator.addFilter(field, '>=', Number(e.target.value))\n\n        // Set layer filter\n        if (headerFilterParams.layerFilter) {\n          _this.layer.filter.current[field] = Object.assign(_this.layer.filter.current[field] || {}, {gte:Number(e.target.value)})\n          _this.layer.reload();\n          _this.update();  \n        }\n      }\n    }\n\n    const inputMax = mapp.utils.html`\n      <input \n        type=\"number\" \n        placeholder=\"Max\" \n        oninput=${maxEvent}\n        onchange=${maxEvent}\n        onblur=${maxEvent}>`\n\n    function maxEvent(e) {\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == '<=')\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layerFilter && delete _this.layer.filter.current[field]\n      }\n\n      // Add filter for valid target value.\n      if (Number(e.target.value)) {\n        _this.Tabulator.addFilter(field, '<=', Number(e.target.value))\n\n        // Set layer filter\n        if (headerFilterParams.layerFilter) {\n          _this.layer.filter.current[field] = Object.assign(_this.layer.filter.current[field] || {}, { lte: Number(e.target.value) })\n          _this.layer.reload();\n          _this.update();\n        }\n      }\n    }\n\n    // flex container must be encapsulated since tabulator will strip attribute from most senior item returned.\n    return mapp.utils.html.node`\n      <div><div style=\"display: flex;\">${inputMin}${inputMax}`\n\n  }\n}\n\nfunction dateFilter(_this) {\n\n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n    // Select the field\n    const field = cell.getColumn().getField()\n\n    const inputMin = mapp.utils.html`\n    <input\n      type=\"date\"\n      onchange=${minEvent}>`;\n\n    function minEvent(e) {\n\n      const val = new Date(e.target.value).getTime() / 1000\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == '>=')\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layerFilter && delete _this.layer.filter.current[field]\n      }\n\n      // Add filter for valid target value.\n      if (val) {\n        _this.Tabulator.addFilter(field, '>=', val)\n\n        // Set layer filter\n        if (headerFilterParams.layerFilter) {\n          _this.layer.filter.current[field] = Object.assign(_this.layer.filter.current[field] || {}, { gte: val })\n          _this.layer.reload();\n          _this.update();  \n        }\n      }\n    }\n\n    const inputMax = mapp.utils.html`\n    <input\n      type=\"date\"\n      onchange=${maxEvent}>`;\n\n    function maxEvent(e) {\n\n      const val = new Date(e.target.value).getTime() / 1000\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == '<=')\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layerFilter && delete _this.layer.filter.current[field]\n      }\n\n      // Add filter for valid target value.\n      if (val) {\n        _this.Tabulator.addFilter(field, '<=', val)\n\n        // Set layer filter\n        if (headerFilterParams.layerFilter) {\n          _this.layer.filter.current[field] = Object.assign(_this.layer.filter.current[field] || {}, { lte: val })\n          _this.layer.reload();\n          _this.update();\n        }\n      }\n    }\n\n    // flex container must be encapsulated since tabulator will strip attribute from most senior item returned.\n    return mapp.utils.html.node`\n      <div><div style=\"display: flex;\">${inputMin}${inputMax}`\n\n  }\n}\n\nfunction set(_this) {\n\n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n    // Make 'in' the default type for set headerfilter\n    headerFilterParams.type = headerFilterParams.type || 'in'\n\n    const field = cell.getColumn().getField()\n\n    // Create dropdown for render.\n    let dropdown = mapp.utils.html.node`<div class=\"ul-parent\">`\n\n    if (headerFilterParams.distinct) {\n\n      // Query distinct field values.\n      mapp.utils.xhr(`${_this.layer.mapview.host}/api/query?` +\n        mapp.utils.paramString({\n          template: 'distinct_values',\n          dbs: _this.layer.dbs,\n          table: _this.layer.tableCurrent(),\n          field\n        })).then(response => {\n\n          // Render dropdown with distinct values from response.\n          mapp.utils.render(dropdown, mapp.ui.elements.dropdown({\n            multi: true,\n            placeholder: headerFilterParams.placeholder || 'Set filter',\n            entries: response.map(row => ({\n              title: row[field],\n              option: row[field],\n              //selected: chkSet.has(val)\n            })),\n            callback \n          }))\n        })\n\n      return dropdown\n    }\n\n    mapp.utils.render(dropdown, mapp.ui.elements.dropdown({\n      multi: true,\n      placeholder: headerFilterParams.placeholder || 'Set filter',\n      entries: headerFilterParams.options.map(option => ({\n        title: option,\n        option: option,\n        //selected: chkSet.has(val)\n      })),\n      callback \n    }))\n\n    return dropdown\n\n    async function callback(e, options) {\n\n      if (headerFilterParams.layerFilter) {\n\n        // Create current filter for the layer.\n        options.length\n          && Object.assign(_this.layer.filter.current, {\n            [field]: { [headerFilterParams.type]: options }\n          })\n\n          // Delete current filter for field if options is falsy.\n          || delete _this.layer.filter.current[field]\n\n        _this.layer.reload()\n        _this.update()\n\n        return;\n      }\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field)\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layerFilter && delete _this.layer.filter.current[field]\n      }\n\n      options.length && _this.Tabulator.addFilter(field, 'in', options)\n    }\n  }\n}\n\nfunction select(_this, params = {}) {\n\n  return (e, row) => {\n\n    // Get the row data\n    const rowData = row.getData();\n\n    const layer = _this.layer?.mapview.layers[params.layer] || _this.layer\n\n    // Return without a layer to select from.\n    if (!layer) return;\n\n    // Return without the layer qID in rowData.\n    if (!rowData[layer.qID]) return;\n\n    // Get the location using the layer and qID which will select the location in the location panel \n    mapp.location.get({\n      layer: layer,\n      id: rowData[layer.qID],\n    })\n\n      // Zoom to the location if the params flag is set.\n      .then(location => {\n\n        // Deselection will return the location as undefined.\n        if (!location) return;\n        \n        params.zoomToLocation && location.flyTo()\n      });\n\n    // Remove selection colour on row element.\n    row.deselect();\n  }\n}\n\nfunction toLocalString(_this) {\n\n  return (cell, formatterParams, onRendered) => {\n\n    let val = parseFloat(cell.getValue())\n\n    if (isNaN(val)) return;\n\n    return val.toLocaleString(formatterParams?.locale || 'en-GB', formatterParams?.options)\n  }\n}\n\nfunction date(_this) {\n\n  return (cell, formatterParams, onRendered) => {\n\n    let val = parseInt(cell.getValue())\n\n    if (isNaN(val)) return;\n\n    let str = new Date(val * 1000).toLocaleString(formatterParams?.locale || 'en-GB', formatterParams?.options)\n\n    return str\n  }\n}", "const idle = {\n  idle: 600,\n}\n\nexport default params => {\n\n  Object.assign(idle, params)\n\n  if (idle.idle === 0) return;\n\n  // Define window events that reset the lock timeout.\n  window.onload = resetTimer;\n  window.onmousemove = resetTimer;\n  window.onmousedown = resetTimer;\n  window.ontouchstart = resetTimer;\n  window.onclick = resetTimer;\n  window.onkeypress = resetTimer;\n  resetTimer()\n  renewToken()\n}\n\n// Reset idle timeout\nfunction resetTimer() {\n\n  if (idle.locked) return\n\n  idle.timeout && clearTimeout(idle.timeout);\n\n  idle.timeout = setTimeout(lock, idle.idle * 1000)\n}\n\n// Lock interface\nfunction lock() {\n\n  idle.locked = true\n\n  // Do not renew cookie when interface is locked.\n  idle.renew && clearTimeout(idle.renew)\n\n  // Destroy cookie.\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', `${idle.host}/api/user/cookie?destroy=true`)\n\n  // Reload location once cookie has been removed.\n  xhr.onload = e => location.reload()\n  xhr.send()\n}\n\n// Renew cookie\nfunction renewToken() {\n\n  // Renew token after idle minus 20 seconds.\n  idle.renew = setTimeout(cookie, (idle.idle - 20) * 1000)\n\n  function cookie() {\n\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', `${idle.host}/api/user/cookie?renew=true`)\n    xhr.onload = e => {\n\n      // Lock interface if cookie renewal fails.\n      if (e.target.status === 401) return lock()\n\n      // Re-call method to renew token.\n      renewToken()\n    }\n\n    xhr.send()\n  }\n}", "export default e => {\n\n  document.body.append(mapp.utils.html.node`\n    <div class=\"interface-mask\">\n      <div class=\"bg-image\" style=${`background-image:url(${e.target.src})`}>\n      <button class=\"btn-close mask-icon close\"\n        onclick=${e => e.target.parentElement.parentElement.remove()}>`);\n\n}", "export default (params) => {\n\n  params.target.addEventListener('mousedown', (e) => {\n    e.preventDefault();\n    document.body.style.cursor = 'grabbing';\n    window.addEventListener('mousemove', params.resizeEvent);\n    window.addEventListener('mouseup', stopResize);\n  });\n\n  params.target.addEventListener(\n    'touchstart',\n    (e) => {\n      e.preventDefault();\n      window.addEventListener('touchmove', params.resizeEvent);\n      window.addEventListener('touchend', stopResize);\n    },\n    {\n      passive: true,\n    }\n  );\n\n  // Remove vertical resize events.\n  function stopResize() {\n    document.body.style.cursor = 'auto';\n    window.removeEventListener('mousemove', params.resizeEvent);\n    window.removeEventListener('touchmove', params.resizeEvent);\n    window.removeEventListener('mouseup', stopResize);\n    window.removeEventListener('touchend', stopResize);\n  }\n}", "import Chart from './Chart.mjs'\n\nimport Tabulator from './Tabulator.mjs'\n\nimport tabulator from './tabulatorUtils.mjs'\n\nimport idleLogout from './idleLogout.mjs'\n\nimport imagePreview from './imagePreview.mjs'\n\nimport resizeHandler from './resizeHandler.mjs'\n\nexport default {\n  Chart,\n  Tabulator,\n  tabulator,\n  idleLogout,\n  imagePreview,\n  resizeHandler,\n}", "export default gazetteer => {\n\n  gazetteer.input = mapp.utils.html.node`<input \n    type=\"search\" \n    placeholder=${gazetteer.placeholder}>`\n\n  gazetteer.list = mapp.utils.html.node`<ul>`\n\n  gazetteer.node = mapp.utils.html.node`<div class=\"dropdown\">\n    ${gazetteer.input}\n    ${gazetteer.list}`\n\n  gazetteer.target.append(gazetteer.node)\n\n  gazetteer.input.addEventListener('input', search)\n\n  gazetteer.input.addEventListener('focus', search)\n\n  function search(e) {\n\n    // Clear results\n    gazetteer.list.innerHTML = ''\n\n    // Only search if value has length.\n    if (!e.target.value.length) return;\n\n    // Get possible coordinates from input.\n    let ll = e.target.value.split(',').map(parseFloat)\n\n    // Check whether coordinates are float values.\n    if (ll.length === 2 && ll.every(n => !isNaN(n))) {\n\n      gazetteer.list.appendChild(mapp.utils.html.node`\n          <li \n            onclick=${e => {\n\n          mapp.utils.gazetteer.getLocation({\n            label: `Latitude:${ll[0]}, Longitude:${ll[1]}`,\n            source: 'Coordinates',\n            lng: ll[1],\n            lat: ll[0]\n          })\n\n        }}><span>Latitutde:${ll[0]}, Longitude:${ll[1]}`)\n\n      // Do not search if coordinates are provided.\n      return;\n    }\n\n    // An external gazetteer provider is requested\n    if (gazetteer.provider) {\n\n      // Check whether the gazetteer provider is available.\n      if (!Object.hasOwn(mapp.utils.gazetteer, gazetteer.provider)) {\n\n        console.warn('Requested gazetteer service not available');\n      } else {\n\n        // Query the external gazetteer provider\n        mapp.utils.gazetteer[gazetteer.provider](e.target.value, gazetteer)\n      }\n    }\n\n    // Request datasets gazetteer\n    mapp.utils.gazetteer.datasets(e.target.value, gazetteer)\n  }\n  \n}", "import layers from './ui/layers/_layers.mjs'\n\nimport locations from './ui/locations/_locations.mjs'\n\nimport Dataview from './ui/Dataview.mjs'\n\nimport Tabview from './ui/Tabview.mjs'\n\nimport elements from './ui/elements/_elements.mjs'\n\nimport utils from './ui/utils/_utils.mjs'\n\nimport Gazetteer from './ui/Gazetteer.mjs'\n\nself.ui = (function (mapp) {\n\n  mapp.ui = {\n    layers,\n    locations,\n    elements,\n    utils,\n    Gazetteer,\n    Dataview,\n    Tabview,\n  }\n\n})(mapp);"],
  "mappings": "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",
  "names": ["view_default", "layer", "content", "key", "panel", "a", "b", "chk", "zoomToExtent", "e", "response", "toggleDisplay", "header", "el", "listview_default", "params", "listview", "layer", "add", "view_default", "createGroup", "group", "hideLayers", "e", "metaContent", "filters_default", "filter_text", "filter_numeric", "filter_in", "filter_date", "filter_boolean", "filter_null", "timeout", "applyFilter", "layer", "zoom", "btn", "filter", "e", "booleanFilter", "checked", "nullFilter", "response", "record", "val", "chkSet", "options", "idx", "inputAfter", "onClose", "inputBefore", "meta_default", "layer", "meta", "draw_default", "layer", "elements", "key", "node", "filter_default", "layer", "entry", "val", "dropdown", "e", "filter", "btn", "content", "clearAll", "gazetteer_default", "layer", "gazetteer", "dataviews_default", "layer", "dataviewChkboxes", "entry", "dataview", "tabview", "createTabAndShow", "checked", "reports_default", "layer", "reportLinks", "key", "report", "href", "style_default", "layer", "content", "e", "checked", "key", "entry", "display", "z", "modalButton", "btn", "categorized_default", "layer", "legendOptions", "theme", "grid", "contentsClass", "timeout", "switchControl", "e", "allSwitches", "disabledSwitches", "switch_", "cat", "cat_style", "icon", "label", "key", "distributed_default", "layer", "graduated_default", "layer", "getCatStyleIcon", "cat", "cat_style", "basic_default", "layer", "grid", "icon", "layers_default", "view_default", "listview_default", "filters_default", "meta_default", "draw_default", "style_default", "filter_default", "gazetteer_default", "reports_default", "dataviews_default", "categorized_default", "distributed_default", "graduated_default", "basic_default", "layer", "view_default", "location", "header", "entry", "e", "dv", "listview_default", "params", "records", "clearAll", "e", "location", "target", "key", "record", "el", "hook", "gazCheck", "gazInput", "infoj_default", "location", "infoj", "listview", "groups", "entry", "fieldEntry", "_entry", "val", "skipEntry", "paramString", "response", "el", "boolean_default", "entry", "chkbox", "checked", "types", "image", "images", "documents", "onload", "imageLoad", "docLoad", "cloudinary_default", "entry", "trashBtn", "e", "trash", "upload", "docs", "doc", "reader", "img", "canvas", "max_size", "width", "height", "dataURL", "public_id", "response", "errorMessage", "postUpdate", "valueSet", "content", "dataview_default", "entry", "dependant", "_entry", "createTabAndShow", "checked", "date_default", "entry", "val", "e", "defaults_default", "entry", "val", "geometry_default", "entry", "show", "chkbox", "checked", "list", "draw", "modifyBtnLabel", "modifyBtn", "e", "modify", "remove", "postUpdate", "icon", "btn", "feature", "key", "content", "json_default", "entry", "val", "e", "mvt_clone_default", "entry", "paramString", "chkbox", "checked", "chkZoom", "numeric_default", "entry", "formatEntryValue", "createSlider", "createNumberInput", "displayValueNode", "options", "e", "handleKeyUp", "pin_default", "entry", "chkbox", "checked", "link_default", "entry", "href", "tab_default", "entry", "tabview", "chkbox", "checked", "text_default", "entry", "edit", "options", "response", "row", "e", "optionEntries", "option", "_entry", "textarea_default", "entry", "val", "e", "node", "time_default", "entry", "val", "stringVal", "e", "vector_layer_default", "entry", "chkbox", "checked", "show", "hide", "paramString", "entries_default", "boolean_default", "dataview_default", "date_default", "defaults_default", "cloudinary_default", "geometry_default", "textarea_default", "numeric_default", "json_default", "key", "link_default", "mvt_clone_default", "pin_default", "tab_default", "text_default", "time_default", "title", "vector_layer_default", "entry", "tooltipSpan", "locations_default", "view_default", "listview_default", "infoj_default", "entries_default", "Dataview_default", "_this", "params", "paramString", "response", "target", "toolbar", "key", "Tabview_default", "tabview", "addTab", "e", "entry", "showTab", "removeTab", "tab", "sibling", "card_default", "params", "e", "chkbox_default", "params", "e", "contextMenu_default", "modify", "draw", "menu", "drawer_default", "params", "e", "sibling", "drawing_default", "point", "line", "polygon", "rectangle", "circle_2pt", "circle", "locator", "layer", "label", "e", "btn", "feature", "v", "coordinates", "unitsDropDown", "entry", "rangeSlider", "pos", "location", "coords", "dropdown_default", "params", "ul", "entry", "li", "e", "btn", "v", "bounds", "viewport", "el", "dropdown_multi_default", "params", "btnPanel_default", "params", "e", "xmlSerializer", "legendIcon_default", "params", "onImgLoad", "toLoad", "vectorContext", "canvas", "anchor", "icon", "x", "legendScale", "err", "image", "inlineStyle", "path", "backgroundImage", "modal_default", "params", "closeModal", "e", "addEventListeners", "handleStartEvent", "eventsMap", "moveEvent", "endEvent", "shiftEvent", "stopShift", "x", "y", "pageX", "pageY", "newRight", "newTop", "targetBounds", "modalCenterX", "modalCenterY", "slider_default", "params", "onInput", "e", "val", "group", "el", "slider_ab_default", "params", "element", "onInput", "e", "el", "toolbar_el_default", "viewport", "layerfilter", "download_json", "download_csv", "clear_table_filters", "dataview", "e", "data", "record", "field", "elements_default", "btnPanel_default", "card_default", "chkbox_default", "contextMenu_default", "drawer_default", "drawing_default", "dropdown_default", "dropdown_multi_default", "legendIcon_default", "modal_default", "slider_default", "slider_ab_default", "toolbar_el_default", "promise", "Chart", "chart", "canvas", "options", "resolve", "imports", "error", "Chart_default", "_this", "data", "dataset", "promise", "Tabulator", "tabulator", "resolve", "imports", "error", "Table", "ul_parents", "left", "table_bounds", "ul_parent", "header_bounds", "ul", "Tabulator_default", "_this", "debounce", "events", "setData", "event", "data", "tabulatorUtils_default", "like", "numeric", "set", "dateFilter", "toLocalString", "date", "select", "columns", "_this", "col", "chkCol", "cell", "onRendered", "success", "cancel", "headerFilterParams", "field", "likeFilter", "e", "f", "filters", "inputMin", "minEvent", "filter", "inputMax", "maxEvent", "val", "dropdown", "response", "row", "callback", "option", "options", "params", "rowData", "layer", "location", "formatterParams", "idle", "idleLogout_default", "params", "resetTimer", "renewToken", "lock", "xhr", "e", "cookie", "imagePreview_default", "e", "resizeHandler_default", "params", "e", "stopResize", "utils_default", "Chart_default", "Tabulator_default", "tabulatorUtils_default", "idleLogout_default", "imagePreview_default", "resizeHandler_default", "Gazetteer_default", "gazetteer", "search", "e", "ll", "n", "mapp", "layers_default", "locations_default", "elements_default", "utils_default", "Gazetteer_default", "Dataview_default", "Tabview_default"]
}

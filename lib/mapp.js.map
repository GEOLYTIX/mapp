{
  "version": 3,
  "sources": ["../../../node_modules/@webreflection/mapset/esm/index.js", "../../../node_modules/@webreflection/uparser/esm/index.js", "../../../node_modules/@webreflection/uwire/esm/index.js", "../../../node_modules/uarray/esm/index.js", "../../../node_modules/uhandlers/esm/index.js", "../../../node_modules/udomdiff/esm/index.js", "../../../node_modules/uhtml/esm/utils.js", "../../../node_modules/uhtml/esm/handlers.js", "../../../node_modules/uhtml/esm/rabbit.js", "../../../node_modules/uhtml/esm/index.js", "../../../node_modules/simple-statistics/src/linear_regression.js", "../../../node_modules/simple-statistics/src/linear_regression_line.js", "../../../node_modules/simple-statistics/src/sum.js", "../../../node_modules/simple-statistics/src/mean.js", "../../../node_modules/simple-statistics/src/sum_nth_power_deviations.js", "../../../node_modules/simple-statistics/src/variance.js", "../../../node_modules/simple-statistics/src/standard_deviation.js", "../../../node_modules/simple-statistics/src/r_squared.js", "../../../node_modules/simple-statistics/src/mode_sorted.js", "../../../node_modules/simple-statistics/src/numeric_sort.js", "../../../node_modules/simple-statistics/src/mode.js", "../../../node_modules/simple-statistics/src/mode_fast.js", "../../../node_modules/simple-statistics/src/min.js", "../../../node_modules/simple-statistics/src/max.js", "../../../node_modules/simple-statistics/src/extent.js", "../../../node_modules/simple-statistics/src/min_sorted.js", "../../../node_modules/simple-statistics/src/max_sorted.js", "../../../node_modules/simple-statistics/src/extent_sorted.js", "../../../node_modules/simple-statistics/src/sum_simple.js", "../../../node_modules/simple-statistics/src/product.js", "../../../node_modules/simple-statistics/src/quantile_sorted.js", "../../../node_modules/simple-statistics/src/quickselect.js", "../../../node_modules/simple-statistics/src/quantile.js", "../../../node_modules/simple-statistics/src/quantile_rank_sorted.js", "../../../node_modules/simple-statistics/src/quantile_rank.js", "../../../node_modules/simple-statistics/src/interquartile_range.js", "../../../node_modules/simple-statistics/src/median.js", "../../../node_modules/simple-statistics/src/median_absolute_deviation.js", "../../../node_modules/simple-statistics/src/chunk.js", "../../../node_modules/simple-statistics/src/sample_with_replacement.js", "../../../node_modules/simple-statistics/src/shuffle_in_place.js", "../../../node_modules/simple-statistics/src/shuffle.js", "../../../node_modules/simple-statistics/src/sample.js", "../../../node_modules/simple-statistics/src/make_matrix.js", "../../../node_modules/simple-statistics/src/unique_count_sorted.js", "../../../node_modules/simple-statistics/src/ckmeans.js", "../../../node_modules/simple-statistics/src/jenks_breaks.js", "../../../node_modules/simple-statistics/src/jenks_matrices.js", "../../../node_modules/simple-statistics/src/jenks.js", "../../../node_modules/simple-statistics/src/equal_interval_breaks.js", "../../../node_modules/simple-statistics/src/sample_covariance.js", "../../../node_modules/simple-statistics/src/sample_variance.js", "../../../node_modules/simple-statistics/src/sample_standard_deviation.js", "../../../node_modules/simple-statistics/src/sample_correlation.js", "../../../node_modules/simple-statistics/src/sample_rank_correlation.js", "../../../node_modules/simple-statistics/src/sample_skewness.js", "../../../node_modules/simple-statistics/src/sample_kurtosis.js", "../../../node_modules/simple-statistics/src/permutations_heap.js", "../../../node_modules/simple-statistics/src/combinations.js", "../../../node_modules/simple-statistics/src/combinations_replacement.js", "../../../node_modules/simple-statistics/src/add_to_mean.js", "../../../node_modules/simple-statistics/src/combine_means.js", "../../../node_modules/simple-statistics/src/combine_variances.js", "../../../node_modules/simple-statistics/src/geometric_mean.js", "../../../node_modules/simple-statistics/src/log_average.js", "../../../node_modules/simple-statistics/src/harmonic_mean.js", "../../../node_modules/simple-statistics/src/mean_simple.js", "../../../node_modules/simple-statistics/src/median_sorted.js", "../../../node_modules/simple-statistics/src/subtract_from_mean.js", "../../../node_modules/simple-statistics/src/root_mean_square.js", "../../../node_modules/simple-statistics/src/coefficient_of_variation.js", "../../../node_modules/simple-statistics/src/t_test.js", "../../../node_modules/simple-statistics/src/t_test_two_sample.js", "../../../node_modules/simple-statistics/src/wilcoxon_rank_sum.js", "../../../node_modules/simple-statistics/src/bayesian_classifier.js", "../../../node_modules/simple-statistics/src/perceptron.js", "../../../node_modules/simple-statistics/src/epsilon.js", "../../../node_modules/simple-statistics/src/factorial.js", "../../../node_modules/simple-statistics/src/gamma.js", "../../../node_modules/simple-statistics/src/gammaln.js", "../../../node_modules/simple-statistics/src/bernoulli_distribution.js", "../../../node_modules/simple-statistics/src/binomial_distribution.js", "../../../node_modules/simple-statistics/src/poisson_distribution.js", "../../../node_modules/simple-statistics/src/chi_squared_distribution_table.js", "../../../node_modules/simple-statistics/src/chi_squared_goodness_of_fit.js", "../../../node_modules/simple-statistics/src/kernel_density_estimation.js", "../../../node_modules/simple-statistics/src/z_score.js", "../../../node_modules/simple-statistics/src/standard_normal_table.js", "../../../node_modules/simple-statistics/src/cumulative_std_normal_probability.js", "../../../node_modules/simple-statistics/src/cumulative_std_logistic_probability.js", "../../../node_modules/simple-statistics/src/error_function.js", "../../../node_modules/simple-statistics/src/inverse_error_function.js", "../../../node_modules/simple-statistics/src/probit.js", "../../../node_modules/simple-statistics/src/logit.js", "../../../node_modules/simple-statistics/src/permutation_test.js", "../../../node_modules/simple-statistics/src/sign.js", "../../../node_modules/simple-statistics/src/bisect.js", "../../../node_modules/simple-statistics/src/euclidean_distance.js", "../../../node_modules/simple-statistics/src/k_means_cluster.js", "../../../node_modules/simple-statistics/src/silhouette.js", "../../../node_modules/simple-statistics/src/silhouette_metric.js", "../../../node_modules/simple-statistics/src/relative_error.js", "../../../node_modules/simple-statistics/src/approx_equal.js", "../../../lib/utils/csvDownload.mjs", "../../../lib/utils/convert.mjs", "../../../lib/utils/copyToClipboard.mjs", "../../../lib/utils/dataURLtoBlob.mjs", "../../../lib/utils/hexa.mjs", "../../../lib/utils/loadPlugins.mjs", "../../../lib/utils/getCurrentPosition.mjs", "../../../lib/utils/merge.mjs", "../../../lib/utils/paramString.mjs", "../../../lib/utils/polygonIntersectFeatures.mjs", "../../../lib/utils/promiseAll.mjs", "../../../lib/utils/queryParams.mjs", "../../../lib/utils/olStyle.mjs", "../../../lib/utils/svgSymbols.mjs", "../../../lib/utils/userIndexedDB.mjs", "../../../lib/utils/gazetteer.mjs", "../../../lib/utils/verticeGeoms.mjs", "../../../lib/utils/xhr.mjs", "../../../lib/utils/numericFormatter.mjs", "../../../lib/utils/_utils.mjs", "../../../lib/hooks.mjs", "../../../lib/dictionaries/en.mjs", "../../../lib/dictionaries/de.mjs", "../../../lib/dictionaries/fr.mjs", "../../../lib/dictionaries/pl.mjs", "../../../lib/dictionaries/ja.mjs", "../../../lib/dictionaries/cn.mjs", "../../../lib/dictionaries/cn_trad.mjs", "../../../lib/dictionaries/esp.mjs", "../../../lib/dictionaries/it.mjs", "../../../lib/dictionaries/tr.mjs", "../../../lib/dictionaries/th.mjs", "../../../lib/dictionaries/_dictionaries.mjs", "../../../lib/layer/decorate.mjs", "../../../lib/layer/format/mbtiles.mjs", "../../../lib/layer/format/googleMapTiles.mjs", "../../../lib/layer/format/maplibre.mjs", "../../../lib/layer/format/tiles.mjs", "../../../lib/layer/format/mvt.mjs", "../../../lib/layer/format/vector.mjs", "../../../lib/layer/format/_format.mjs", "../../../lib/layer/fade.mjs", "../../../lib/layer/changeEnd.mjs", "../../../lib/layer/featureHover.mjs", "../../../lib/layer/featureFilter.mjs", "../../../lib/layer/featureFormats.mjs", "../../../lib/layer/featureFields.mjs", "../../../lib/layer/featureStyle.mjs", "../../../lib/layer/styleParser.mjs", "../../../lib/layer/themes/basic.mjs", "../../../lib/layer/themes/categorized.mjs", "../../../lib/layer/themes/distributed.mjs", "../../../lib/layer/themes/graduated.mjs", "../../../lib/layer/_layer.mjs", "../../../lib/location/create.mjs", "../../../lib/location/decorate.mjs", "../../../lib/location/get.mjs", "../../../lib/location/nnearest.mjs", "../../../lib/location/_location.mjs", "../../../lib/mapview/attribution.mjs", "../../../lib/mapview/addLayer.mjs", "../../../lib/mapview/fitView.mjs", "../../../lib/mapview/getBounds.mjs", "../../../lib/mapview/geometry.mjs", "../../../lib/mapview/geoJSON.mjs", "../../../lib/mapview/infotip.mjs", "../../../lib/mapview/locate.mjs", "../../../lib/mapview/popup.mjs", "../../../lib/mapview/allFeatures.mjs", "../../../lib/mapview/interactions/highlight.mjs", "../../../lib/mapview/interactions/draw.mjs", "../../../lib/mapview/interactions/modify.mjs", "../../../lib/mapview/interactions/zoom.mjs", "../../../lib/mapview/interactions/snap.mjs", "../../../lib/mapview/_mapview.mjs", "../../../lib/plugins/admin.mjs", "../../../lib/plugins/feature_info.mjs", "../../../lib/plugins/fullscreen.mjs", "../../../lib/plugins/keyvalue_dictionary.mjs", "../../../lib/plugins/locator.mjs", "../../../lib/plugins/login.mjs", "../../../lib/plugins/svg_templates.mjs", "../../../lib/plugins/userIDB.mjs", "../../../lib/plugins/zoomBtn.mjs", "../../../lib/plugins/zoomToArea.mjs", "../../../lib/plugins/link_button.mjs", "../../../lib/plugins/_plugins.mjs", "../../../lib/mapp.mjs"],
  "sourcesContent": ["export class MapSet extends Map {\n  set(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\n\nexport class WeakMapSet extends WeakMap {\n  set(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\n", "/*! (c) Andrea Giammarchi - ISC */\nconst empty = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\nconst elements = /<([a-z]+[a-z0-9:._-]*)([^>]*?)(\\/?)>/g;\nconst attributes = /([^\\s\\\\>\"'=]+)\\s*=\\s*(['\"]?)\\x01/g;\nconst holes = /[\\x01\\x02]/g;\n\n// \\x01 Node.ELEMENT_NODE\n// \\x02 Node.ATTRIBUTE_NODE\n\n/**\n * Given a template, find holes as both nodes and attributes and\n * return a string with holes as either comment nodes or named attributes.\n * @param {string[]} template a template literal tag array\n * @param {string} prefix prefix to use per each comment/attribute\n * @param {boolean} svg enforces self-closing tags\n * @returns {string} X/HTML with prefixed comments or attributes\n */\nexport default (template, prefix, svg) => {\n  let i = 0;\n  return template\n          .join('\\x01')\n          .trim()\n          .replace(\n            elements,\n            (_, name, attrs, selfClosing) => {\n              let ml = name + attrs.replace(attributes, '\\x02=$2$1').trimEnd();\n              if (selfClosing.length)\n                ml += (svg || empty.test(name)) ? ' /' : ('></' + name);\n              return '<' + ml + '>';\n            }\n          )\n          .replace(\n            holes,\n            hole => hole === '\\x01' ?\n              ('<!--' + prefix + i++ + '-->') :\n              (prefix + i++)\n          );\n};\n", "const ELEMENT_NODE = 1;\nconst nodeType = 111;\n\nconst remove = ({firstChild, lastChild}) => {\n  const range = document.createRange();\n  range.setStartAfter(firstChild);\n  range.setEndAfter(lastChild);\n  range.deleteContents();\n  return firstChild;\n};\n\nexport const diffable = (node, operation) => node.nodeType === nodeType ?\n  ((1 / operation) < 0 ?\n    (operation ? remove(node) : node.lastChild) :\n    (operation ? node.valueOf() : node.firstChild)) :\n  node\n;\n\nexport const persistent = fragment => {\n  const {firstChild, lastChild} = fragment;\n  if (firstChild === lastChild)\n    return lastChild || fragment;\n  const {childNodes} = fragment;\n  const nodes = [...childNodes];\n  return {\n    ELEMENT_NODE,\n    nodeType,\n    firstChild,\n    lastChild,\n    valueOf() {\n      if (childNodes.length !== nodes.length)\n        fragment.append(...nodes);\n      return fragment;\n    }\n  };\n};\n", "const {isArray} = Array;\nconst {indexOf, slice} = [];\n\nexport {isArray, indexOf, slice};\n", "import {isArray} from 'uarray';\n\n// flag for foreign checks (slower path, fast by default)\nlet useForeign = false;\n\nexport class Foreign {\n  constructor(handler, value) {\n    useForeign = true;\n    this._ = (...args) => handler(...args, value);\n  }\n}\n\nexport const foreign = (handler, value) => new Foreign(handler, value);\n\nexport const aria = node => values => {\n  for (const key in values) {\n    const name = key === 'role' ? key : `aria-${key}`;\n    const value = values[key];\n    if (value == null)\n      node.removeAttribute(name);\n    else\n      node.setAttribute(name, value);\n  }\n};\n\nconst getValue = value => value == null ? value : value.valueOf();\n\nexport const attribute = (node, name) => {\n  let oldValue, orphan = true;\n  const attributeNode = document.createAttributeNS(null, name);\n  return newValue => {\n    const value = useForeign && (newValue instanceof Foreign) ?\n                  newValue._(node, name) : getValue(newValue);\n    if (oldValue !== value) {\n      if ((oldValue = value) == null) {\n        if (!orphan) {\n          node.removeAttributeNode(attributeNode);\n          orphan = true;\n        }\n      }\n      else {\n        attributeNode.value = value;\n        if (orphan) {\n          node.setAttributeNodeNS(attributeNode);\n          orphan = false;\n        }\n      }\n    }\n  };\n};\n\nexport const boolean = (node, key, oldValue) => newValue => {\n  const value = !!getValue(newValue);\n  if (oldValue !== value) {\n    // when IE won't be around anymore ...\n    // node.toggleAttribute(key, oldValue = !!value);\n    if ((oldValue = value))\n      node.setAttribute(key, '');\n    else\n      node.removeAttribute(key);\n  }\n};\n\nexport const data = ({dataset}) => values => {\n  for (const key in values) {\n    const value = values[key];\n    if (value == null)\n      delete dataset[key];\n    else\n      dataset[key] = value;\n  }\n};\n\nexport const event = (node, name) => {\n  let oldValue, lower, type = name.slice(2);\n  if (!(name in node) && (lower = name.toLowerCase()) in node)\n    type = lower.slice(2);\n  return newValue => {\n    const info = isArray(newValue) ? newValue : [newValue, false];\n    if (oldValue !== info[0]) {\n      if (oldValue)\n        node.removeEventListener(type, oldValue, info[1]);\n      if (oldValue = info[0])\n        node.addEventListener(type, oldValue, info[1]);\n    }\n  };\n};\n\nexport const ref = node => {\n  let oldValue;\n  return value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'function')\n        value(node);\n      else\n        value.current = node;\n    }\n  };\n};\n\nexport const setter = (node, key) => key === 'dataset' ?\n  data(node) :\n  value => {\n    node[key] = value;\n  };\n\nexport const text = node => {\n  let oldValue;\n  return newValue => {\n    const value = getValue(newValue);\n    if (oldValue != value) {\n      oldValue = value;\n      node.textContent = value == null ? '' : value;\n    }\n  };\n};\n", "/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * @param {Node} parentNode The container where children live\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nexport default (parentNode, a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ?\n        (bStart ?\n          (get(b[bStart - 1], -0).nextSibling) :\n          get(b[bEnd - bStart], 0)) :\n        before;\n      while (bStart < bEnd)\n        parentNode.insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart]))\n          parentNode.removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (\n      a[aStart] === b[bEnd - 1] &&\n      b[bStart] === a[aEnd - 1]\n    ) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      parentNode.insertBefore(\n        get(b[bStart++], 1),\n        get(a[aStart++], -1).nextSibling\n      );\n      parentNode.insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap \uD83D\uDC4D)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map;\n        let i = bStart;\n        while (i < bEnd)\n          map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === (index + sequence))\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > (index - bStart)) {\n            const node = get(a[aStart], 0);\n            while (bStart < index)\n              parentNode.insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            parentNode.replaceChild(\n              get(b[bStart++], 1),\n              get(a[aStart++], -1)\n            );\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else\n          aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else\n        parentNode.removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b;\n};\n", "const {isArray, prototype} = Array;\nconst {indexOf} = prototype;\n\nexport {isArray, indexOf};\n\nconst {\n  createDocumentFragment,\n  createElement,\n  createElementNS,\n  createTextNode,\n  createTreeWalker,\n  importNode\n} = new Proxy({}, {\n  get: (_, method) => document[method].bind(document)\n});\n\nexport {createTextNode, createTreeWalker, importNode};\n\nconst createHTML = html => {\n  const template = createElement('template');\n  template.innerHTML = html;\n  return template.content;\n};\n\nlet xml;\nconst createSVG = svg => {\n  if (!xml) xml = createElementNS('http://www.w3.org/2000/svg', 'svg');\n  xml.innerHTML = svg;\n  const content = createDocumentFragment();\n  content.append(...xml.childNodes);\n  return content;\n};\n\nexport const createContent = (text, svg) => svg ?\n                              createSVG(text) : createHTML(text);\n", "import {diffable} from '@webreflection/uwire';\n\nimport {aria, attribute, boolean, event, ref, setter, text} from 'uhandlers';\nimport udomdiff from 'udomdiff';\n\nimport {isArray, createTextNode} from './utils.js';\n\n// from a generic path, retrieves the exact targeted node\nconst reducePath = ({childNodes}, i) => childNodes[i];\n\n// this helper avoid code bloat around handleAnything() callback\nconst diff = (comment, oldNodes, newNodes) => udomdiff(\n  comment.parentNode,\n  // TODO: there is a possible edge case where a node has been\n  //       removed manually, or it was a keyed one, attached\n  //       to a shared reference between renders.\n  //       In this case udomdiff might fail at removing such node\n  //       as its parent won't be the expected one.\n  //       The best way to avoid this issue is to filter oldNodes\n  //       in search of those not live, or not in the current parent\n  //       anymore, but this would require both a change to uwire,\n  //       exposing a parentNode from the firstChild, as example,\n  //       but also a filter per each diff that should exclude nodes\n  //       that are not in there, penalizing performance quite a lot.\n  //       As this has been also a potential issue with domdiff,\n  //       and both lighterhtml and hyperHTML might fail with this\n  //       very specific edge case, I might as well document this possible\n  //       \"diffing shenanigan\" and call it a day.\n  oldNodes,\n  newNodes,\n  diffable,\n  comment\n);\n\n// if an interpolation represents a comment, the whole\n// diffing will be related to such comment.\n// This helper is in charge of understanding how the new\n// content for such interpolation/hole should be updated\nconst handleAnything = comment => {\n  let oldValue, text, nodes = [];\n  const anyContent = newValue => {\n    switch (typeof newValue) {\n      // primitives are handled as text content\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (oldValue !== newValue) {\n          oldValue = newValue;\n          if (!text)\n            text = createTextNode('');\n          text.data = newValue;\n          nodes = diff(comment, nodes, [text]);\n        }\n        break;\n      // null, and undefined are used to cleanup previous content\n      case 'object':\n      case 'undefined':\n        if (newValue == null) {\n          if (oldValue != newValue) {\n            oldValue = newValue;\n            nodes = diff(comment, nodes, []);\n          }\n          break;\n        }\n        // arrays and nodes have a special treatment\n        if (isArray(newValue)) {\n          oldValue = newValue;\n          // arrays can be used to cleanup, if empty\n          if (newValue.length === 0)\n            nodes = diff(comment, nodes, []);\n          // or diffed, if these contains nodes or \"wires\"\n          else if (typeof newValue[0] === 'object')\n            nodes = diff(comment, nodes, newValue);\n          // in all other cases the content is stringified as is\n          else\n            anyContent(String(newValue));\n          break;\n        }\n        // if the new value is a DOM node, or a wire, and it's\n        // different from the one already live, then it's diffed.\n        // if the node is a fragment, it's appended once via its childNodes\n        // There is no `else` here, meaning if the content\n        // is not expected one, nothing happens, as easy as that.\n        if (oldValue !== newValue) {\n          if ('ELEMENT_NODE' in newValue) {\n            oldValue = newValue;\n            nodes = diff(\n              comment,\n              nodes,\n              newValue.nodeType === 11 ?\n                [...newValue.childNodes] :\n                [newValue]\n            );\n          }\n          else {\n            const value = newValue.valueOf();\n            if (value !== newValue)\n              anyContent(value);\n          }\n        }\n        break;\n      case 'function':\n        anyContent(newValue(comment));\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// attributes can be:\n//  * ref=${...}      for hooks and other purposes\n//  * aria=${...}     for aria attributes\n//  * ?boolean=${...} for boolean attributes\n//  * .dataset=${...} for dataset related attributes\n//  * .setter=${...}  for Custom Elements setters or nodes with setters\n//                    such as buttons, details, options, select, etc\n//  * @event=${...}   to explicitly handle event listeners\n//  * onevent=${...}  to automatically handle event listeners\n//  * generic=${...}  to handle an attribute just like an attribute\nconst handleAttribute = (node, name/*, svg*/) => {\n  switch (name[0]) {\n    case '?': return boolean(node, name.slice(1), false);\n    case '.': return setter(node, name.slice(1));\n    case '@': return event(node, 'on' + name.slice(1));\n    case 'o': if (name[1] === 'n') return event(node, name);\n  }\n\n  switch (name) {\n    case 'ref': return ref(node);\n    case 'aria': return aria(node);\n  }\n\n  return attribute(node, name/*, svg*/);\n};\n\n// each mapped update carries the update type and its path\n// the type is either node, attribute, or text, while\n// the path is how to retrieve the related node to update.\n// In the attribute case, the attribute name is also carried along.\nexport function handlers(options) {\n  const {type, path} = options;\n  const node = path.reduceRight(reducePath, this);\n  return type === 'node' ?\n    handleAnything(node) :\n    (type === 'attr' ?\n      handleAttribute(node, options.name/*, options.svg*/) :\n      text(node));\n};\n", "import {WeakMapSet} from '@webreflection/mapset';\nimport instrument from '@webreflection/uparser';\nimport {persistent} from '@webreflection/uwire';\n\nimport {handlers} from './handlers.js';\nimport {isArray, indexOf, createContent, createTreeWalker, importNode} from './utils.js';\n\n// from a fragment container, create an array of indexes\n// related to its child nodes, so that it's possible\n// to retrieve later on exact node via reducePath\nconst createPath = node => {\n  const path = [];\n  let {parentNode} = node;\n  while (parentNode) {\n    path.push(indexOf.call(parentNode.childNodes, node));\n    node = parentNode;\n    ({parentNode} = node);\n  }\n  return path;\n};\n\n// the prefix is used to identify either comments, attributes, or nodes\n// that contain the related unique id. In the attribute cases\n// is\u00B5X=\"attribute-name\" will be used to map current X update to that\n// attribute name, while comments will be like <!--is\u00B5X-->, to map\n// the update to that specific comment node, hence its parent.\n// style and textarea will have <!--is\u00B5X--> text content, and are handled\n// directly through text-only updates.\nconst prefix = 'is\u00B5';\n\n// Template Literals are unique per scope and static, meaning a template\n// should be parsed once, and once only, as it will always represent the same\n// content, within the exact same amount of updates each time.\n// This cache relates each template to its unique content and updates.\nconst cache = new WeakMapSet;\n\n// a RegExp that helps checking nodes that cannot contain comments\nconst textOnly = /^(?:textarea|script|style|title|plaintext|xmp)$/;\n\nexport const createCache = () => ({\n  stack: [],    // each template gets a stack for each interpolation \"hole\"\n\n  entry: null,  // each entry contains details, such as:\n                //  * the template that is representing\n                //  * the type of node it represents (html or svg)\n                //  * the content fragment with all nodes\n                //  * the list of updates per each node (template holes)\n                //  * the \"wired\" node or fragment that will get updates\n                // if the template or type are different from the previous one\n                // the entry gets re-created each time\n\n  wire: null    // each rendered node represent some wired content and\n                // this reference to the latest one. If different, the node\n                // will be cleaned up and the new \"wire\" will be appended\n});\n\n// the entry stored in the rendered node cache, and per each \"hole\"\nconst createEntry = (type, template) => {\n  const {content, updates} = mapUpdates(type, template);\n  return {type, template, content, updates, wire: null};\n};\n\n// a template is instrumented to be able to retrieve where updates are needed.\n// Each unique template becomes a fragment, cloned once per each other\n// operation based on the same template, i.e. data => html`<p>${data}</p>`\nconst mapTemplate = (type, template) => {\n  const svg = type === 'svg';\n  const text = instrument(template, prefix, svg);\n  const content = createContent(text, svg);\n  // once instrumented and reproduced as fragment, it's crawled\n  // to find out where each update is in the fragment tree\n  const tw = createTreeWalker(content, 1 | 128);\n  const nodes = [];\n  const length = template.length - 1;\n  let i = 0;\n  // updates are searched via unique names, linearly increased across the tree\n  // <div is\u00B50=\"attr\" is\u00B51=\"other\"><!--is\u00B52--><style><!--is\u00B53--</style></div>\n  let search = `${prefix}${i}`;\n  while (i < length) {\n    const node = tw.nextNode();\n    // if not all updates are bound but there's nothing else to crawl\n    // it means that there is something wrong with the template.\n    if (!node)\n      throw `bad template: ${text}`;\n    // if the current node is a comment, and it contains is\u00B5X\n    // it means the update should take care of any content\n    if (node.nodeType === 8) {\n      // The only comments to be considered are those\n      // which content is exactly the same as the searched one.\n      if (node.data === search) {\n        nodes.push({type: 'node', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n    else {\n      // if the node is not a comment, loop through all its attributes\n      // named is\u00B5X and relate attribute updates to this node and the\n      // attribute name, retrieved through node.getAttribute(\"is\u00B5X\")\n      // the is\u00B5X attribute will be removed as irrelevant for the layout\n      // let svg = -1;\n      while (node.hasAttribute(search)) {\n        nodes.push({\n          type: 'attr',\n          path: createPath(node),\n          name: node.getAttribute(search)\n        });\n        node.removeAttribute(search);\n        search = `${prefix}${++i}`;\n      }\n      // if the node was a style, textarea, or others, check its content\n      // and if it is <!--is\u00B5X--> then update tex-only this node\n      if (\n        textOnly.test(node.localName) &&\n        node.textContent.trim() === `<!--${search}-->`\n      ){\n        node.textContent = '';\n        nodes.push({type: 'text', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n  }\n  // once all nodes to update, or their attributes, are known, the content\n  // will be cloned in the future to represent the template, and all updates\n  // related to such content retrieved right away without needing to re-crawl\n  // the exact same template, and its content, more than once.\n  return {content, nodes};\n};\n\n// if a template is unknown, perform the previous mapping, otherwise grab\n// its details such as the fragment with all nodes, and updates info.\nconst mapUpdates = (type, template) => {\n  const {content, nodes} = (\n    cache.get(template) ||\n    cache.set(template, mapTemplate(type, template))\n  );\n  // clone deeply the fragment\n  const fragment = importNode(content, true);\n  // and relate an update handler per each node that needs one\n  const updates = nodes.map(handlers, fragment);\n  // return the fragment and all updates to use within its nodes\n  return {content: fragment, updates};\n};\n\n// as html and svg can be nested calls, but no parent node is known\n// until rendered somewhere, the unroll operation is needed to\n// discover what to do with each interpolation, which will result\n// into an update operation.\nexport const unroll = (info, {type, template, values}) => {\n  // interpolations can contain holes and arrays, so these need\n  // to be recursively discovered\n  const length = unrollValues(info, values);\n  let {entry} = info;\n  // if the cache entry is either null or different from the template\n  // and the type this unroll should resolve, create a new entry\n  // assigning a new content fragment and the list of updates.\n  if (!entry || (entry.template !== template || entry.type !== type))\n    info.entry = (entry = createEntry(type, template));\n  const {content, updates, wire} = entry;\n  // even if the fragment and its nodes is not live yet,\n  // it is already possible to update via interpolations values.\n  for (let i = 0; i < length; i++)\n    updates[i](values[i]);\n  // if the entry was new, or representing a different template or type,\n  // create a new persistent entity to use during diffing.\n  // This is simply a DOM node, when the template has a single container,\n  // as in `<p></p>`, or a \"wire\" in `<p></p><p></p>` and similar cases.\n  return wire || (entry.wire = persistent(content));\n};\n\n// the stack retains, per each interpolation value, the cache\n// related to each interpolation value, or null, if the render\n// was conditional and the value is not special (Array or Hole)\nconst unrollValues = ({stack}, values) => {\n  const {length} = values;\n  for (let i = 0; i < length; i++) {\n    const hole = values[i];\n    // each Hole gets unrolled and re-assigned as value\n    // so that domdiff will deal with a node/wire, not with a hole\n    if (hole instanceof Hole)\n      values[i] = unroll(\n        stack[i] || (stack[i] = createCache()),\n        hole\n      );\n    // arrays are recursively resolved so that each entry will contain\n    // also a DOM node or a wire, hence it can be diffed if/when needed\n    else if (isArray(hole))\n      unrollValues(stack[i] || (stack[i] = createCache()), hole);\n    // if the value is nothing special, the stack doesn't need to retain data\n    // this is useful also to cleanup previously retained data, if the value\n    // was a Hole, or an Array, but not anymore, i.e.:\n    // const update = content => html`<div>${content}</div>`;\n    // update(listOfItems); update(null); update(html`hole`)\n    else\n      stack[i] = null;\n  }\n  if (length < stack.length)\n    stack.splice(length);\n  return length;\n};\n\n/**\n * Holds all details wrappers needed to render the content further on.\n * @constructor\n * @param {string} type The hole type, either `html` or `svg`.\n * @param {string[]} template The template literals used to the define the content.\n * @param {Array} values Zero, one, or more interpolated values to render.\n */\nexport class Hole {\n  constructor(type, template, values) {\n    this.type = type;\n    this.template = template;\n    this.values = values;\n  }\n};\n", "import {MapSet, WeakMapSet} from '@webreflection/mapset';\n\nimport {Hole, createCache, unroll} from './rabbit.js';\n\n// both `html` and `svg` template literal tags are polluted\n// with a `for(ref[, id])` and a `node` tag too\nconst tag = type => {\n  // both `html` and `svg` tags have their own cache\n  const keyed = new WeakMapSet;\n  // keyed operations always re-use the same cache and unroll\n  // the template and its interpolations right away\n  const fixed = cache => (template, ...values) => unroll(\n    cache,\n    {type, template, values}\n  );\n  return Object.assign(\n    // non keyed operations are recognized as instance of Hole\n    // during the \"unroll\", recursively resolved and updated\n    (template, ...values) => new Hole(type, template, values),\n    {\n      // keyed operations need a reference object, usually the parent node\n      // which is showing keyed results, and optionally a unique id per each\n      // related node, handy with JSON results and mutable list of objects\n      // that usually carry a unique identifier\n      for(ref, id) {\n        const memo = keyed.get(ref) || keyed.set(ref, new MapSet);\n        return memo.get(id) || memo.set(id, fixed(createCache()));\n      },\n      // it is possible to create one-off content out of the box via node tag\n      // this might return the single created node, or a fragment with all\n      // nodes present at the root level and, of course, their child nodes\n      node: (template, ...values) => unroll(createCache(), new Hole(type, template, values)).valueOf()\n    }\n  );\n};\n\n// each rendered node gets its own cache\nconst cache = new WeakMapSet;\n\n// rendering means understanding what `html` or `svg` tags returned\n// and it relates a specific node to its own unique cache.\n// Each time the content to render changes, the node is cleaned up\n// and the new new content is appended, and if such content is a Hole\n// then it's \"unrolled\" to resolve all its inner nodes.\nconst render = (where, what) => {\n  const hole = typeof what === 'function' ? what() : what;\n  const info = cache.get(where) || cache.set(where, createCache());\n  const wire = hole instanceof Hole ? unroll(info, hole) : hole;\n  if (wire !== info.wire) {\n    info.wire = wire;\n    // valueOf() simply returns the node itself, but in case it was a \"wire\"\n    // it will eventually re-append all nodes to its fragment so that such\n    // fragment can be re-appended many times in a meaningful way\n    // (wires are basically persistent fragments facades with special behavior)\n    where.replaceChildren(wire.valueOf());\n  }\n  return where;\n};\n\nconst html = tag('html');\nconst svg = tag('svg');\n\nexport {Hole, render, html, svg};\n", "/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data) {\n    let m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    const dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        let sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        let point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (let i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m =\n            (dataLength * sumXY - sumX * sumY) /\n            (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - (m * sumX) / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\nexport default linearRegression;\n", "/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nexport default linearRegressionLine;\n", "/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x) {\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    let sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    let correction = 0;\n\n    let transition;\n\n    if (typeof sum !== \"number\") {\n        return NaN;\n    }\n\n    for (let i = 1; i < x.length; i++) {\n        if (typeof x[i] !== \"number\") {\n            return NaN;\n        }\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += sum - transition + x[i];\n        } else {\n            correction += x[i] - transition + sum;\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nexport default sum;\n", "import sum from \"./sum.js\";\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x) {\n    if (x.length === 0) {\n        throw new Error(\"mean requires at least one data point\");\n    }\n\n    return sum(x) / x.length;\n}\n\nexport default mean;\n", "import mean from \"./mean.js\";\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n *\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * sumNthPowerDeviations(input, 2) / input.length;\n */\nfunction sumNthPowerDeviations(x, n) {\n    const meanValue = mean(x);\n    let sum = 0;\n    let tempValue;\n    let i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nexport default sumNthPowerDeviations;\n", "import sumNthPowerDeviations from \"./sum_nth_power_deviations.js\";\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x) {\n    if (x.length === 0) {\n        throw new Error(\"variance requires at least one data point\");\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nexport default variance;\n", "import variance from \"./variance.js\";\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x) {\n    if (x.length === 1) {\n        return 0;\n    }\n    const v = variance(x);\n    return Math.sqrt(v);\n}\n\nexport default standardDeviation;\n", "/**\n * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)\n * value of data compared with a function `f`\n * is the sum of the squared differences between the prediction\n * and the actual value.\n *\n * @param {Array<Array<number>>} x input data: this should be doubly-nested\n * @param {Function} func function called on `[i][0]` values within the dataset\n * @returns {number} r-squared value\n * @example\n * var samples = [[0, 0], [1, 1]];\n * var regressionLine = linearRegressionLine(linearRegression(samples));\n * rSquared(samples, regressionLine); // = 1 this line is a perfect fit\n */\nfunction rSquared(x, func) {\n    if (x.length < 2) {\n        return 1;\n    }\n\n    // Compute the average y value for the actual\n    // data set in order to compute the\n    // _total sum of squares_\n    let sum = 0;\n    for (let i = 0; i < x.length; i++) {\n        sum += x[i][1];\n    }\n    const average = sum / x.length;\n\n    // Compute the total sum of squares - the\n    // squared difference between each point\n    // and the average of all points.\n    let sumOfSquares = 0;\n    for (let j = 0; j < x.length; j++) {\n        sumOfSquares += Math.pow(average - x[j][1], 2);\n    }\n\n    // Finally estimate the error: the squared\n    // difference between the estimate and the actual data\n    // value at each point.\n    let err = 0;\n    for (let k = 0; k < x.length; k++) {\n        err += Math.pow(x[k][1] - func(x[k][0]), 2);\n    }\n\n    // As the error grows larger, its ratio to the\n    // sum of squares increases and the r squared\n    // value grows lower.\n    return 1 - err / sumOfSquares;\n}\n\nexport default rSquared;\n", "/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)` because the input is sorted.\n *\n * @param {Array<number>} sorted a sample of one or more data points\n * @returns {number} mode\n * @throws {Error} if sorted is empty\n * @example\n * modeSorted([0, 0, 1]); // => 0\n */\nfunction modeSorted(sorted) {\n    // Handle edge cases:\n    // The mode of an empty list is undefined\n    if (sorted.length === 0) {\n        throw new Error(\"mode requires at least one data point\");\n    } else if (sorted.length === 1) {\n        return sorted[0];\n    }\n\n    // This assumes it is dealing with an array of size > 1, since size\n    // 0 and 1 are handled immediately. Hence it starts at index 1 in the\n    // array.\n    let last = sorted[0],\n        // store the mode as we find new modes\n        value = NaN,\n        // store how many times we've seen the mode\n        maxSeen = 0,\n        // how many times the current candidate for the mode\n        // has been seen\n        seenThis = 1;\n\n    // end at sorted.length + 1 to fix the case in which the mode is\n    // the highest number that occurs in the sequence. the last iteration\n    // compares sorted[i], which is undefined, to the highest number\n    // in the series\n    for (let i = 1; i < sorted.length + 1; i++) {\n        // we're seeing a new number pass by\n        if (sorted[i] !== last) {\n            // the last number is the new mode since we saw it more\n            // often than the old one\n            if (seenThis > maxSeen) {\n                maxSeen = seenThis;\n                value = last;\n            }\n            seenThis = 1;\n            last = sorted[i];\n            // if this isn't a new number, it's one more occurrence of\n            // the potential mode\n        } else {\n            seenThis++;\n        }\n    }\n    return value;\n}\n\nexport default modeSorted;\n", "/**\n * Sort an array of numbers by their numeric value, ensuring that the\n * array is not changed in place.\n *\n * This is necessary because the default behavior of .sort\n * in JavaScript is to sort arrays as string values\n *\n *     [1, 10, 12, 102, 20].sort()\n *     // output\n *     [1, 10, 102, 12, 20]\n *\n * @param {Array<number>} x input array\n * @return {Array<number>} sorted array\n * @private\n * @example\n * numericSort([3, 2, 1]) // => [1, 2, 3]\n */\nfunction numericSort(x) {\n    return (\n        x\n            // ensure the array is not changed in-place\n            .slice()\n            // comparator function that treats input as numeric\n            .sort(function (a, b) {\n                return a - b;\n            })\n    );\n}\n\nexport default numericSort;\n", "import modeSorted from \"./mode_sorted.js\";\nimport numericSort from \"./numeric_sort.js\";\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n log(n))` because it needs to sort the array internally\n * before running an `O(n)` search to find the mode.\n *\n * @param {Array<number>} x input\n * @returns {number} mode\n * @example\n * mode([0, 0, 1]); // => 0\n */\nfunction mode(x) {\n    // Sorting the array lets us iterate through it below and be sure\n    // that every time we see a new number it's new and we'll never\n    // see the same number twice\n    return modeSorted(numericSort(x));\n}\n\nexport default mode;\n", "/* globals Map: false */\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * modeFast uses a Map object to keep track of the mode, instead of the approach\n * used with `mode`, a sorted array. As a result, it is faster\n * than `mode` and supports any data type that can be compared with `==`.\n * It also requires a\n * [JavaScript environment with support for Map](https://kangax.github.io/compat-table/es6/#test-Map),\n * and will throw an error if Map is not available.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * @param {Array<*>} x a sample of one or more data points\n * @returns {?*} mode\n * @throws {ReferenceError} if the JavaScript environment doesn't support Map\n * @throws {Error} if x is empty\n * @example\n * modeFast(['rabbits', 'rabbits', 'squirrels']); // => 'rabbits'\n */\nfunction modeFast(x) {\n    // This index will reflect the incidence of different values, indexing\n    // them like\n    // { value: count }\n    const index = new Map();\n\n    // A running `mode` and the number of times it has been encountered.\n    let mode;\n    let modeCount = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        let newCount = index.get(x[i]);\n        if (newCount === undefined) {\n            newCount = 1;\n        } else {\n            newCount++;\n        }\n        if (newCount > modeCount) {\n            mode = x[i];\n            modeCount = newCount;\n        }\n        index.set(x[i], newCount);\n    }\n\n    if (modeCount === 0) {\n        throw new Error(\"mode requires at last one data point\");\n    }\n\n    return mode;\n}\n\nexport default modeFast;\n", "/**\n * The min is the lowest number in the array.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} minimum value\n * @example\n * min([1, 5, -10, 100, 2]); // => -10\n */\nfunction min(x) {\n    if (x.length === 0) {\n        throw new Error(\"min requires at least one data point\");\n    }\n\n    let value = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] < value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\nexport default min;\n", "/**\n * This computes the maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * max([1, 2, 3, 4]);\n * // => 4\n */\nfunction max(x) {\n    if (x.length === 0) {\n        throw new Error(\"max requires at least one data point\");\n    }\n\n    let value = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] > value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\nexport default max;\n", "/**\n * This computes the minimum & maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {Array<number>} minimum & maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * extent([1, 2, 3, 4]);\n * // => [1, 4]\n */\nfunction extent(x) {\n    if (x.length === 0) {\n        throw new Error(\"extent requires at least one data point\");\n    }\n\n    let min = x[0];\n    let max = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] > max) {\n            max = x[i];\n        }\n        if (x[i] < min) {\n            min = x[i];\n        }\n    }\n    return [min, max];\n}\n\nexport default extent;\n", "/**\n * The minimum is the lowest number in the array. With a sorted array,\n * the first element in the array is always the smallest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} minimum value\n * @example\n * minSorted([-100, -10, 1, 2, 5]); // => -100\n */\nfunction minSorted(x) {\n    return x[0];\n}\n\nexport default minSorted;\n", "/**\n * The maximum is the highest number in the array. With a sorted array,\n * the last element in the array is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} maximum value\n * @example\n * maxSorted([-100, -10, 1, 2, 5]); // => 5\n */\nfunction maxSorted(x) {\n    return x[x.length - 1];\n}\n\nexport default maxSorted;\n", "/**\n * The extent is the lowest & highest number in the array. With a sorted array,\n * the first element in the array is always the lowest while the last element is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {Array<number>} minimum & maximum value\n * @example\n * extentSorted([-100, -10, 1, 2, 5]); // => [-100, 5]\n */\nfunction extentSorted(x) {\n    return [x[0], x[x.length - 1]];\n}\n\nexport default extentSorted;\n", "/**\n * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array\n * is the result of adding all numbers together, starting from zero.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sumSimple([1, 2, 3]); // => 6\n */\nfunction sumSimple(x) {\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        if (typeof x[i] !== \"number\") {\n            return NaN;\n        }\n        value += x[i];\n    }\n    return value;\n}\n\nexport default sumSimple;\n", "/**\n * The [product](https://en.wikipedia.org/wiki/Product_(mathematics)) of an array\n * is the result of multiplying all numbers together, starting using one as the multiplicative identity.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} product of all input numbers\n * @example\n * product([1, 2, 3, 4]); // => 24\n */\nfunction product(x) {\n    let value = 1;\n    for (let i = 0; i < x.length; i++) {\n        value *= x[i];\n    }\n    return value;\n}\n\nexport default product;\n", "/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x, p) {\n    const idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error(\"quantile requires at least one data point.\");\n    } else if (p < 0 || p > 1) {\n        throw new Error(\"quantiles must be between 0 and 1\");\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nexport default quantileSorted;\n", "/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} [left] left index\n * @param {number} [right] right index\n * @returns {void} mutates input array\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr, k, left, right) {\n    left = left || 0;\n    right = right || arr.length - 1;\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp((2 * z) / 3);\n            let sd = 0.5 * Math.sqrt((z * s * (n - s)) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            const newLeft = Math.max(left, Math.floor(k - (m * s) / n + sd));\n            const newRight = Math.min(\n                right,\n                Math.floor(k + ((n - m) * s) / n + sd)\n            );\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        const t = arr[k];\n        let i = left;\n        let j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default quickselect;\n", "import quantileSorted from \"./quantile_sorted.js\";\nimport quickselect from \"./quickselect.js\";\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {Array<number> | number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x, p) {\n    const copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        const results = [];\n        // For each requested quantile\n        for (let i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        const idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    const indices = [0];\n    for (let i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    const stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        const r = Math.ceil(stack.pop());\n        const l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        const m = Math.floor((l + r) / 2);\n        quantileSelect(\n            arr,\n            indices[m],\n            Math.floor(indices[l]),\n            Math.ceil(indices[r])\n        );\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len, p) {\n    const idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nexport default quantile;\n", "/* eslint no-bitwise: 0 */\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. With a sorted array, leveraging binary search, we can find\n * this information in logarithmic time.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRankSorted([1, 2, 3, 4], 3); // => 0.75\n * quantileRankSorted([1, 2, 3, 3, 4], 3); // => 0.7\n * quantileRankSorted([1, 2, 3, 4], 6); // => 1\n * quantileRankSorted([1, 2, 3, 3, 5], 4); // => 0.8\n */\nfunction quantileRankSorted(x, value) {\n    // Value is lesser than any value in the array\n    if (value < x[0]) {\n        return 0;\n    }\n\n    // Value is greater than any value in the array\n    if (value > x[x.length - 1]) {\n        return 1;\n    }\n\n    let l = lowerBound(x, value);\n\n    // Value is not in the array\n    if (x[l] !== value) {\n        return l / x.length;\n    }\n\n    l++;\n\n    const u = upperBound(x, value);\n\n    // The value exists only once in the array\n    if (u === l) {\n        return l / x.length;\n    }\n\n    // Here, we are basically computing the mean of the range of indices\n    // containing our searched value. But, instead, of initializing an\n    // array and looping over it, there is a dedicated math formula that\n    // we apply below to get the result.\n    const r = u - l + 1;\n    const sum = (r * (u + l)) / 2;\n    const mean = sum / r;\n\n    return mean / x.length;\n}\n\nfunction lowerBound(x, value) {\n    let mid = 0;\n    let lo = 0;\n    let hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value <= x[mid]) {\n            hi = mid;\n        } else {\n            lo = -~mid;\n        }\n    }\n\n    return lo;\n}\n\nfunction upperBound(x, value) {\n    let mid = 0;\n    let lo = 0;\n    let hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value >= x[mid]) {\n            lo = -~mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    return lo;\n}\n\nexport default quantileRankSorted;\n", "import numericSort from \"./numeric_sort.js\";\nimport quantileRankSorted from \"./quantile_rank_sorted.js\";\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. It will copy and sort your array before each run, so\n * if you know your array is already sorted, you should use `quantileRankSorted`\n * instead.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRank([4, 3, 1, 2], 3); // => 0.75\n * quantileRank([4, 3, 2, 3, 1], 3); // => 0.7\n * quantileRank([2, 4, 1, 3], 6); // => 1\n * quantileRank([5, 3, 1, 2, 3], 4); // => 0.8\n */\nfunction quantileRank(x, value) {\n    // Cloning and sorting the array\n    const sortedCopy = numericSort(x);\n\n    return quantileRankSorted(sortedCopy, value);\n}\n\nexport default quantileRank;\n", "import quantile from \"./quantile.js\";\n\n/**\n * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range) is\n * a measure of statistical dispersion, or how scattered, spread, or\n * concentrated a distribution is. It's computed as the difference between\n * the third quartile and first quartile.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @returns {number} interquartile range: the span between lower and upper quartile,\n * 0.25 and 0.75\n * @example\n * interquartileRange([0, 1, 2, 3]); // => 2\n */\nfunction interquartileRange(x) {\n    // Interquartile range is the span between the upper quartile,\n    // at `0.75`, and lower quartile, `0.25`\n    const q1 = quantile(x, 0.75);\n    const q2 = quantile(x, 0.25);\n\n    if (typeof q1 === \"number\" && typeof q2 === \"number\") {\n        return q1 - q2;\n    }\n}\n\nexport default interquartileRange;\n", "import quantile from \"./quantile.js\";\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} x input\n * @returns {number} median value\n * @example\n * median([10, 2, 5, 100, 2, 1]); // => 3.5\n */\nfunction median(x) {\n    return +quantile(x, 0.5);\n}\n\nexport default median;\n", "import median from \"./median.js\";\n\n/**\n * The [Median Absolute Deviation](http://en.wikipedia.org/wiki/Median_absolute_deviation) is\n * a robust measure of statistical\n * dispersion. It is more resilient to outliers than the standard deviation.\n *\n * @param {Array<number>} x input array\n * @returns {number} median absolute deviation\n * @example\n * medianAbsoluteDeviation([1, 1, 2, 2, 4, 6, 9]); // => 1\n */\nfunction medianAbsoluteDeviation(x) {\n    const medianValue = median(x);\n    const medianAbsoluteDeviations = [];\n\n    // Make a list of absolute deviations from the median\n    for (let i = 0; i < x.length; i++) {\n        medianAbsoluteDeviations.push(Math.abs(x[i] - medianValue));\n    }\n\n    // Find the median value of that list\n    return median(medianAbsoluteDeviations);\n}\n\nexport default medianAbsoluteDeviation;\n", "/**\n * Split an array into chunks of a specified size. This function\n * has the same behavior as [PHP's array_chunk](http://php.net/manual/en/function.array-chunk.php)\n * function, and thus will insert smaller-sized chunks at the end if\n * the input size is not divisible by the chunk size.\n *\n * `x` is expected to be an array, and `chunkSize` a number.\n * The `x` array can contain any kind of data.\n *\n * @param {Array} x a sample\n * @param {number} chunkSize size of each output array. must be a positive integer\n * @returns {Array<Array>} a chunked array\n * @throws {Error} if chunk size is less than 1 or not an integer\n * @example\n * chunk([1, 2, 3, 4, 5, 6], 2);\n * // => [[1, 2], [3, 4], [5, 6]]\n */\nfunction chunk(x, chunkSize) {\n    // a list of result chunks, as arrays in an array\n    const output = [];\n\n    // `chunkSize` must be zero or higher - otherwise the loop below,\n    // in which we call `start += chunkSize`, will loop infinitely.\n    // So, we'll detect and throw in that case to indicate\n    // invalid input.\n    if (chunkSize < 1) {\n        throw new Error(\"chunk size must be a positive number\");\n    }\n\n    if (Math.floor(chunkSize) !== chunkSize) {\n        throw new Error(\"chunk size must be an integer\");\n    }\n\n    // `start` is the index at which `.slice` will start selecting\n    // new array elements\n    for (let start = 0; start < x.length; start += chunkSize) {\n        // for each chunk, slice that part of the array and add it\n        // to the output. The `.slice` function does not change\n        // the original array.\n        output.push(x.slice(start, start + chunkSize));\n    }\n    return output;\n}\n\nexport default chunk;\n", "/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var values = [1, 2, 3, 4];\n * sampleWithReplacement(values, 2); // returns 2 random values, like [2, 4];\n */\nfunction sampleWithReplacement(x, n, randomSource) {\n    if (x.length === 0) {\n        return [];\n    }\n\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    const length = x.length;\n    const sample = [];\n\n    for (let i = 0; i < n; i++) {\n        const index = Math.floor(randomSource() * length);\n\n        sample.push(x[index]);\n    }\n\n    return sample;\n}\n\nexport default sampleWithReplacement;\n", "/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * in-place - which means that it **will change the order of the original\n * array by reference**.\n *\n * This is an algorithm that generates a random [permutation](https://en.wikipedia.org/wiki/Permutation)\n * of a set.\n *\n * @param {Array} x sample of one or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @returns {Array} x\n * @example\n * var x = [1, 2, 3, 4];\n * shuffleInPlace(x);\n * // x is shuffled to a value like [2, 1, 4, 3]\n */\nfunction shuffleInPlace(x, randomSource) {\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    // store the current length of the x to determine\n    // when no elements remain to shuffle.\n    let length = x.length;\n\n    // temporary is used to hold an item when it is being\n    // swapped between indices.\n    let temporary;\n\n    // The index to swap at each stage.\n    let index;\n\n    // While there are still items to shuffle\n    while (length > 0) {\n        // choose a random index within the subset of the array\n        // that is not yet shuffled\n        index = Math.floor(randomSource() * length--);\n\n        // store the value that we'll move temporarily\n        temporary = x[length];\n\n        // swap the value at `x[length]` with `x[index]`\n        x[length] = x[index];\n        x[index] = temporary;\n    }\n\n    return x;\n}\n\nexport default shuffleInPlace;\n", "import shuffleInPlace from \"./shuffle_in_place.js\";\n\n/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * is a fast way to create a random permutation of a finite set. This is\n * a function around `shuffle_in_place` that adds the guarantee that\n * it will not modify its input.\n *\n * @param {Array} x sample of 0 or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} shuffled version of input\n * @example\n * var shuffled = shuffle([1, 2, 3, 4]);\n * shuffled; // = [2, 3, 1, 4] or any other random permutation\n */\nfunction shuffle(x, randomSource) {\n    // slice the original array so that it is not modified\n    const sample = x.slice();\n\n    // and then shuffle that shallow-copied array, in place\n    return shuffleInPlace(sample, randomSource);\n}\n\nexport default shuffle;\n", "import shuffle from \"./shuffle.js\";\n\n/**\n * Create a [simple random sample](http://en.wikipedia.org/wiki/Simple_random_sample)\n * from a given array of `n` elements.\n *\n * The sampled values will be in any order, not necessarily the order\n * they appear in the input.\n *\n * @param {Array<any>} x input array. can contain any type\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} subset of n elements in original array\n *\n * @example\n * var values = [1, 2, 4, 5, 6, 7, 8, 9];\n * sample(values, 3); // returns 3 random values, like [2, 5, 8];\n */\nfunction sample(x, n, randomSource) {\n    // shuffle the original array using a fisher-yates shuffle\n    const shuffled = shuffle(x, randomSource);\n\n    // and then return a subset of it - the first `n` elements.\n    return shuffled.slice(0, n);\n}\n\nexport default sample;\n", "/**\n * Create a new column x row matrix.\n *\n * @private\n * @param {number} columns\n * @param {number} rows\n * @return {Array<Array<number>>} matrix\n * @example\n * makeMatrix(10, 10);\n */\nfunction makeMatrix(columns, rows) {\n    const matrix = [];\n    for (let i = 0; i < columns; i++) {\n        const column = [];\n        for (let j = 0; j < rows; j++) {\n            column.push(0);\n        }\n        matrix.push(column);\n    }\n    return matrix;\n}\n\nexport default makeMatrix;\n", "/**\n * For a sorted input, counting the number of unique values\n * is possible in constant time and constant memory. This is\n * a simple implementation of the algorithm.\n *\n * Values are compared with `===`, so objects and non-primitive objects\n * are not handled in any special way.\n *\n * @param {Array<*>} x an array of any kind of value\n * @returns {number} count of unique values\n * @example\n * uniqueCountSorted([1, 2, 3]); // => 3\n * uniqueCountSorted([1, 1, 1]); // => 1\n */\nfunction uniqueCountSorted(x) {\n    let uniqueValueCount = 0,\n        lastSeenValue;\n    for (let i = 0; i < x.length; i++) {\n        if (i === 0 || x[i] !== lastSeenValue) {\n            lastSeenValue = x[i];\n            uniqueValueCount++;\n        }\n    }\n    return uniqueValueCount;\n}\n\nexport default uniqueCountSorted;\n", "import makeMatrix from \"./make_matrix.js\";\nimport numericSort from \"./numeric_sort.js\";\nimport uniqueCountSorted from \"./unique_count_sorted.js\";\n\n/**\n * Generates incrementally computed values based on the sums and sums of\n * squares for the data array\n *\n * @private\n * @param {number} j\n * @param {number} i\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n * @return {number}\n * @example\n * ssq(0, 1, [-1, 0, 2], [1, 1, 5]);\n */\nfunction ssq(j, i, sums, sumsOfSquares) {\n    let sji; // s(j, i)\n    if (j > 0) {\n        const muji = (sums[i] - sums[j - 1]) / (i - j + 1); // mu(j, i)\n        sji =\n            sumsOfSquares[i] - sumsOfSquares[j - 1] - (i - j + 1) * muji * muji;\n    } else {\n        sji = sumsOfSquares[i] - (sums[i] * sums[i]) / (i + 1);\n    }\n    if (sji < 0) {\n        return 0;\n    }\n    return sji;\n}\n\n/**\n * Function that recursively divides and conquers computations\n * for cluster j\n *\n * @private\n * @param {number} iMin Minimum index in cluster to be computed\n * @param {number} iMax Maximum index in cluster to be computed\n * @param {number} cluster Index of the cluster currently being computed\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n */\nfunction fillMatrixColumn(\n    iMin,\n    iMax,\n    cluster,\n    matrix,\n    backtrackMatrix,\n    sums,\n    sumsOfSquares\n) {\n    if (iMin > iMax) {\n        return;\n    }\n\n    // Start at midpoint between iMin and iMax\n    const i = Math.floor((iMin + iMax) / 2);\n\n    matrix[cluster][i] = matrix[cluster - 1][i - 1];\n    backtrackMatrix[cluster][i] = i;\n\n    let jlow = cluster; // the lower end for j\n\n    if (iMin > cluster) {\n        jlow = Math.max(jlow, backtrackMatrix[cluster][iMin - 1] || 0);\n    }\n    jlow = Math.max(jlow, backtrackMatrix[cluster - 1][i] || 0);\n\n    let jhigh = i - 1; // the upper end for j\n    if (iMax < matrix[0].length - 1) {\n        jhigh = Math.min(jhigh, backtrackMatrix[cluster][iMax + 1] || 0);\n    }\n\n    let sji;\n    let sjlowi;\n    let ssqjlow;\n    let ssqj;\n    for (let j = jhigh; j >= jlow; --j) {\n        sji = ssq(j, i, sums, sumsOfSquares);\n\n        if (sji + matrix[cluster - 1][jlow - 1] >= matrix[cluster][i]) {\n            break;\n        }\n\n        // Examine the lower bound of the cluster border\n        sjlowi = ssq(jlow, i, sums, sumsOfSquares);\n\n        ssqjlow = sjlowi + matrix[cluster - 1][jlow - 1];\n\n        if (ssqjlow < matrix[cluster][i]) {\n            // Shrink the lower bound\n            matrix[cluster][i] = ssqjlow;\n            backtrackMatrix[cluster][i] = jlow;\n        }\n        jlow++;\n\n        ssqj = sji + matrix[cluster - 1][j - 1];\n        if (ssqj < matrix[cluster][i]) {\n            matrix[cluster][i] = ssqj;\n            backtrackMatrix[cluster][i] = j;\n        }\n    }\n\n    fillMatrixColumn(\n        iMin,\n        i - 1,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n    fillMatrixColumn(\n        i + 1,\n        iMax,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n}\n\n/**\n * Initializes the main matrices used in Ckmeans and kicks\n * off the divide and conquer cluster computation strategy\n *\n * @private\n * @param {Array<number>} data sorted array of values\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n */\nfunction fillMatrices(data, matrix, backtrackMatrix) {\n    const nValues = matrix[0].length;\n\n    // Shift values by the median to improve numeric stability\n    const shift = data[Math.floor(nValues / 2)];\n\n    // Cumulative sum and cumulative sum of squares for all values in data array\n    const sums = [];\n    const sumsOfSquares = [];\n\n    // Initialize first column in matrix & backtrackMatrix\n    for (let i = 0, shiftedValue; i < nValues; ++i) {\n        shiftedValue = data[i] - shift;\n        if (i === 0) {\n            sums.push(shiftedValue);\n            sumsOfSquares.push(shiftedValue * shiftedValue);\n        } else {\n            sums.push(sums[i - 1] + shiftedValue);\n            sumsOfSquares.push(\n                sumsOfSquares[i - 1] + shiftedValue * shiftedValue\n            );\n        }\n\n        // Initialize for cluster = 0\n        matrix[0][i] = ssq(0, i, sums, sumsOfSquares);\n        backtrackMatrix[0][i] = 0;\n    }\n\n    // Initialize the rest of the columns\n    let iMin;\n    for (let cluster = 1; cluster < matrix.length; ++cluster) {\n        if (cluster < matrix.length - 1) {\n            iMin = cluster;\n        } else {\n            // No need to compute matrix[K-1][0] ... matrix[K-1][N-2]\n            iMin = nValues - 1;\n        }\n\n        fillMatrixColumn(\n            iMin,\n            nValues - 1,\n            cluster,\n            matrix,\n            backtrackMatrix,\n            sums,\n            sumsOfSquares\n        );\n    }\n}\n\n/**\n * Ckmeans clustering is an improvement on heuristic-based clustering\n * approaches like Jenks. The algorithm was developed in\n * [Haizhou Wang and Mingzhou Song](http://journal.r-project.org/archive/2011-2/RJournal_2011-2_Wang+Song.pdf)\n * as a [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) approach\n * to the problem of clustering numeric data into groups with the least\n * within-group sum-of-squared-deviations.\n *\n * Minimizing the difference within groups - what Wang & Song refer to as\n * `withinss`, or within sum-of-squares, means that groups are optimally\n * homogenous within and the data is split into representative groups.\n * This is very useful for visualization, where you may want to represent\n * a continuous variable in discrete color or style groups. This function\n * can provide groups that emphasize differences between data.\n *\n * Being a dynamic approach, this algorithm is based on two matrices that\n * store incrementally-computed values for squared deviations and backtracking\n * indexes.\n *\n * This implementation is based on Ckmeans 3.4.6, which introduced a new divide\n * and conquer approach that improved runtime from O(kn^2) to O(kn log(n)).\n *\n * Unlike the [original implementation](https://cran.r-project.org/web/packages/Ckmeans.1d.dp/index.html),\n * this implementation does not include any code to automatically determine\n * the optimal number of clusters: this information needs to be explicitly\n * provided.\n *\n * ### References\n * _Ckmeans.1d.dp: Optimal k-means Clustering in One Dimension by Dynamic\n * Programming_ Haizhou Wang and Mingzhou Song ISSN 2073-4859\n *\n * from The R Journal Vol. 3/2, December 2011\n * @param {Array<number>} x input data, as an array of number values\n * @param {number} nClusters number of desired classes. This cannot be\n * greater than the number of values in the data array.\n * @returns {Array<Array<number>>} clustered input\n * @throws {Error} if the number of requested clusters is higher than the size of the data\n * @example\n * ckmeans([-1, 2, -1, 2, 4, 5, 6, -1, 2, -1], 3);\n * // The input, clustered into groups of similar numbers.\n * //= [[-1, -1, -1, -1], [2, 2, 2], [4, 5, 6]]);\n */\nfunction ckmeans(x, nClusters) {\n    if (nClusters > x.length) {\n        throw new Error(\n            \"cannot generate more classes than there are data values\"\n        );\n    }\n\n    const sorted = numericSort(x);\n    // we'll use this as the maximum number of clusters\n    const uniqueCount = uniqueCountSorted(sorted);\n\n    // if all of the input values are identical, there's one cluster\n    // with all of the input in it.\n    if (uniqueCount === 1) {\n        return [sorted];\n    }\n\n    // named 'S' originally\n    const matrix = makeMatrix(nClusters, sorted.length);\n    // named 'J' originally\n    const backtrackMatrix = makeMatrix(nClusters, sorted.length);\n\n    // This is a dynamic programming way to solve the problem of minimizing\n    // within-cluster sum of squares. It's similar to linear regression\n    // in this way, and this calculation incrementally computes the\n    // sum of squares that are later read.\n    fillMatrices(sorted, matrix, backtrackMatrix);\n\n    // The real work of Ckmeans clustering happens in the matrix generation:\n    // the generated matrices encode all possible clustering combinations, and\n    // once they're generated we can solve for the best clustering groups\n    // very quickly.\n    const clusters = [];\n    let clusterRight = backtrackMatrix[0].length - 1;\n\n    // Backtrack the clusters from the dynamic programming matrix. This\n    // starts at the bottom-right corner of the matrix (if the top-left is 0, 0),\n    // and moves the cluster target with the loop.\n    for (let cluster = backtrackMatrix.length - 1; cluster >= 0; cluster--) {\n        const clusterLeft = backtrackMatrix[cluster][clusterRight];\n\n        // fill the cluster from the sorted input by taking a slice of the\n        // array. the backtrack matrix makes this easy - it stores the\n        // indexes where the cluster should start and end.\n        clusters[cluster] = sorted.slice(clusterLeft, clusterRight + 1);\n\n        if (cluster > 0) {\n            clusterRight = clusterLeft - 1;\n        }\n    }\n\n    return clusters;\n}\n\nexport default ckmeans;\n", "/*\n * Pull Breaks Values for Jenks\n *\n * the second part of the jenks recipe: take the calculated matrices\n * and derive an array of n breaks.\n *\n * @private\n */\nfunction jenksBreaks(data, lowerClassLimits, nClasses) {\n    let k = data.length;\n    const kclass = [];\n    let countNum = nClasses;\n\n    // the calculation of classes will never include the upper\n    // bound, so we need to explicitly set it\n    kclass[nClasses] = data[data.length - 1];\n\n    // the lowerClassLimits matrix is used as indices into itself\n    // here: the `k` variable is reused in each iteration.\n    while (countNum > 0) {\n        kclass[countNum - 1] = data[lowerClassLimits[k][countNum] - 1];\n        k = lowerClassLimits[k][countNum] - 1;\n        countNum--;\n    }\n\n    return kclass;\n}\n\nexport default jenksBreaks;\n", "/*\n * Compute Matrices for Jenks\n *\n * Compute the matrices required for Jenks breaks. These matrices\n * can be used for any classing of data with `classes <= nClasses`\n *\n * @private\n */\nfunction jenksMatrices(data, nClasses) {\n    // in the original implementation, these matrices are referred to\n    // as `LC` and `OP`\n    //\n    // * lowerClassLimits (LC): optimal lower class limits\n    // * varianceCombinations (OP): optimal variance combinations for all classes\n    const lowerClassLimits = [];\n    const varianceCombinations = [];\n    // loop counters\n    let i, j;\n    // the variance, as computed at each step in the calculation\n    let variance = 0;\n\n    // Initialize and fill each matrix with zeroes\n    for (i = 0; i < data.length + 1; i++) {\n        const tmp1 = [];\n        const tmp2 = [];\n        // despite these arrays having the same values, we need\n        // to keep them separate so that changing one does not change\n        // the other\n        for (j = 0; j < nClasses + 1; j++) {\n            tmp1.push(0);\n            tmp2.push(0);\n        }\n        lowerClassLimits.push(tmp1);\n        varianceCombinations.push(tmp2);\n    }\n\n    for (i = 1; i < nClasses + 1; i++) {\n        lowerClassLimits[1][i] = 1;\n        varianceCombinations[1][i] = 0;\n        // in the original implementation, 9999999 is used but\n        // since Javascript has `Infinity`, we use that.\n        for (j = 2; j < data.length + 1; j++) {\n            varianceCombinations[j][i] = Infinity;\n        }\n    }\n\n    for (let l = 2; l < data.length + 1; l++) {\n        // `SZ` originally. this is the sum of the values seen thus\n        // far when calculating variance.\n        let sum = 0;\n        // `ZSQ` originally. the sum of squares of values seen\n        // thus far\n        let sumSquares = 0;\n        // `WT` originally. This is the number of\n        let w = 0;\n        // `IV` originally\n        let i4 = 0;\n\n        // in several instances, you could say `Math.pow(x, 2)`\n        // instead of `x * x`, but this is slower in some browsers\n        // introduces an unnecessary concept.\n        for (let m = 1; m < l + 1; m++) {\n            // `III` originally\n            const lowerClassLimit = l - m + 1;\n            const val = data[lowerClassLimit - 1];\n\n            // here we're estimating variance for each potential classing\n            // of the data, for each potential number of classes. `w`\n            // is the number of data points considered so far.\n            w++;\n\n            // increase the current sum and sum-of-squares\n            sum += val;\n            sumSquares += val * val;\n\n            // the variance at this point in the sequence is the difference\n            // between the sum of squares and the total x 2, over the number\n            // of samples.\n            variance = sumSquares - (sum * sum) / w;\n\n            i4 = lowerClassLimit - 1;\n\n            if (i4 !== 0) {\n                for (j = 2; j < nClasses + 1; j++) {\n                    // if adding this element to an existing class\n                    // will increase its variance beyond the limit, break\n                    // the class at this point, setting the `lowerClassLimit`\n                    // at this point.\n                    if (\n                        varianceCombinations[l][j] >=\n                        variance + varianceCombinations[i4][j - 1]\n                    ) {\n                        lowerClassLimits[l][j] = lowerClassLimit;\n                        varianceCombinations[l][j] =\n                            variance + varianceCombinations[i4][j - 1];\n                    }\n                }\n            }\n        }\n\n        lowerClassLimits[l][1] = 1;\n        varianceCombinations[l][1] = variance;\n    }\n\n    // return the two matrices. for just providing breaks, only\n    // `lowerClassLimits` is needed, but variances can be useful to\n    // evaluate goodness of fit.\n    return {\n        lowerClassLimits: lowerClassLimits,\n        varianceCombinations: varianceCombinations\n    };\n}\n\nexport default jenksMatrices;\n", "import jenksBreaks from \"./jenks_breaks.js\";\nimport jenksMatrices from \"./jenks_matrices.js\";\n\n/**\n * The **[jenks natural breaks optimization](http://en.wikipedia.org/wiki/Jenks_natural_breaks_optimization)**\n * is an algorithm commonly used in cartography and visualization to decide\n * upon groupings of data values that minimize variance within themselves\n * and maximize variation between themselves.\n *\n * For instance, cartographers often use jenks in order to choose which\n * values are assigned to which colors in a [choropleth](https://en.wikipedia.org/wiki/Choropleth_map)\n * map.\n *\n * @param {Array<number>} data input data, as an array of number values\n * @param {number} nClasses number of desired classes\n * @returns {Array<number>} array of class break positions\n * // split data into 3 break points\n * jenks([1, 2, 4, 5, 7, 9, 10, 20], 3) // = [1, 7, 20, 20]\n */\nfunction jenks(data, nClasses) {\n    if (nClasses > data.length) {\n        return null;\n    }\n\n    // sort data in numerical order, since this is expected\n    // by the matrices function\n    data = data.slice().sort(function (a, b) {\n        return a - b;\n    });\n\n    // get our basic matrices\n    const matrices = jenksMatrices(data, nClasses);\n    // we only need lower class limits here\n    const lowerClassLimits = matrices.lowerClassLimits;\n\n    // extract nClasses out of the computed matrices\n    return jenksBreaks(data, lowerClassLimits, nClasses);\n}\n\nexport default jenks;\n", "import max from \"./max.js\";\nimport min from \"./min.js\";\n\n/**\n * Given an array of x, this will find the extent of the\n * x and return an array of breaks that can be used\n * to categorize the x into a number of classes. The\n * returned array will always be 1 longer than the number of\n * classes because it includes the minimum value.\n *\n * @param {Array<number>} x an array of number values\n * @param {number} nClasses number of desired classes\n * @returns {Array<number>} array of class break positions\n * @example\n * equalIntervalBreaks([1, 2, 3, 4, 5, 6], 4); // => [1, 2.25, 3.5, 4.75, 6]\n */\nfunction equalIntervalBreaks(x, nClasses) {\n    if (x.length < 2) {\n        return x;\n    }\n\n    const theMin = min(x);\n    const theMax = max(x);\n\n    // the first break will always be the minimum value\n    // in the xset\n    const breaks = [theMin];\n\n    // The size of each break is the full range of the x\n    // divided by the number of classes requested\n    const breakSize = (theMax - theMin) / nClasses;\n\n    // In the case of nClasses = 1, this loop won't run\n    // and the returned breaks will be [min, max]\n    for (let i = 1; i < nClasses; i++) {\n        breaks.push(breaks[0] + breakSize * i);\n    }\n\n    // the last break will always be the\n    // maximum.\n    breaks.push(theMax);\n\n    return breaks;\n}\n\nexport default equalIntervalBreaks;\n", "import mean from \"./mean.js\";\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x, y) {\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error(\"sampleCovariance requires samples with equal lengths\");\n    }\n\n    if (x.length < 2) {\n        throw new Error(\n            \"sampleCovariance requires at least two data points in each sample\"\n        );\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    const xmean = mean(x);\n    const ymean = mean(y);\n    let sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (let i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nexport default sampleCovariance;\n", "import sumNthPowerDeviations from \"./sum_nth_power_deviations.js\";\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x) {\n    if (x.length < 2) {\n        throw new Error(\"sampleVariance requires at least two data points\");\n    }\n\n    const sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nexport default sampleVariance;\n", "import sampleVariance from \"./sample_variance.js\";\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x) {\n    const sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nexport default sampleStandardDeviation;\n", "import sampleCovariance from \"./sample_covariance.js\";\nimport sampleStandardDeviation from \"./sample_standard_deviation.js\";\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x, y) {\n    const cov = sampleCovariance(x, y);\n    const xstd = sampleStandardDeviation(x);\n    const ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nexport default sampleCorrelation;\n", "import sampleCorrelation from \"./sample_correlation.js\";\n\n/**\n * The [rank correlation](https://en.wikipedia.org/wiki/Rank_correlation) is\n * a measure of the strength of monotonic relationship between two arrays\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample rank correlation\n */\nfunction sampleRankCorrelation(x, y) {\n    const xIndexes = x\n        .map((value, index) => [value, index])\n        .sort((a, b) => a[0] - b[0])\n        .map((pair) => pair[1]);\n    const yIndexes = y\n        .map((value, index) => [value, index])\n        .sort((a, b) => a[0] - b[0])\n        .map((pair) => pair[1]);\n\n    // At this step, we have an array of indexes\n    // that map from sorted numbers to their original indexes. We reverse\n    // that so that it is an array of the sorted destination index.\n    const xRanks = Array(xIndexes.length);\n    const yRanks = Array(xIndexes.length);\n    for (let i = 0; i < xIndexes.length; i++) {\n        xRanks[xIndexes[i]] = i;\n        yRanks[yIndexes[i]] = i;\n    }\n\n    return sampleCorrelation(xRanks, yRanks);\n}\n\nexport default sampleRankCorrelation;\n", "import mean from \"./mean.js\";\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x) {\n    if (x.length < 3) {\n        throw new Error(\"sampleSkewness requires at least three data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let sumSquaredDeviations = 0;\n    let sumCubedDeviations = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        tempValue = x[i] - meanValue;\n        sumSquaredDeviations += tempValue * tempValue;\n        sumCubedDeviations += tempValue * tempValue * tempValue;\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    const theSampleStandardDeviation = Math.sqrt(\n        sumSquaredDeviations / besselsCorrection\n    );\n\n    const n = x.length;\n    const cubedS = Math.pow(theSampleStandardDeviation, 3);\n\n    return (n * sumCubedDeviations) / ((n - 1) * (n - 2) * cubedS);\n}\n\nexport default sampleSkewness;\n", "import mean from \"./mean.js\";\n\n/**\n * [Kurtosis](http://en.wikipedia.org/wiki/Kurtosis) is\n * a measure of the heaviness of a distribution's tails relative to its\n * variance. The kurtosis value can be positive or negative, or even undefined.\n *\n * Implementation is based on Fisher's excess kurtosis definition and uses\n * unbiased moment estimators. This is the version found in Excel and available\n * in several statistical packages, including SAS and SciPy.\n *\n * @param {Array<number>} x a sample of 4 or more data points\n * @returns {number} sample kurtosis\n * @throws {Error} if x has length less than 4\n * @example\n * sampleKurtosis([1, 2, 2, 3, 5]); // => 1.4555765595463122\n */\nfunction sampleKurtosis(x) {\n    const n = x.length;\n\n    if (n < 4) {\n        throw new Error(\"sampleKurtosis requires at least four data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let secondCentralMoment = 0;\n    let fourthCentralMoment = 0;\n\n    for (let i = 0; i < n; i++) {\n        tempValue = x[i] - meanValue;\n        secondCentralMoment += tempValue * tempValue;\n        fourthCentralMoment += tempValue * tempValue * tempValue * tempValue;\n    }\n\n    return (\n        ((n - 1) / ((n - 2) * (n - 3))) *\n        ((n * (n + 1) * fourthCentralMoment) /\n            (secondCentralMoment * secondCentralMoment) -\n            3 * (n - 1))\n    );\n}\n\nexport default sampleKurtosis;\n", "/**\n * Implementation of [Heap's Algorithm](https://en.wikipedia.org/wiki/Heap%27s_algorithm)\n * for generating permutations.\n *\n * @param {Array} elements any type of data\n * @returns {Array<Array>} array of permutations\n */\nfunction permutationsHeap(elements) {\n    const indexes = new Array(elements.length);\n    const permutations = [elements.slice()];\n\n    for (let i = 0; i < elements.length; i++) {\n        indexes[i] = 0;\n    }\n\n    for (let i = 0; i < elements.length; ) {\n        if (indexes[i] < i) {\n            // At odd indexes, swap from indexes[i] instead\n            // of from the beginning of the array\n            let swapFrom = 0;\n            if (i % 2 !== 0) {\n                swapFrom = indexes[i];\n            }\n\n            // swap between swapFrom and i, using\n            // a temporary variable as storage.\n            const temp = elements[swapFrom];\n            elements[swapFrom] = elements[i];\n            elements[i] = temp;\n\n            permutations.push(elements.slice());\n            indexes[i]++;\n            i = 0;\n        } else {\n            indexes[i] = 0;\n            i++;\n        }\n    }\n\n    return permutations;\n}\n\nexport default permutationsHeap;\n", "/**\n * Implementation of Combinations\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * https://en.wikipedia.org/wiki/Combination\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinations([1, 2, 3], 2); // => [[1,2], [1,3], [2,3]]\n */\n\nfunction combinations(x, k) {\n    let i;\n    let subI;\n    const combinationList = [];\n    let subsetCombinations;\n    let next;\n\n    for (i = 0; i < x.length; i++) {\n        if (k === 1) {\n            combinationList.push([x[i]]);\n        } else {\n            subsetCombinations = combinations(x.slice(i + 1, x.length), k - 1);\n            for (subI = 0; subI < subsetCombinations.length; subI++) {\n                next = subsetCombinations[subI];\n                next.unshift(x[i]);\n                combinationList.push(next);\n            }\n        }\n    }\n    return combinationList;\n}\n\nexport default combinations;\n", "/**\n * Implementation of [Combinations](https://en.wikipedia.org/wiki/Combination) with replacement\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * 'With replacement' means that a given element can be chosen multiple times.\n * Unlike permutation, order doesn't matter for combinations.\n *\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinationsReplacement([1, 2], 2); // => [[1, 1], [1, 2], [2, 2]]\n */\nfunction combinationsReplacement(x, k) {\n    const combinationList = [];\n\n    for (let i = 0; i < x.length; i++) {\n        if (k === 1) {\n            // If we're requested to find only one element, we don't need\n            // to recurse: just push `x[i]` onto the list of combinations.\n            combinationList.push([x[i]]);\n        } else {\n            // Otherwise, recursively find combinations, given `k - 1`. Note that\n            // we request `k - 1`, so if you were looking for k=3 combinations, we're\n            // requesting k=2. This -1 gets reversed in the for loop right after this\n            // code, since we concatenate `x[i]` onto the selected combinations,\n            // bringing `k` back up to your requested level.\n            // This recursion may go many levels deep, since it only stops once\n            // k=1.\n            const subsetCombinations = combinationsReplacement(\n                x.slice(i, x.length),\n                k - 1\n            );\n\n            for (let j = 0; j < subsetCombinations.length; j++) {\n                combinationList.push([x[i]].concat(subsetCombinations[j]));\n            }\n        }\n    }\n\n    return combinationList;\n}\n\nexport default combinationsReplacement;\n", "/**\n * When adding a new value to a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the new\n * value to add.\n *\n * @since 2.5.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} newValue the added value\n * @returns {number} the new mean\n *\n * @example\n * addToMean(14, 5, 53); // => 20.5\n */\nfunction addToMean(mean, n, newValue) {\n    return mean + (newValue - mean) / (n + 1);\n}\n\nexport default addToMean;\n", "/**\n * When combining two lists of values for which one already knows the means,\n * one does not have to necessary recompute the mean of the combined lists in\n * linear time. They can instead use this function to compute the combined\n * mean by providing the mean & number of values of the first list and the mean\n * & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineMeans(5, 3, 4, 3); // => 4.5\n */\nfunction combineMeans(mean1, n1, mean2, n2) {\n    return (mean1 * n1 + mean2 * n2) / (n1 + n2);\n}\n\nexport default combineMeans;\n", "import combineMeans from \"./combine_means.js\";\n\n/**\n * When combining two lists of values for which one already knows the variances,\n * one does not have to necessary recompute the variance of the combined lists\n * in linear time. They can instead use this function to compute the combined\n * variance by providing the variance, mean & number of values of the first list\n * and the variance, mean & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} variance1 variance of the first list\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} variance2 variance of the second list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineVariances(14 / 3, 5, 3, 8 / 3, 4, 3); // => 47 / 12\n */\nfunction combineVariances(variance1, mean1, n1, variance2, mean2, n2) {\n    const newMean = combineMeans(mean1, n1, mean2, n2);\n\n    return (\n        (n1 * (variance1 + Math.pow(mean1 - newMean, 2)) +\n            n2 * (variance2 + Math.pow(mean2 - newMean, 2))) /\n        (n1 + n2)\n    );\n}\n\nexport default combineVariances;\n", "/**\n * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is\n * a mean function that is more useful for numbers in different\n * ranges.\n *\n * This is the nth root of the input numbers multiplied by each other.\n *\n * The geometric mean is often useful for\n * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given\n * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple\n * mean will incorrectly estimate an average growth rate, whereas a geometric\n * mean will correctly estimate a growth rate that, over those years,\n * will yield the same end value.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * var growthRates = [1.80, 1.166666, 1.428571];\n * var averageGrowth = ss.geometricMean(growthRates);\n * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];\n * var startingValue = 10;\n * var startingValueMean = 10;\n * growthRates.forEach(function(rate) {\n *   startingValue *= rate;\n * });\n * averageGrowthRates.forEach(function(rate) {\n *   startingValueMean *= rate;\n * });\n * startingValueMean === startingValue;\n */\nfunction geometricMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"geometricMean requires at least one data point\");\n    }\n\n    // the starting value.\n    let value = 1;\n\n    for (let i = 0; i < x.length; i++) {\n        // the geometric mean is only valid for positive numbers\n        if (x[i] < 0) {\n            throw new Error(\n                \"geometricMean requires only non-negative numbers as input\"\n            );\n        }\n\n        // repeatedly multiply the value by each number\n        value *= x[i];\n    }\n\n    return Math.pow(value, 1 / x.length);\n}\n\nexport default geometricMean;\n", "/**\n * The [log average](https://en.wikipedia.org/wiki/https://en.wikipedia.org/wiki/Geometric_mean#Relationship_with_logarithms)\n * is an equivalent way of computing the geometric mean of an array suitable for large or small products.\n *\n * It's found by calculating the average logarithm of the elements and exponentiating.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n */\nfunction logAverage(x) {\n    if (x.length === 0) {\n        throw new Error(\"logAverage requires at least one data point\");\n    }\n\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] < 0) {\n            throw new Error(\n                \"logAverage requires only non-negative numbers as input\"\n            );\n        }\n        value += Math.log(x[i]);\n    }\n\n    return Math.exp(value / x.length);\n}\n\nexport default logAverage;\n", "/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"harmonicMean requires at least one data point\");\n    }\n\n    let reciprocalSum = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        // the harmonic mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error(\n                \"harmonicMean requires only positive numbers as input\"\n            );\n        }\n\n        reciprocalSum += 1 / x[i];\n    }\n\n    // divide n by the reciprocal sum\n    return x.length / reciprocalSum;\n}\n\nexport default harmonicMean;\n", "import sumSimple from \"./sum_simple.js\";\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The simple mean uses the successive addition method internally\n * to calculate it's result. Errors in floating-point addition are\n * not accounted for, so if precision is required, the standard {@link mean}\n * method should be used instead.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction meanSimple(x) {\n    if (x.length === 0) {\n        throw new Error(\"meanSimple requires at least one data point\");\n    }\n\n    return sumSimple(x) / x.length;\n}\n\nexport default meanSimple;\n", "import quantileSorted from \"./quantile_sorted.js\";\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} sorted input\n * @returns {number} median value\n * @example\n * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5\n */\nfunction medianSorted(sorted) {\n    return quantileSorted(sorted, 0.5);\n}\n\nexport default medianSorted;\n", "/**\n * When removing a value from a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the value to remove.\n *\n * @since 3.0.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} value the value to remove\n * @returns {number} the new mean\n *\n * @example\n * subtractFromMean(20.5, 6, 53); // => 14\n */\nfunction subtractFromMean(mean, n, value) {\n    return (mean * n - value) / (n - 1);\n}\n\nexport default subtractFromMean;\n", "/**\n * The Root Mean Square (RMS) is\n * a mean function used as a measure of the magnitude of a set\n * of numbers, regardless of their sign.\n * This is the square root of the mean of the squares of the\n * input numbers.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x a sample of one or more data points\n * @returns {number} root mean square\n * @throws {Error} if x is empty\n * @example\n * rootMeanSquare([-1, 1, -1, 1]); // => 1\n */\nfunction rootMeanSquare(x) {\n    if (x.length === 0) {\n        throw new Error(\"rootMeanSquare requires at least one data point\");\n    }\n\n    let sumOfSquares = 0;\n    for (let i = 0; i < x.length; i++) {\n        sumOfSquares += Math.pow(x[i], 2);\n    }\n\n    return Math.sqrt(sumOfSquares / x.length);\n}\n\nexport default rootMeanSquare;\n", "import mean from \"./mean.js\";\nimport sampleStandardDeviation from \"./sample_standard_deviation.js\";\n\n/**\n * The`coefficient of variation`_ is the ratio of the standard deviation to the mean.\n * .._`coefficient of variation`: https://en.wikipedia.org/wiki/Coefficient_of_variation\n *\n *\n * @param {Array} x input\n * @returns {number} coefficient of variation\n * @example\n * coefficientOfVariation([1, 2, 3, 4]).toFixed(3); // => 0.516\n * coefficientOfVariation([1, 2, 3, 4, 5]).toFixed(3); // => 0.527\n * coefficientOfVariation([-1, 0, 1, 2, 3, 4]).toFixed(3); // => 1.247\n */\nfunction coefficientOfVariation(x) {\n    return sampleStandardDeviation(x) / mean(x);\n}\n\nexport default coefficientOfVariation;\n", "import mean from \"./mean.js\";\nimport standardDeviation from \"./standard_deviation.js\";\n\n/**\n * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean\n * of a sample to a known value, x.\n *\n * in this case, we're trying to determine whether the\n * population mean is equal to the value that we know, which is `x`\n * here. Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} expectedValue expected value of the population mean\n * @returns {number} value\n * @example\n * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'\n */\nfunction tTest(x, expectedValue) {\n    // The mean of the sample\n    const sampleMean = mean(x);\n\n    // The standard deviation of the sample\n    const sd = standardDeviation(x);\n\n    // Square root the length of the sample\n    const rootN = Math.sqrt(x.length);\n\n    // returning the t value\n    return (sampleMean - expectedValue) / (sd / rootN);\n}\n\nexport default tTest;\n", "import mean from \"./mean.js\";\nimport sampleVariance from \"./sample_variance.js\";\n\n/**\n * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n * Tests whether \"mean(X)-mean(Y) = difference\", (\n * in the most common case, we often have `difference == 0` to test if two samples\n * are likely to be taken from populations with the same mean value) with\n * no prior knowledge on standard deviations of both samples\n * other than the fact that they have the same standard deviation.\n *\n * Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * `diff` can be omitted if it equals 0.\n *\n * [This is used to reject](https://en.wikipedia.org/wiki/Exclusion_of_the_null_hypothesis)\n * a null hypothesis that the two populations that have been sampled into\n * `sampleX` and `sampleY` are equal to each other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @param {number} [difference=0]\n * @returns {number|null} test result\n *\n * @example\n * tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); // => -2.1908902300206643\n */\nfunction tTestTwoSample(sampleX, sampleY, difference) {\n    const n = sampleX.length;\n    const m = sampleY.length;\n\n    // If either sample doesn't actually have any values, we can't\n    // compute this at all, so we return `null`.\n    if (!n || !m) {\n        return null;\n    }\n\n    // default difference (mu) is zero\n    if (!difference) {\n        difference = 0;\n    }\n\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n    const sampleVarianceX = sampleVariance(sampleX);\n    const sampleVarianceY = sampleVariance(sampleY);\n\n    if (\n        typeof meanX === \"number\" &&\n        typeof meanY === \"number\" &&\n        typeof sampleVarianceX === \"number\" &&\n        typeof sampleVarianceY === \"number\"\n    ) {\n        const weightedVariance =\n            ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) /\n            (n + m - 2);\n\n        return (\n            (meanX - meanY - difference) /\n            Math.sqrt(weightedVariance * (1 / n + 1 / m))\n        );\n    }\n}\n\nexport default tTestTwoSample;\n", "/**\n * This function calculates the Wilcoxon rank sum statistic for the first sample\n * with respect to the second. The Wilcoxon rank sum test is a non-parametric\n * alternative to the t-test which is equivalent to the\n * [Mann-Whitney U test](https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test).\n * The statistic is calculated by pooling all the observations together, ranking them,\n * and then summing the ranks associated with one of the samples. If this rank sum is\n * sufficiently large or small we reject the hypothesis that the two samples come\n * from the same distribution in favor of the alternative that one is shifted with\n * respect to the other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @returns {number} rank sum for sampleX\n *\n * @example\n * wilcoxonRankSum([1, 4, 8], [9, 12, 15]); // => 6\n */\nfunction wilcoxonRankSum(sampleX, sampleY) {\n    if (!sampleX.length || !sampleY.length) {\n        throw new Error(\"Neither sample can be empty\");\n    }\n\n    const pooledSamples = sampleX\n        .map((x) => ({ label: \"x\", value: x }))\n        .concat(sampleY.map((y) => ({ label: \"y\", value: y })))\n        .sort((a, b) => a.value - b.value);\n\n    for (let rank = 0; rank < pooledSamples.length; rank++) {\n        pooledSamples[rank].rank = rank;\n    }\n\n    let tiedRanks = [pooledSamples[0].rank];\n    for (let i = 1; i < pooledSamples.length; i++) {\n        if (pooledSamples[i].value === pooledSamples[i - 1].value) {\n            tiedRanks.push(pooledSamples[i].rank);\n            if (i === pooledSamples.length - 1) {\n                replaceRanksInPlace(pooledSamples, tiedRanks);\n            }\n        } else if (tiedRanks.length > 1) {\n            replaceRanksInPlace(pooledSamples, tiedRanks);\n        } else {\n            tiedRanks = [pooledSamples[i].rank];\n        }\n    }\n\n    function replaceRanksInPlace(pooledSamples, tiedRanks) {\n        const average = (tiedRanks[0] + tiedRanks[tiedRanks.length - 1]) / 2;\n        for (let i = 0; i < tiedRanks.length; i++) {\n            pooledSamples[tiedRanks[i]].rank = average;\n        }\n    }\n\n    let rankSum = 0;\n\n    for (let i = 0; i < pooledSamples.length; i++) {\n        const sample = pooledSamples[i];\n        if (sample.label === \"x\") {\n            rankSum += sample.rank + 1;\n        }\n    }\n\n    return rankSum;\n}\n\nexport default wilcoxonRankSum;\n", "/**\n * [Bayesian Classifier](http://en.wikipedia.org/wiki/Naive_Bayes_classifier)\n *\n * This is a naïve bayesian classifier that takes\n * singly-nested objects.\n *\n * @class\n * @example\n * var bayes = new BayesianClassifier();\n * bayes.train({\n *   species: 'Cat'\n * }, 'animal');\n * var result = bayes.score({\n *   species: 'Cat'\n * })\n * // result\n * // {\n * //   animal: 1\n * // }\n */\nclass BayesianClassifier {\n    /*:: totalCount: number */\n    /*:: data: Object */\n    constructor() {\n        // The number of items that are currently\n        // classified in the model\n        this.totalCount = 0;\n        // Every item classified in the model\n        this.data = {};\n    }\n\n    /**\n     * Train the classifier with a new item, which has a single\n     * dimension of Javascript literal keys and values.\n     *\n     * @param {Object} item an object with singly-deep properties\n     * @param {string} category the category this item belongs to\n     * @return {undefined} adds the item to the classifier\n     */\n    train(item, category) {\n        // If the data object doesn't have any values\n        // for this category, create a new object for it.\n        if (!this.data[category]) {\n            this.data[category] = {};\n        }\n\n        // Iterate through each key in the item.\n        for (const k in item) {\n            const v = item[k];\n            // Initialize the nested object `data[category][k][item[k]]`\n            // with an object of keys that equal 0.\n            if (this.data[category][k] === undefined) {\n                this.data[category][k] = {};\n            }\n            if (this.data[category][k][v] === undefined) {\n                this.data[category][k][v] = 0;\n            }\n\n            // And increment the key for this key/value combination.\n            this.data[category][k][v]++;\n        }\n\n        // Increment the number of items classified\n        this.totalCount++;\n    }\n\n    /**\n     * Generate a score of how well this item matches all\n     * possible categories based on its attributes\n     *\n     * @param {Object} item an item in the same format as with train\n     * @returns {Object} of probabilities that this item belongs to a\n     * given category.\n     */\n    score(item) {\n        // Initialize an empty array of odds per category.\n        const odds = {};\n        let category;\n        // Iterate through each key in the item,\n        // then iterate through each category that has been used\n        // in previous calls to `.train()`\n        for (const k in item) {\n            const v = item[k];\n            for (category in this.data) {\n                // Create an empty object for storing key - value combinations\n                // for this category.\n                odds[category] = {};\n\n                // If this item doesn't even have a property, it counts for nothing,\n                // but if it does have the property that we're looking for from\n                // the item to categorize, it counts based on how popular it is\n                // versus the whole population.\n                if (this.data[category][k]) {\n                    odds[category][k + \"_\" + v] =\n                        (this.data[category][k][v] || 0) / this.totalCount;\n                } else {\n                    odds[category][k + \"_\" + v] = 0;\n                }\n            }\n        }\n\n        // Set up a new object that will contain sums of these odds by category\n        const oddsSums = {};\n\n        for (category in odds) {\n            // Tally all of the odds for each category-combination pair -\n            // the non-existence of a category does not add anything to the\n            // score.\n            oddsSums[category] = 0;\n            for (const combination in odds[category]) {\n                oddsSums[category] += odds[category][combination];\n            }\n        }\n\n        return oddsSums;\n    }\n}\n\nexport default BayesianClassifier;\n", "/**\n * This is a single-layer [Perceptron Classifier](http://en.wikipedia.org/wiki/Perceptron) that takes\n * arrays of numbers and predicts whether they should be classified\n * as either 0 or 1 (negative or positive examples).\n * @class\n * @example\n * // Create the model\n * var p = new PerceptronModel();\n * // Train the model with input with a diagonal boundary.\n * for (var i = 0; i < 5; i++) {\n *     p.train([1, 1], 1);\n *     p.train([0, 1], 0);\n *     p.train([1, 0], 0);\n *     p.train([0, 0], 0);\n * }\n * p.predict([0, 0]); // 0\n * p.predict([0, 1]); // 0\n * p.predict([1, 0]); // 0\n * p.predict([1, 1]); // 1\n */\nclass PerceptronModel {\n    /*:: bias: number */\n    /*:: weights: Array<number> */\n    constructor() {\n        // The weights, or coefficients of the model;\n        // weights are only populated when training with data.\n        this.weights = [];\n        // The bias term, or intercept; it is also a weight but\n        // it's stored separately for convenience as it is always\n        // multiplied by one.\n        this.bias = 0;\n    }\n    /**\n     * **Predict**: Use an array of features with the weight array and bias\n     * to predict whether an example is labeled 0 or 1.\n     *\n     * @param {Array<number>} features an array of features as numbers\n     * @returns {number} 1 if the score is over 0, otherwise 0\n     */\n    predict(features) {\n        // Only predict if previously trained\n        // on the same size feature array(s).\n        if (features.length !== this.weights.length) {\n            return null;\n        }\n\n        // Calculate the sum of features times weights,\n        // with the bias added (implicitly times one).\n        let score = 0;\n        for (let i = 0; i < this.weights.length; i++) {\n            score += this.weights[i] * features[i];\n        }\n        score += this.bias;\n\n        // Classify as 1 if the score is over 0, otherwise 0.\n        if (score > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * **Train** the classifier with a new example, which is\n     * a numeric array of features and a 0 or 1 label.\n     *\n     * @param {Array<number>} features an array of features as numbers\n     * @param {number} label either 0 or 1\n     * @returns {PerceptronModel} this\n     */\n    train(features, label) {\n        // Require that only labels of 0 or 1 are considered.\n        if (label !== 0 && label !== 1) {\n            return null;\n        }\n        // The length of the feature array determines\n        // the length of the weight array.\n        // The perceptron will continue learning as long as\n        // it keeps seeing feature arrays of the same length.\n        // When it sees a new data shape, it initializes.\n        if (features.length !== this.weights.length) {\n            this.weights = features;\n            this.bias = 1;\n        }\n        // Make a prediction based on current weights.\n        const prediction = this.predict(features);\n        // Update the weights if the prediction is wrong.\n        if (typeof prediction === \"number\" && prediction !== label) {\n            const gradient = label - prediction;\n            for (let i = 0; i < this.weights.length; i++) {\n                this.weights[i] += gradient * features[i];\n            }\n            this.bias += gradient;\n        }\n        return this;\n    }\n}\n\nexport default PerceptronModel;\n", "/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * Below is an example of using epsilon in [gradient descent](https://en.wikipedia.org/wiki/Gradient_descent),\n * where we're trying to find a local minimum of a function's derivative,\n * given by the `fDerivative` method.\n *\n * @example\n * // From calculation, we expect that the local minimum occurs at x=9/4\n * var x_old = 0;\n * // The algorithm starts at x=6\n * var x_new = 6;\n * var stepSize = 0.01;\n *\n * function fDerivative(x) {\n *   return 4 * Math.pow(x, 3) - 9 * Math.pow(x, 2);\n * }\n *\n * // The loop runs until the difference between the previous\n * // value and the current value is smaller than epsilon - a rough\n * // meaure of 'close enough'\n * while (Math.abs(x_new - x_old) > ss.epsilon) {\n *   x_old = x_new;\n *   x_new = x_old - stepSize * fDerivative(x_old);\n * }\n *\n * console.log('Local minimum occurs at', x_new);\n */\nconst epsilon = 0.0001;\n\nexport default epsilon;\n", "/**\n * A [Factorial](https://en.wikipedia.org/wiki/Factorial), usually written n!, is the product of all positive\n * integers less than or equal to n. Often factorial is implemented\n * recursively, but this iterative approach is significantly faster\n * and simpler.\n *\n * @param {number} n input, must be an integer number 1 or greater\n * @returns {number} factorial: n!\n * @throws {Error} if n is less than 0 or not an integer\n * @example\n * factorial(5); // => 120\n */\nfunction factorial(n) {\n    // factorial is mathematically undefined for negative numbers\n    if (n < 0) {\n        throw new Error(\"factorial requires a non-negative value\");\n    }\n\n    if (Math.floor(n) !== n) {\n        throw new Error(\"factorial requires an integer input\");\n    }\n\n    // typically you'll expand the factorial function going down, like\n    // 5! = 5 * 4 * 3 * 2 * 1. This is going in the opposite direction,\n    // counting from 2 up to the number in question, and since anything\n    // multiplied by 1 is itself, the loop only needs to start at 2.\n    let accumulator = 1;\n    for (let i = 2; i <= n; i++) {\n        // for each number up to and including the number `n`, multiply\n        // the accumulator my that number.\n        accumulator *= i;\n    }\n    return accumulator;\n}\n\nexport default factorial;\n", "import factorial from \"./factorial.js\";\n\n/**\n * Compute the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Nemes' approximation.\n * The gamma of n is equivalent to (n-1)!, but unlike the factorial function, gamma is defined for all real n except zero\n * and negative integers (where NaN is returned). Note, the gamma function is also well-defined for complex numbers,\n * though this implementation currently does not handle complex numbers as input values.\n * Nemes' approximation is defined [here](https://arxiv.org/abs/1003.6020) as Theorem 2.2.\n * Negative values use [Euler's reflection formula](https://en.wikipedia.org/wiki/Gamma_function#Properties) for computation.\n *\n * @param {number} n Any real number except for zero and negative integers.\n * @returns {number} The gamma of the input value.\n *\n * @example\n * gamma(11.5); // 11899423.084037038\n * gamma(-11.5); // 2.29575810481609e-8\n * gamma(5); // 24\n */\nfunction gamma(n) {\n    if (Number.isInteger(n)) {\n        if (n <= 0) {\n            // gamma not defined for zero or negative integers\n            return NaN;\n        } else {\n            // use factorial for integer inputs\n            return factorial(n - 1);\n        }\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    if (n < 0) {\n        // Use Euler's reflection formula for negative inputs\n        // see:  https://en.wikipedia.org/wiki/Gamma_function#Properties\n        return Math.PI / (Math.sin(Math.PI * -n) * gamma(-n));\n    } else {\n        // Nemes' expansion approximation\n        const seriesCoefficient =\n            Math.pow(n / Math.E, n) * Math.sqrt(2 * Math.PI * (n + 1 / 6));\n\n        const seriesDenom = n + 1 / 4;\n\n        const seriesExpansion =\n            1 +\n            1 / 144 / Math.pow(seriesDenom, 2) -\n            1 / 12960 / Math.pow(seriesDenom, 3) -\n            257 / 207360 / Math.pow(seriesDenom, 4) -\n            52 / 2612736 / Math.pow(seriesDenom, 5) +\n            5741173 / 9405849600 / Math.pow(seriesDenom, 6) +\n            37529 / 18811699200 / Math.pow(seriesDenom, 7);\n\n        return seriesCoefficient * seriesExpansion;\n    }\n}\n\nexport default gamma;\n", "// Define series coefficients\nconst COEFFICIENTS = [\n    0.99999999999999709182, 57.156235665862923517, -59.597960355475491248,\n    14.136097974741747174, -0.49191381609762019978, 0.33994649984811888699e-4,\n    0.46523628927048575665e-4, -0.98374475304879564677e-4,\n    0.15808870322491248884e-3, -0.21026444172410488319e-3,\n    0.2174396181152126432e-3, -0.16431810653676389022e-3,\n    0.84418223983852743293e-4, -0.2619083840158140867e-4,\n    0.36899182659531622704e-5\n];\n\nconst g = 607 / 128;\nconst LOGSQRT2PI = Math.log(Math.sqrt(2 * Math.PI));\n\n/**\n * Compute the logarithm of the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Lanczos' approximation.\n * This function takes as input any real-value n greater than 0.\n * This function is useful for values of n too large for the normal gamma function (n > 165).\n * The code is based on Lanczo's Gamma approximation, defined [here](http://my.fit.edu/~gabdo/gamma.txt).\n *\n * @param {number} n Any real number greater than zero.\n * @returns {number} The logarithm of gamma of the input value.\n *\n * @example\n * gammaln(500); // 2605.1158503617335\n * gammaln(2.4); // 0.21685932244884043\n */\nfunction gammaln(n) {\n    // Return infinity if value not in domain\n    if (n <= 0) {\n        return Infinity;\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    // Create series approximation\n    let a = COEFFICIENTS[0];\n\n    for (let i = 1; i < 15; i++) {\n        a += COEFFICIENTS[i] / (n + i);\n    }\n\n    const tmp = g + 0.5 + n;\n\n    // Return natural logarithm of gamma(n)\n    return LOGSQRT2PI + Math.log(a) - tmp + (n + 0.5) * Math.log(tmp);\n}\n\nexport default gammaln;\n", "/**\n * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution)\n * is the probability discrete\n * distribution of a random variable which takes value 1 with success\n * probability `p` and value 0 with failure\n * probability `q` = 1 - `p`. It can be used, for example, to represent the\n * toss of a coin, where \"1\" is defined to mean \"heads\" and \"0\" is defined\n * to mean \"tails\" (or vice versa). It is\n * a special case of a Binomial Distribution\n * where `n` = 1.\n *\n * @param {number} p input value, between 0 and 1 inclusive\n * @returns {number[]} values of bernoulli distribution at this point\n * @throws {Error} if p is outside 0 and 1\n * @example\n * bernoulliDistribution(0.3); // => [0.7, 0.3]\n */\nfunction bernoulliDistribution(p) /*: number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1)\n    if (p < 0 || p > 1) {\n        throw new Error(\n            \"bernoulliDistribution requires probability to be between 0 and 1 inclusive\"\n        );\n    }\n\n    return [1 - p, p];\n}\n\nexport default bernoulliDistribution;\n", "import epsilon from \"./epsilon.js\";\n\n/**\n * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution) is the discrete probability\n * distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields\n * success with probability `probability`. Such a success/failure experiment is also called a Bernoulli experiment or\n * Bernoulli trial; when trials = 1, the Binomial Distribution is a Bernoulli Distribution.\n *\n * @param {number} trials number of trials to simulate\n * @param {number} probability\n * @returns {number[]} output\n */\nfunction binomialDistribution(trials, probability) /*: ?number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1),\n    // that `n` is an integer, strictly positive.\n    if (probability < 0 || probability > 1 || trials <= 0 || trials % 1 !== 0) {\n        return undefined;\n    }\n\n    // We initialize `x`, the random variable, and `accumulator`, an accumulator\n    // for the cumulative distribution function to 0. `distribution_functions`\n    // is the object we'll return with the `probability_of_x` and the\n    // `cumulativeProbability_of_x`, as well as the calculated mean &\n    // variance. We iterate until the `cumulativeProbability_of_x` is\n    // within `epsilon` of 1.0.\n    let x = 0;\n    let cumulativeProbability = 0;\n    const cells = [];\n    let binomialCoefficient = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] =\n            binomialCoefficient *\n            Math.pow(probability, x) *\n            Math.pow(1 - probability, trials - x);\n        cumulativeProbability += cells[x];\n        x++;\n        binomialCoefficient = (binomialCoefficient * (trials - x + 1)) / x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default binomialDistribution;\n", "import epsilon from \"./epsilon.js\";\n\n/**\n * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n * is a discrete probability distribution that expresses the probability\n * of a given number of events occurring in a fixed interval of time\n * and/or space if these events occur with a known average rate and\n * independently of the time since the last event.\n *\n * The Poisson Distribution is characterized by the strictly positive\n * mean arrival or occurrence rate, `λ`.\n *\n * @param {number} lambda location poisson distribution\n * @returns {number[]} values of poisson distribution at that point\n */\nfunction poissonDistribution(lambda) /*: ?number[] */ {\n    // Check that lambda is strictly positive\n    if (lambda <= 0) {\n        return undefined;\n    }\n\n    // our current place in the distribution\n    let x = 0;\n    // and we keep track of the current cumulative probability, in\n    // order to know when to stop calculating chances.\n    let cumulativeProbability = 0;\n    // the calculated cells to be returned\n    const cells = [];\n    let factorialX = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] = (Math.exp(-lambda) * Math.pow(lambda, x)) / factorialX;\n        cumulativeProbability += cells[x];\n        x++;\n        factorialX *= x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default poissonDistribution;\n", "/**\n * **Percentage Points of the χ2 (Chi-Squared) Distribution**\n *\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution) is used in the common\n * chi-squared tests for goodness of fit of an observed distribution to a theoretical one, the independence of two\n * criteria of classification of qualitative data, and in confidence interval estimation for a population standard\n * deviation of a normal distribution from a sample standard deviation.\n *\n * Values from Appendix 1, Table III of William W. Hines & Douglas C. Montgomery, \"Probability and Statistics in\n * Engineering and Management Science\", Wiley (1980).\n */\nconst chiSquaredDistributionTable = {\n    1: {\n        0.995: 0,\n        0.99: 0,\n        0.975: 0,\n        0.95: 0,\n        0.9: 0.02,\n        0.5: 0.45,\n        0.1: 2.71,\n        0.05: 3.84,\n        0.025: 5.02,\n        0.01: 6.63,\n        0.005: 7.88\n    },\n    2: {\n        0.995: 0.01,\n        0.99: 0.02,\n        0.975: 0.05,\n        0.95: 0.1,\n        0.9: 0.21,\n        0.5: 1.39,\n        0.1: 4.61,\n        0.05: 5.99,\n        0.025: 7.38,\n        0.01: 9.21,\n        0.005: 10.6\n    },\n    3: {\n        0.995: 0.07,\n        0.99: 0.11,\n        0.975: 0.22,\n        0.95: 0.35,\n        0.9: 0.58,\n        0.5: 2.37,\n        0.1: 6.25,\n        0.05: 7.81,\n        0.025: 9.35,\n        0.01: 11.34,\n        0.005: 12.84\n    },\n    4: {\n        0.995: 0.21,\n        0.99: 0.3,\n        0.975: 0.48,\n        0.95: 0.71,\n        0.9: 1.06,\n        0.5: 3.36,\n        0.1: 7.78,\n        0.05: 9.49,\n        0.025: 11.14,\n        0.01: 13.28,\n        0.005: 14.86\n    },\n    5: {\n        0.995: 0.41,\n        0.99: 0.55,\n        0.975: 0.83,\n        0.95: 1.15,\n        0.9: 1.61,\n        0.5: 4.35,\n        0.1: 9.24,\n        0.05: 11.07,\n        0.025: 12.83,\n        0.01: 15.09,\n        0.005: 16.75\n    },\n    6: {\n        0.995: 0.68,\n        0.99: 0.87,\n        0.975: 1.24,\n        0.95: 1.64,\n        0.9: 2.2,\n        0.5: 5.35,\n        0.1: 10.65,\n        0.05: 12.59,\n        0.025: 14.45,\n        0.01: 16.81,\n        0.005: 18.55\n    },\n    7: {\n        0.995: 0.99,\n        0.99: 1.25,\n        0.975: 1.69,\n        0.95: 2.17,\n        0.9: 2.83,\n        0.5: 6.35,\n        0.1: 12.02,\n        0.05: 14.07,\n        0.025: 16.01,\n        0.01: 18.48,\n        0.005: 20.28\n    },\n    8: {\n        0.995: 1.34,\n        0.99: 1.65,\n        0.975: 2.18,\n        0.95: 2.73,\n        0.9: 3.49,\n        0.5: 7.34,\n        0.1: 13.36,\n        0.05: 15.51,\n        0.025: 17.53,\n        0.01: 20.09,\n        0.005: 21.96\n    },\n    9: {\n        0.995: 1.73,\n        0.99: 2.09,\n        0.975: 2.7,\n        0.95: 3.33,\n        0.9: 4.17,\n        0.5: 8.34,\n        0.1: 14.68,\n        0.05: 16.92,\n        0.025: 19.02,\n        0.01: 21.67,\n        0.005: 23.59\n    },\n    10: {\n        0.995: 2.16,\n        0.99: 2.56,\n        0.975: 3.25,\n        0.95: 3.94,\n        0.9: 4.87,\n        0.5: 9.34,\n        0.1: 15.99,\n        0.05: 18.31,\n        0.025: 20.48,\n        0.01: 23.21,\n        0.005: 25.19\n    },\n    11: {\n        0.995: 2.6,\n        0.99: 3.05,\n        0.975: 3.82,\n        0.95: 4.57,\n        0.9: 5.58,\n        0.5: 10.34,\n        0.1: 17.28,\n        0.05: 19.68,\n        0.025: 21.92,\n        0.01: 24.72,\n        0.005: 26.76\n    },\n    12: {\n        0.995: 3.07,\n        0.99: 3.57,\n        0.975: 4.4,\n        0.95: 5.23,\n        0.9: 6.3,\n        0.5: 11.34,\n        0.1: 18.55,\n        0.05: 21.03,\n        0.025: 23.34,\n        0.01: 26.22,\n        0.005: 28.3\n    },\n    13: {\n        0.995: 3.57,\n        0.99: 4.11,\n        0.975: 5.01,\n        0.95: 5.89,\n        0.9: 7.04,\n        0.5: 12.34,\n        0.1: 19.81,\n        0.05: 22.36,\n        0.025: 24.74,\n        0.01: 27.69,\n        0.005: 29.82\n    },\n    14: {\n        0.995: 4.07,\n        0.99: 4.66,\n        0.975: 5.63,\n        0.95: 6.57,\n        0.9: 7.79,\n        0.5: 13.34,\n        0.1: 21.06,\n        0.05: 23.68,\n        0.025: 26.12,\n        0.01: 29.14,\n        0.005: 31.32\n    },\n    15: {\n        0.995: 4.6,\n        0.99: 5.23,\n        0.975: 6.27,\n        0.95: 7.26,\n        0.9: 8.55,\n        0.5: 14.34,\n        0.1: 22.31,\n        0.05: 25,\n        0.025: 27.49,\n        0.01: 30.58,\n        0.005: 32.8\n    },\n    16: {\n        0.995: 5.14,\n        0.99: 5.81,\n        0.975: 6.91,\n        0.95: 7.96,\n        0.9: 9.31,\n        0.5: 15.34,\n        0.1: 23.54,\n        0.05: 26.3,\n        0.025: 28.85,\n        0.01: 32,\n        0.005: 34.27\n    },\n    17: {\n        0.995: 5.7,\n        0.99: 6.41,\n        0.975: 7.56,\n        0.95: 8.67,\n        0.9: 10.09,\n        0.5: 16.34,\n        0.1: 24.77,\n        0.05: 27.59,\n        0.025: 30.19,\n        0.01: 33.41,\n        0.005: 35.72\n    },\n    18: {\n        0.995: 6.26,\n        0.99: 7.01,\n        0.975: 8.23,\n        0.95: 9.39,\n        0.9: 10.87,\n        0.5: 17.34,\n        0.1: 25.99,\n        0.05: 28.87,\n        0.025: 31.53,\n        0.01: 34.81,\n        0.005: 37.16\n    },\n    19: {\n        0.995: 6.84,\n        0.99: 7.63,\n        0.975: 8.91,\n        0.95: 10.12,\n        0.9: 11.65,\n        0.5: 18.34,\n        0.1: 27.2,\n        0.05: 30.14,\n        0.025: 32.85,\n        0.01: 36.19,\n        0.005: 38.58\n    },\n    20: {\n        0.995: 7.43,\n        0.99: 8.26,\n        0.975: 9.59,\n        0.95: 10.85,\n        0.9: 12.44,\n        0.5: 19.34,\n        0.1: 28.41,\n        0.05: 31.41,\n        0.025: 34.17,\n        0.01: 37.57,\n        0.005: 40\n    },\n    21: {\n        0.995: 8.03,\n        0.99: 8.9,\n        0.975: 10.28,\n        0.95: 11.59,\n        0.9: 13.24,\n        0.5: 20.34,\n        0.1: 29.62,\n        0.05: 32.67,\n        0.025: 35.48,\n        0.01: 38.93,\n        0.005: 41.4\n    },\n    22: {\n        0.995: 8.64,\n        0.99: 9.54,\n        0.975: 10.98,\n        0.95: 12.34,\n        0.9: 14.04,\n        0.5: 21.34,\n        0.1: 30.81,\n        0.05: 33.92,\n        0.025: 36.78,\n        0.01: 40.29,\n        0.005: 42.8\n    },\n    23: {\n        0.995: 9.26,\n        0.99: 10.2,\n        0.975: 11.69,\n        0.95: 13.09,\n        0.9: 14.85,\n        0.5: 22.34,\n        0.1: 32.01,\n        0.05: 35.17,\n        0.025: 38.08,\n        0.01: 41.64,\n        0.005: 44.18\n    },\n    24: {\n        0.995: 9.89,\n        0.99: 10.86,\n        0.975: 12.4,\n        0.95: 13.85,\n        0.9: 15.66,\n        0.5: 23.34,\n        0.1: 33.2,\n        0.05: 36.42,\n        0.025: 39.36,\n        0.01: 42.98,\n        0.005: 45.56\n    },\n    25: {\n        0.995: 10.52,\n        0.99: 11.52,\n        0.975: 13.12,\n        0.95: 14.61,\n        0.9: 16.47,\n        0.5: 24.34,\n        0.1: 34.28,\n        0.05: 37.65,\n        0.025: 40.65,\n        0.01: 44.31,\n        0.005: 46.93\n    },\n    26: {\n        0.995: 11.16,\n        0.99: 12.2,\n        0.975: 13.84,\n        0.95: 15.38,\n        0.9: 17.29,\n        0.5: 25.34,\n        0.1: 35.56,\n        0.05: 38.89,\n        0.025: 41.92,\n        0.01: 45.64,\n        0.005: 48.29\n    },\n    27: {\n        0.995: 11.81,\n        0.99: 12.88,\n        0.975: 14.57,\n        0.95: 16.15,\n        0.9: 18.11,\n        0.5: 26.34,\n        0.1: 36.74,\n        0.05: 40.11,\n        0.025: 43.19,\n        0.01: 46.96,\n        0.005: 49.65\n    },\n    28: {\n        0.995: 12.46,\n        0.99: 13.57,\n        0.975: 15.31,\n        0.95: 16.93,\n        0.9: 18.94,\n        0.5: 27.34,\n        0.1: 37.92,\n        0.05: 41.34,\n        0.025: 44.46,\n        0.01: 48.28,\n        0.005: 50.99\n    },\n    29: {\n        0.995: 13.12,\n        0.99: 14.26,\n        0.975: 16.05,\n        0.95: 17.71,\n        0.9: 19.77,\n        0.5: 28.34,\n        0.1: 39.09,\n        0.05: 42.56,\n        0.025: 45.72,\n        0.01: 49.59,\n        0.005: 52.34\n    },\n    30: {\n        0.995: 13.79,\n        0.99: 14.95,\n        0.975: 16.79,\n        0.95: 18.49,\n        0.9: 20.6,\n        0.5: 29.34,\n        0.1: 40.26,\n        0.05: 43.77,\n        0.025: 46.98,\n        0.01: 50.89,\n        0.005: 53.67\n    },\n    40: {\n        0.995: 20.71,\n        0.99: 22.16,\n        0.975: 24.43,\n        0.95: 26.51,\n        0.9: 29.05,\n        0.5: 39.34,\n        0.1: 51.81,\n        0.05: 55.76,\n        0.025: 59.34,\n        0.01: 63.69,\n        0.005: 66.77\n    },\n    50: {\n        0.995: 27.99,\n        0.99: 29.71,\n        0.975: 32.36,\n        0.95: 34.76,\n        0.9: 37.69,\n        0.5: 49.33,\n        0.1: 63.17,\n        0.05: 67.5,\n        0.025: 71.42,\n        0.01: 76.15,\n        0.005: 79.49\n    },\n    60: {\n        0.995: 35.53,\n        0.99: 37.48,\n        0.975: 40.48,\n        0.95: 43.19,\n        0.9: 46.46,\n        0.5: 59.33,\n        0.1: 74.4,\n        0.05: 79.08,\n        0.025: 83.3,\n        0.01: 88.38,\n        0.005: 91.95\n    },\n    70: {\n        0.995: 43.28,\n        0.99: 45.44,\n        0.975: 48.76,\n        0.95: 51.74,\n        0.9: 55.33,\n        0.5: 69.33,\n        0.1: 85.53,\n        0.05: 90.53,\n        0.025: 95.02,\n        0.01: 100.42,\n        0.005: 104.22\n    },\n    80: {\n        0.995: 51.17,\n        0.99: 53.54,\n        0.975: 57.15,\n        0.95: 60.39,\n        0.9: 64.28,\n        0.5: 79.33,\n        0.1: 96.58,\n        0.05: 101.88,\n        0.025: 106.63,\n        0.01: 112.33,\n        0.005: 116.32\n    },\n    90: {\n        0.995: 59.2,\n        0.99: 61.75,\n        0.975: 65.65,\n        0.95: 69.13,\n        0.9: 73.29,\n        0.5: 89.33,\n        0.1: 107.57,\n        0.05: 113.14,\n        0.025: 118.14,\n        0.01: 124.12,\n        0.005: 128.3\n    },\n    100: {\n        0.995: 67.33,\n        0.99: 70.06,\n        0.975: 74.22,\n        0.95: 77.93,\n        0.9: 82.36,\n        0.5: 99.33,\n        0.1: 118.5,\n        0.05: 124.34,\n        0.025: 129.56,\n        0.01: 135.81,\n        0.005: 140.17\n    }\n};\n\nexport default chiSquaredDistributionTable;\n", "import chiSquaredDistributionTable from \"./chi_squared_distribution_table.js\";\nimport mean from \"./mean.js\";\n\n/**\n * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test)\n * uses a measure of goodness of fit which is the sum of differences between observed and expected outcome frequencies\n * (that is, counts of observations), each squared and divided by the number of observations expected given the\n * hypothesized distribution. The resulting χ2 statistic, `chiSquared`, can be compared to the chi-squared distribution\n * to determine the goodness of fit. In order to determine the degrees of freedom of the chi-squared distribution, one\n * takes the total number of observed frequencies and subtracts the number of estimated parameters. The test statistic\n * follows, approximately, a chi-square distribution with (k − c) degrees of freedom where `k` is the number of non-empty\n * cells and `c` is the number of estimated parameters for the distribution.\n *\n * @param {Array<number>} data\n * @param {Function} distributionType a function that returns a point in a distribution:\n * for instance, binomial, bernoulli, or poisson\n * @param {number} significance\n * @returns {number} chi squared goodness of fit\n * @example\n * // Data from Poisson goodness-of-fit example 10-19 in William W. Hines & Douglas C. Montgomery,\n * // \"Probability and Statistics in Engineering and Management Science\", Wiley (1980).\n * var data1019 = [\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n *     2, 2, 2, 2, 2, 2, 2, 2, 2,\n *     3, 3, 3, 3\n * ];\n * ss.chiSquaredGoodnessOfFit(data1019, ss.poissonDistribution, 0.05); //= false\n */\nfunction chiSquaredGoodnessOfFit(data, distributionType, significance) {\n    // Estimate from the sample data, a weighted mean.\n    const inputMean = mean(data);\n    // Calculated value of the χ2 statistic.\n    let chiSquared = 0;\n    // Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test.\n    // Lose one degree of freedom for estimating `lambda` from the sample data.\n    const c = 1;\n    // The hypothesized distribution.\n    // Generate the hypothesized distribution.\n    const hypothesizedDistribution = distributionType(inputMean);\n    const observedFrequencies = [];\n    const expectedFrequencies = [];\n\n    // Create an array holding a histogram from the sample data, of\n    // the form `{ value: numberOfOcurrences }`\n    for (let i = 0; i < data.length; i++) {\n        if (observedFrequencies[data[i]] === undefined) {\n            observedFrequencies[data[i]] = 0;\n        }\n        observedFrequencies[data[i]]++;\n    }\n\n    // The histogram we created might be sparse - there might be gaps\n    // between values. So we iterate through the histogram, making\n    // sure that instead of undefined, gaps have 0 values.\n    for (let i = 0; i < observedFrequencies.length; i++) {\n        if (observedFrequencies[i] === undefined) {\n            observedFrequencies[i] = 0;\n        }\n    }\n\n    // Create an array holding a histogram of expected data given the\n    // sample size and hypothesized distribution.\n    for (const k in hypothesizedDistribution) {\n        if (k in observedFrequencies) {\n            expectedFrequencies[+k] = hypothesizedDistribution[k] * data.length;\n        }\n    }\n\n    // Working backward through the expected frequencies, collapse classes\n    // if less than three observations are expected for a class.\n    // This transformation is applied to the observed frequencies as well.\n    for (let k = expectedFrequencies.length - 1; k >= 0; k--) {\n        if (expectedFrequencies[k] < 3) {\n            expectedFrequencies[k - 1] += expectedFrequencies[k];\n            expectedFrequencies.pop();\n\n            observedFrequencies[k - 1] += observedFrequencies[k];\n            observedFrequencies.pop();\n        }\n    }\n\n    // Iterate through the squared differences between observed & expected\n    // frequencies, accumulating the `chiSquared` statistic.\n    for (let k = 0; k < observedFrequencies.length; k++) {\n        chiSquared +=\n            Math.pow(observedFrequencies[k] - expectedFrequencies[k], 2) /\n            expectedFrequencies[k];\n    }\n\n    // Calculate degrees of freedom for this test and look it up in the\n    // `chiSquaredDistributionTable` in order to\n    // accept or reject the goodness-of-fit of the hypothesized distribution.\n    // Degrees of freedom, calculated as (number of class intervals -\n    // number of hypothesized distribution parameters estimated - 1)\n    const degreesOfFreedom = observedFrequencies.length - c - 1;\n    return (\n        chiSquaredDistributionTable[degreesOfFreedom][significance] < chiSquared\n    );\n}\n\nexport default chiSquaredGoodnessOfFit;\n", "import interquartileRange from \"./interquartile_range.js\";\nimport stddev from \"./sample_standard_deviation.js\";\n\nconst SQRT_2PI = Math.sqrt(2 * Math.PI);\n\n/**\n * [Well-known kernels](https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use)\n * @private\n */\nconst kernels = {\n    /**\n     * The gaussian kernel.\n     * @private\n     */\n    gaussian: function (u) {\n        return Math.exp(-0.5 * u * u) / SQRT_2PI;\n    }\n};\n\n/**\n * Well known bandwidth selection methods\n * @private\n */\nconst bandwidthMethods = {\n    /**\n     * The [\"normal reference distribution\"\n     * rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html),\n     * a commonly used version of [Silverman's\n     * rule-of-thumb](https://en.wikipedia.org/wiki/Kernel_density_estimation#A_rule-of-thumb_bandwidth_estimator).\n     * @private\n     */\n    nrd: function (x) {\n        let s = stddev(x);\n        const iqr = interquartileRange(x);\n        if (typeof iqr === \"number\") {\n            s = Math.min(s, iqr / 1.34);\n        }\n        return 1.06 * s * Math.pow(x.length, -0.2);\n    }\n};\n\n/**\n * [Kernel density estimation](https://en.wikipedia.org/wiki/Kernel_density_estimation)\n * is a useful tool for, among other things, estimating the shape of the\n * underlying probability distribution from a sample.\n *\n * @name kernelDensityEstimation\n * @param X sample values\n * @param kernel The kernel function to use. If a function is provided, it should return non-negative values and integrate to 1. Defaults to 'gaussian'.\n * @param bandwidthMethod The \"bandwidth selection\" method to use, or a fixed bandwidth value. Defaults to \"nrd\", the commonly-used [\"normal reference distribution\" rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html).\n * @returns {Function} An estimated [probability density function](https://en.wikipedia.org/wiki/Probability_density_function) for the given sample. The returned function runs in `O(X.length)`.\n */\nfunction kernelDensityEstimation(X, kernel, bandwidthMethod) {\n    let kernelFn;\n    if (kernel === undefined) {\n        kernelFn = kernels.gaussian;\n    } else if (typeof kernel === \"string\") {\n        if (!kernels[kernel]) {\n            throw new Error('Unknown kernel \"' + kernel + '\"');\n        }\n        kernelFn = kernels[kernel];\n    } else {\n        kernelFn = kernel;\n    }\n\n    let bandwidth;\n    if (typeof bandwidthMethod === \"undefined\") {\n        bandwidth = bandwidthMethods.nrd(X);\n    } else if (typeof bandwidthMethod === \"string\") {\n        if (!bandwidthMethods[bandwidthMethod]) {\n            throw new Error(\n                'Unknown bandwidth method \"' + bandwidthMethod + '\"'\n            );\n        }\n        bandwidth = bandwidthMethods[bandwidthMethod](X);\n    } else {\n        bandwidth = bandwidthMethod;\n    }\n\n    return function (x) {\n        let i = 0;\n        let sum = 0;\n        for (i = 0; i < X.length; i++) {\n            sum += kernelFn((x - X[i]) / bandwidth);\n        }\n        return sum / bandwidth / X.length;\n    };\n}\n\nexport default kernelDensityEstimation;\n", "/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x, mean, standardDeviation) {\n    return (x - mean) / standardDeviation;\n}\n\nexport default zScore;\n", "const SQRT_2PI = Math.sqrt(2 * Math.PI);\n\nfunction cumulativeDistribution(z) {\n    let sum = z,\n        tmp = z;\n\n    // 15 iterations are enough for 4-digit precision\n    for (let i = 1; i < 15; i++) {\n        tmp *= (z * z) / (2 * i + 1);\n        sum += tmp;\n    }\n    return (\n        Math.round((0.5 + (sum / SQRT_2PI) * Math.exp((-z * z) / 2)) * 1e4) /\n        1e4\n    );\n}\n\n/**\n * A standard normal table, also called the unit normal table or Z table,\n * is a mathematical table for the values of Φ (phi), which are the values of\n * the [cumulative distribution function](https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function)\n * of the normal distribution. It is used to find the probability that a\n * statistic is observed below, above, or between values on the standard\n * normal distribution, and by extension, any normal distribution.\n */\nconst standardNormalTable = [];\n\nfor (let z = 0; z <= 3.09; z += 0.01) {\n    standardNormalTable.push(cumulativeDistribution(z));\n}\n\nexport default standardNormalTable;\n", "import standardNormalTable from \"./standard_normal_table.js\";\n\n/**\n * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**\n *\n * Since probability tables cannot be\n * printed for every normal distribution, as there are an infinite variety\n * of normal distributions, it is common practice to convert a normal to a\n * standard normal and then use the standard normal table to find probabilities.\n *\n * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability\n * instead of looking it up in a table.\n *\n * @param {number} z\n * @returns {number} cumulative standard normal probability\n */\nfunction cumulativeStdNormalProbability(z) {\n    // Calculate the position of this value.\n    const absZ = Math.abs(z);\n    // Each row begins with a different\n    // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table\n    // corresponds to a range of 0.01 in the input values, so the value is\n    // multiplied by 100.\n    const index = Math.min(\n        Math.round(absZ * 100),\n        standardNormalTable.length - 1\n    );\n\n    // The index we calculate must be in the table as a positive value,\n    // but we still pay attention to whether the input is positive\n    // or negative, and flip the output value as a last step.\n    if (z >= 0) {\n        return standardNormalTable[index];\n    } else {\n        // due to floating-point arithmetic, values in the table with\n        // 4 significant figures can nevertheless end up as repeating\n        // fractions when they're computed here.\n        return +(1 - standardNormalTable[index]).toFixed(4);\n    }\n}\n\nexport default cumulativeStdNormalProbability;\n", "/**\n * **[Logistic Cumulative Distribution Function](https://en.wikipedia.org/wiki/Logistic_distribution)**\n *\n * @param {number} x\n * @returns {number} cumulative standard logistic probability\n */\nfunction cumulativeStdLogisticProbability(x) {\n    return 1 / (Math.exp(-x) + 1);\n}\n\nexport default cumulativeStdLogisticProbability;\n", "/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n * It uses Horner's method to evaluate the polynomial of τ (tau).\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x) {\n    const t = 1 / (1 + 0.5 * Math.abs(x));\n    const tau =\n        t *\n        Math.exp(\n            -x * x +\n                ((((((((0.17087277 * t - 0.82215223) * t + 1.48851587) * t -\n                    1.13520398) *\n                    t +\n                    0.27886807) *\n                    t -\n                    0.18628806) *\n                    t +\n                    0.09678418) *\n                    t +\n                    0.37409196) *\n                    t +\n                    1.00002368) *\n                    t -\n                1.26551223\n        );\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nexport default errorFunction;\n", "/**\n * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)\n * returns a numerical approximation to the value that would have caused\n * `errorFunction()` to return x.\n *\n * @param {number} x value of error function\n * @returns {number} estimated inverted value\n */\nfunction inverseErrorFunction(x) {\n    const a = (8 * (Math.PI - 3)) / (3 * Math.PI * (4 - Math.PI));\n\n    const inv = Math.sqrt(\n        Math.sqrt(\n            Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) -\n                Math.log(1 - x * x) / a\n        ) -\n            (2 / (Math.PI * a) + Math.log(1 - x * x) / 2)\n    );\n\n    if (x >= 0) {\n        return inv;\n    } else {\n        return -inv;\n    }\n}\n\nexport default inverseErrorFunction;\n", "import epsilon from \"./epsilon.js\";\nimport inverseErrorFunction from \"./inverse_error_function.js\";\n\n/**\n * The [Probit](http://en.wikipedia.org/wiki/Probit)\n * is the inverse of cumulativeStdNormalProbability(),\n * and is also known as the normal quantile function.\n *\n * It returns the number of standard deviations from the mean\n * where the p'th quantile of values can be found in a normal distribution.\n * So, for example, probit(0.5 + 0.6827/2) ≈ 1 because 68.27% of values are\n * normally found within 1 standard deviation above or below the mean.\n *\n * @param {number} p\n * @returns {number} probit\n */\nfunction probit(p) {\n    if (p === 0) {\n        p = epsilon;\n    } else if (p >= 1) {\n        p = 1 - epsilon;\n    }\n    return Math.sqrt(2) * inverseErrorFunction(2 * p - 1);\n}\n\nexport default probit;\n", "/**\n * The [Logit](https://en.wikipedia.org/wiki/Logit)\n * is the inverse of cumulativeStdLogisticProbability,\n * and is also known as the logistic quantile function.\n *\n * @param {number} p\n * @returns {number} logit\n */\nfunction logit(p) {\n    if (p <= 0 || p >= 1) {\n        throw new Error(\"p must be strictly between zero and one\");\n    }\n    return Math.log(p / (1 - p));\n}\n\nexport default logit;\n", "import mean from \"./mean.js\";\nimport shuffleInPlace from \"./shuffle_in_place.js\";\n\n/**\n * Conducts a [permutation test](https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests)\n * to determine if two data sets are *significantly* different from each other, using\n * the difference of means between the groups as the test statistic.\n * The function allows for the following hypotheses:\n * - two_tail = Null hypothesis: the two distributions are equal.\n * - greater = Null hypothesis: observations from sampleX tend to be smaller than those from sampleY.\n * - less = Null hypothesis: observations from sampleX tend to be greater than those from sampleY.\n * [Learn more about one-tail vs two-tail tests.](https://en.wikipedia.org/wiki/One-_and_two-tailed_tests)\n *\n * @param {Array<number>} sampleX first dataset (e.g. treatment data)\n * @param {Array<number>} sampleY second dataset (e.g. control data)\n * @param {string} alternative alternative hypothesis, either 'two_sided' (default), 'greater', or 'less'\n * @param {number} k number of values in permutation distribution.\n * @param {Function} [randomSource=Math.random] an optional entropy source\n * @returns {number} p-value The probability of observing the difference between groups (as or more extreme than what we did), assuming the null hypothesis.\n *\n * @example\n * var control = [2, 5, 3, 6, 7, 2, 5];\n * var treatment = [20, 5, 13, 12, 7, 2, 2];\n * permutationTest(control, treatment); // ~0.1324\n */\nfunction permutationTest(sampleX, sampleY, alternative, k, randomSource) {\n    // Set default arguments\n    if (k === undefined) {\n        k = 10000;\n    }\n    if (alternative === undefined) {\n        alternative = \"two_side\";\n    }\n    if (\n        alternative !== \"two_side\" &&\n        alternative !== \"greater\" &&\n        alternative !== \"less\"\n    ) {\n        throw new Error(\n            \"`alternative` must be either 'two_side', 'greater', or 'less'.\"\n        );\n    }\n\n    // get means for each sample\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n\n    // calculate initial test statistic. This will be our point of comparison with\n    // the generated test statistics.\n    const testStatistic = meanX - meanY;\n\n    // create test-statistic distribution\n    const testStatDsn = new Array(k);\n\n    // combine datsets so we can easily shuffle later\n    const allData = sampleX.concat(sampleY);\n    const midIndex = Math.floor(allData.length / 2);\n\n    for (let i = 0; i < k; i++) {\n        // 1. shuffle data assignments\n        shuffleInPlace(allData, randomSource);\n        const permLeft = allData.slice(0, midIndex);\n        const permRight = allData.slice(midIndex, allData.length);\n\n        // 2.re-calculate test statistic\n        const permTestStatistic = mean(permLeft) - mean(permRight);\n\n        // 3. store test statistic to build test statistic distribution\n        testStatDsn[i] = permTestStatistic;\n    }\n\n    // Calculate p-value depending on alternative\n    // For this test, we calculate the percentage of 'extreme' test statistics (subject to our hypothesis)\n    // more info on permutation test p-value calculations: https://onlinecourses.science.psu.edu/stat464/node/35\n    let numExtremeTStats = 0;\n    if (alternative === \"two_side\") {\n        for (let i = 0; i <= k; i++) {\n            if (Math.abs(testStatDsn[i]) >= Math.abs(testStatistic)) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else if (alternative === \"greater\") {\n        for (let i = 0; i <= k; i++) {\n            if (testStatDsn[i] >= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else {\n        // alternative === 'less'\n        for (let i = 0; i <= k; i++) {\n            if (testStatDsn[i] <= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    }\n\n    return numExtremeTStats / k;\n}\n\nexport default permutationTest;\n", "/**\n * [Sign](https://en.wikipedia.org/wiki/Sign_function) is a function\n * that extracts the sign of a real number\n *\n * @param {number} x input value\n * @returns {number} sign value either 1, 0 or -1\n * @throws {TypeError} if the input argument x is not a number\n * @private\n *\n * @example\n * sign(2); // => 1\n */\nfunction sign(x) {\n    if (typeof x === \"number\") {\n        if (x < 0) {\n            return -1;\n        } else if (x === 0) {\n            return 0;\n        } else {\n            return 1;\n        }\n    } else {\n        throw new TypeError(\"not a number\");\n    }\n}\n\nexport default sign;\n", "import sign from \"./sign.js\";\n\n/**\n * [Bisection method](https://en.wikipedia.org/wiki/Bisection_method) is a root-finding\n * method that repeatedly bisects an interval to find the root.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {Function} func input function\n * @param {number} start - start of interval\n * @param {number} end - end of interval\n * @param {number} maxIterations - the maximum number of iterations\n * @param {number} errorTolerance - the error tolerance\n * @returns {number} estimated root value\n * @throws {TypeError} Argument func must be a function\n *\n * @example\n * bisect(Math.cos,0,4,100,0.003); // => 1.572265625\n */\nfunction bisect(func, start, end, maxIterations, errorTolerance) {\n    if (typeof func !== \"function\")\n        throw new TypeError(\"func must be a function\");\n\n    for (let i = 0; i < maxIterations; i++) {\n        const output = (start + end) / 2;\n\n        if (\n            func(output) === 0 ||\n            Math.abs((end - start) / 2) < errorTolerance\n        ) {\n            return output;\n        }\n\n        if (sign(func(output)) === sign(func(start))) {\n            start = output;\n        } else {\n            end = output;\n        }\n    }\n\n    throw new Error(\"maximum number of iterations exceeded\");\n}\n\nexport default bisect;\n", "/**\n * Calculate Euclidean distance between two points.\n * @param {Array<number>} left First N-dimensional point.\n * @param {Array<number>} right Second N-dimensional point.\n * @returns {number} Distance.\n */\nfunction euclideanDistance(left, right) {\n    let sum = 0;\n    for (let i = 0; i < left.length; i++) {\n        const diff = left[i] - right[i];\n        sum += diff * diff;\n    }\n    return Math.sqrt(sum);\n}\n\nexport default euclideanDistance;\n", "import euclideanDistance from \"./euclidean_distance.js\";\nimport makeMatrix from \"./make_matrix.js\";\nimport sample from \"./sample.js\";\n\n/**\n * @typedef {Object} kMeansReturn\n * @property {Array<number>} labels The labels.\n * @property {Array<Array<number>>} centroids The cluster centroids.\n */\n\n/**\n * Perform k-means clustering.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points to be clustered.\n * @param {number} numCluster How many clusters to create.\n * @param {Function} randomSource An optional entropy source that generates uniform values in [0, 1).\n * @return {kMeansReturn} Labels (same length as data) and centroids (same length as numCluster).\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n *\n * @example\n * kMeansCluster([[0.0, 0.5], [1.0, 0.5]], 2); // => {labels: [0, 1], centroids: [[0.0, 0.5], [1.0 0.5]]}\n */\nfunction kMeansCluster(points, numCluster, randomSource = Math.random) {\n    let oldCentroids = null;\n    let newCentroids = sample(points, numCluster, randomSource);\n    let labels = null;\n    let change = Number.MAX_VALUE;\n    while (change !== 0) {\n        labels = labelPoints(points, newCentroids);\n        oldCentroids = newCentroids;\n        newCentroids = calculateCentroids(points, labels, numCluster);\n        change = calculateChange(newCentroids, oldCentroids);\n    }\n    return {\n        labels: labels,\n        centroids: newCentroids\n    };\n}\n\n/**\n * Label each point according to which centroid it is closest to.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<Array<number>>} centroids Current centroids.\n * @return {Array<number>} Group labels.\n */\nfunction labelPoints(points, centroids) {\n    return points.map((p) => {\n        let minDist = Number.MAX_VALUE;\n        let label = -1;\n        for (let i = 0; i < centroids.length; i++) {\n            const dist = euclideanDistance(p, centroids[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                label = i;\n            }\n        }\n        return label;\n    });\n}\n\n/**\n * Calculate centroids for points given labels.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<number>} labels Which groups points belong to.\n * @param {number} numCluster Number of clusters being created.\n * @return {Array<Array<number>>} Centroid for each group.\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n */\nfunction calculateCentroids(points, labels, numCluster) {\n    // Initialize accumulators.\n    const dimension = points[0].length;\n    const centroids = makeMatrix(numCluster, dimension);\n    const counts = Array(numCluster).fill(0);\n\n    // Add points to centroids' accumulators and count points per centroid.\n    const numPoints = points.length;\n    for (let i = 0; i < numPoints; i++) {\n        const point = points[i];\n        const label = labels[i];\n        const current = centroids[label];\n        for (let j = 0; j < dimension; j++) {\n            current[j] += point[j];\n        }\n        counts[label] += 1;\n    }\n\n    // Rescale centroids, checking for any that have no points.\n    for (let i = 0; i < numCluster; i++) {\n        if (counts[i] === 0) {\n            throw new Error(`Centroid ${i} has no friends`);\n        }\n        const centroid = centroids[i];\n        for (let j = 0; j < dimension; j++) {\n            centroid[j] /= counts[i];\n        }\n    }\n\n    return centroids;\n}\n\n/**\n * Calculate the difference between old centroids and new centroids.\n *\n * @private\n * @param {Array<Array<number>>} left One list of centroids.\n * @param {Array<Array<number>>} right Another list of centroids.\n * @return {number} Distance between centroids.\n */\nfunction calculateChange(left, right) {\n    let total = 0;\n    for (let i = 0; i < left.length; i++) {\n        total += euclideanDistance(left[i], right[i]);\n    }\n    return total;\n}\n\nexport default kMeansCluster;\n", "import euclideanDistance from \"./euclidean_distance.js\";\nimport makeMatrix from \"./make_matrix.js\";\nimport max from \"./max.js\";\n\n/**\n * Calculate the [silhouette values](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for clustered data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<number>} The silhouette value for each point.\n *\n * @example\n * silhouette([[0.25], [0.75]], [0, 0]); // => [1.0, 1.0]\n */\nfunction silhouette(points, labels) {\n    if (points.length !== labels.length) {\n        throw new Error(\"must have exactly as many labels as points\");\n    }\n    const groupings = createGroups(labels);\n    const distances = calculateAllDistances(points);\n    const result = [];\n    for (let i = 0; i < points.length; i++) {\n        let s = 0;\n        if (groupings[labels[i]].length > 1) {\n            const a = meanDistanceFromPointToGroup(\n                i,\n                groupings[labels[i]],\n                distances\n            );\n            const b = meanDistanceToNearestGroup(\n                i,\n                labels,\n                groupings,\n                distances\n            );\n            s = (b - a) / Math.max(a, b);\n        }\n        result.push(s);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table mapping group IDs to point IDs.\n *\n * @private\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<Array<number>>} An array of length G, each of whose entries is an array\n * containing the indices of the points in that group.\n */\nfunction createGroups(labels) {\n    const numGroups = 1 + max(labels);\n    const result = Array(numGroups);\n    for (let i = 0; i < labels.length; i++) {\n        const label = labels[i];\n        if (result[label] === undefined) {\n            result[label] = [];\n        }\n        result[label].push(i);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table of all inter-point distances.\n *\n * @private\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @return {Array<Array<number>>} A symmetric square array of inter-point distances\n * (zero on the diagonal).\n */\nfunction calculateAllDistances(points) {\n    const numPoints = points.length;\n    const result = makeMatrix(numPoints, numPoints);\n    for (let i = 0; i < numPoints; i++) {\n        for (let j = 0; j < i; j++) {\n            result[i][j] = euclideanDistance(points[i], points[j]);\n            result[j][i] = result[i][j];\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between this point and all the points in the\n * nearest group (as determined by which point in another group is closest).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} labels Labels of points.\n * @param {Array<Array<number>>} groupings An array whose entries are arrays\n * containing the indices of the points in that group.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the nearest\n * group.\n */\nfunction meanDistanceToNearestGroup(which, labels, groupings, distances) {\n    const label = labels[which];\n    let result = Number.MAX_VALUE;\n    for (let i = 0; i < groupings.length; i++) {\n        if (i !== label) {\n            const d = meanDistanceFromPointToGroup(\n                which,\n                groupings[i],\n                distances\n            );\n            if (d < result) {\n                result = d;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between a point and all the points in a group\n * (possibly its own).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} group The indices of all the points in the group in\n * question.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the\n * specified group.\n */\nfunction meanDistanceFromPointToGroup(which, group, distances) {\n    let total = 0;\n    for (let i = 0; i < group.length; i++) {\n        total += distances[which][group[i]];\n    }\n    return total / group.length;\n}\n\nexport default silhouette;\n", "import max from \"./max.js\";\nimport silhouette from \"./silhouette.js\";\n\n/**\n * Calculate the [silhouette metric](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for a set of N-dimensional points arranged in groups. The metric is the largest\n * individual silhouette value for the data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {number} The silhouette metric for the groupings.\n *\n * @example\n * silhouetteMetric([[0.25], [0.75]], [0, 0]); // => 1.0\n */\nfunction silhouetteMetric(points, labels) {\n    const values = silhouette(points, labels);\n    return max(values);\n}\n\nexport default silhouetteMetric;\n", "/**\n * Relative error.\n *\n * This is more difficult to calculate than it first appears [1,2].  The usual\n * formula for the relative error between an actual value A and an expected\n * value E is `|(A-E)/E|`, but:\n *\n * 1. If the expected value is 0, any other value has infinite relative error,\n *    which is counter-intuitive: if the expected voltage is 0, getting 1/10th\n *    of a volt doesn't feel like an infinitely large error.\n *\n * 2. This formula does not satisfy the mathematical definition of a metric [3].\n *    [4] solved this problem by defining the relative error as `|ln(|A/E|)|`,\n *    but that formula only works if all values are positive: for example, it\n *    reports the relative error of -10 and 10 as 0.\n *\n * Our implementation sticks with convention and returns:\n *\n * - 0 if the actual and expected values are both zero\n * - Infinity if the actual value is non-zero and the expected value is zero\n * - `|(A-E)/E|` in all other cases\n *\n * [1] https://math.stackexchange.com/questions/677852/how-to-calculate-relative-error-when-true-value-is-zero\n * [2] https://en.wikipedia.org/wiki/Relative_change_and_difference\n * [3] https://en.wikipedia.org/wiki/Metric_(mathematics)#Definition\n * [4] F.W.J. Olver: \"A New Approach to Error Arithmetic.\" SIAM Journal on\n *     Numerical Analysis, 15(2), 1978, 10.1137/0715024.\n *\n * @param {number} actual The actual value.\n * @param {number} expected The expected value.\n * @return {number} The relative error.\n */\nfunction relativeError(actual, expected) {\n    if (actual === 0 && expected === 0) {\n        return 0;\n    }\n    return Math.abs((actual - expected) / expected);\n}\n\nexport default relativeError;\n", "import epsilon from \"./epsilon.js\";\nimport relativeError from \"./relative_error.js\";\n\n/**\n * Approximate equality.\n *\n * @param {number} actual The value to be tested.\n * @param {number} expected The reference value.\n * @param {number} tolerance The acceptable relative difference.\n * @return {boolean} Whether numbers are within tolerance.\n */\nfunction approxEqual(actual, expected, tolerance = epsilon) {\n    return relativeError(actual, expected) <= tolerance;\n}\n\nexport default approxEqual;\n", "/**\n## mapp.utils.csvDownload()\n\n@module /utils/csvDownload\n*/\n\nexport default function csvDownload(data, params = {}) {\n\n  if (!Array.isArray(data)) {\n    console.warn('Array argument for csvDownload must be an array')\n    return;\n  }\n\n  // Set comma as default separator.\n  params.separator ??= ','\n\n  const rows = data.map(record => {\n\n    let row = Array.isArray(params.fields)\n     ? fieldsFunction(record, params.fields)\n     : Object.values(record)\n     \n    return row.join(params.separator)\n  })\n\n  // Set default type for the blob.\n  params.type ??= 'text/csv;charset=utf-8;'\n\n  params.join ??= '\\r\\n'\n\n  params.title ??= 'file'\n\n  if (params.header && Array.isArray(params.fields)) {\n\n    // Unshift the header row with either the title or field names.\n    rows.unshift(params.fields.map(field => field.title || field.field))\n  }\n\n  const blob = new Blob([rows.join(params.join)], { type: params.type })\n\n  const link = document.createElement('a')\n\n  link.download = `${params.title}.csv`\n  link.href = URL.createObjectURL(blob)\n  link.dataset.downloadurl = ['csv', link.download, link.href].join(':')\n  link.style.display = 'none'\n  document.body.append(link)\n  link.click()\n  link.remove()\n}\n\nfunction fieldsFunction(record, fields) {\n\n  return fields.map(field => {\n\n    if (!field.field) return;\n\n    // Escape quotes in string value.\n    if (typeof record[field.field] === 'string' && field.string) {\n\n      return `\"${record[field.field].replaceAll('\"', '\\\\\"')}\"`\n    }\n\n    // Format number toLocaleString\n    if (field.formatter === 'toLocaleString') {\n\n      let val = parseFloat(record[field.field])\n\n      if (isNaN(val)) return;\n\n      return `\"${val.toLocaleString(field.locale || navigator.language, field.options)}\"`\n    }\n\n    return record[field.field]\n\n  })\n}", "/**\n## mapp.utils.convert()\n\n@module /utils/convert\n*/\n\nlet promise, convert;\n\nasync function moduleImport() {\n\n  if (!promise) promise = new Promise(async resolve => {\n\n    import('https://cdn.skypack.dev/convert@4')\n      .then(mod => resolve(convert = mod.convert))\n\n  })\n\n  await promise\n}\n\nexport default async (value, params) => {\n\n  await moduleImport()\n\n  value = parseFloat(value)\n\n  if (params.units && params.convertTo) {\n\n    value = convert(value, params.units).to(params.convertTo);\n  }\n\n  value = value.toFixed(params.decimals || 0)\n\n  value = value.toLocaleString(params.locale || 'en-GB')\n\n  return `${params.prefix || ''}${value}${params.suffix || ''}`\n}", "/**\n## mapp.utils.copyToClipboard()\n\n@module /utils/copyToClipboard\n*/\n\n// Create temporary textarea to copy string to clipboard.\nexport function copyToClipboard(str) {\n\n  let textArea = document.body.appendChild(mapp.utils.html.node`\n    <textarea style=\"visibility=none;\">`);\n  \n  textArea.value = str;\n  textArea.select();\n  document.execCommand('copy');\n  textArea.remove();\n\n}", "/**\n## mapp.utils.dataURLtoBlob()\n\n@module /utils/dataURLtoBlob\n*/\n\nexport function dataURLtoBlob(dataURL) {\n\n  if (dataURL.indexOf(';base64,') == -1) {\n    let\n      parts = dataURL.split(','),\n      contentType = parts[0].split(':')[1],\n      raw = parts[1];\n  \n    return new Blob([raw], { type: contentType });\n  }\n  \n  let\n    parts = dataURL.split(';base64,'),\n    contentType = parts[0].split(':')[1],\n    raw = window.atob(parts[1]),\n    uInt8Array = new Uint8Array(raw.length);\n  \n  for (let i = 0; i < raw.length; ++i) {\n    uInt8Array[i] = raw.charCodeAt(i);\n  }\n  \n  return new Blob([uInt8Array], { type: contentType });\n}", "/**\n## mapp.utils.hexa()\n\n@module /utils/hexa\n*/\n\nexport default (hex, transparency) => {\n  if (isNaN(transparency)) return hex;\n\n  if (hex.length === 7) return hex + (transparency && parseInt(transparency * 255).toString(16) || '00');\n\n  if (hex.length === 4) return hex + parseInt(transparency * 15).toString(16);\n\n  return hex;\n}\n", "/**\nExports the default loadPlugins utility method as mapp.utils.loadPlugins().\n\n@module /utils/loadPlugins\n*/\n\n/**\n@function loadPlugins\n\n@description\nThe loadPlugins utility method receives an array argument of src string locations.\n\nThe method creates an array of promises to load each plugin from the provided source.\n\nAll import promises must be resolved for the loadPlugins method to resolve.\n\nThe endsWith argument can be used to provide an array of string conditions on which the plugin src string must end to be loaded.\n\n@param {Array} plugins Array of plugin src location strings.\n@param  {Array} endsWith Array of strings to limit which plugins should be loaded. Defaults to ['.js','.mjs']\n\n@returns {Promise} The promise returned from the method will resolve once all [plugin] import promises are settled.\n*/\n\nexport default function loadPlugins(plugins, endsWith = ['.js','.mjs']) {\n\n  if (!Array.isArray(plugins)) return;\n\n  return new Promise(resolveAll => {\n\n    const promises = plugins\n      .filter(plugin => endsWith.some(_this => plugin.endsWith(_this)))\n      .map(\n        plugin =>\n          new Promise((resolve, reject) =>\n            import(plugin)\n              .then(mod => {\n                resolve(mod)\n              })\n              .catch(err => {\n                console.warn(`Failed to load plugin: ${plugin}`)\n                console.error(err);\n                reject(err)\n              })))\n\n    Promise\n      .allSettled(promises)\n      .then(() => {\n        resolveAll()\n      })\n      .catch(err => {\n        console.error(err)\n        resolveAll()\n      })\n\n  })\n}", "/**\n## mapp.utils.getCurrentPosition()\n\n@module /utils/getCurrentPosition\n*/\n\nexport default function (callback, options = {\n  //enableHighAccuracy: false,\n  //timeout: 3000,\n  //maximumAge: 0\n}) {\n\n  navigator.geolocation.getCurrentPosition(\n    callback,\n    err => console.error(err),\n    options)\n\n}", "/**\n## merge.mjs\n\nImported by _utils.mjs to assign the exported default method mergeDeep as mapp.utils.merge().\n\n@module /utils/merge\n*/\n\n/**\n### mapp.utils.merge()\n\nThe mergeDeep utility method will set the source object's own enumerable string-keyed property values on a target object.\n\nmergeDeep will call itself recursively allowing to merge nested objects.\n\nAn empty target object can be provided to effectively clone a source object.\n\nInstances of HTMLElement objects will be ignored by the merge method.\n\nArrays will not be merged. The source array will overwrite a target array.\n\n@function mergeDeep\n@param {*} target \n@param  {...any} sources \n*/\n\nexport default function mergeDeep(target, ...sources) {\n\n  // No sources to merge.\n  if (!sources.length) {\n    return target;\n  }\n\n  // Shift first source out of sources array.\n  const source = sources.shift();\n\n  // target & source are both objects.\n  if (isObject(target) && isObject(source)) {\n\n    const proto = Object.getPrototypeOf(target)\n\n    // Iterate over object keys in source.\n    for (const key in source) {\n\n      // Key must not be in target object prototype.\n      if (proto[key]) {\n        console.warn(`Prototype polution detected for key: ${key}`)\n\n      // HTMLElement objects must not be merged.\n      } else if (source[key] instanceof HTMLElement) {\n        console.warn(source[key])\n\n      // source[key] is object with potential nesting.\n      } else if (isObject(source[key])) {\n\n        // Target key must be an object.\n        target[key] ??= {}\n\n        // Call recursive merge for target key object.\n        mergeDeep(target[key], source[key]);\n\n      // source[key] could be null, true, false, or Array object\n      } else {\n\n        target[key] = source[key]\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\nfunction isObject(item) {\n\n  if (item === true) return false;\n\n  if (item === false) return false;\n\n  if (item === null) return false;\n\n  if (Array.isArray(item)) return false;\n\n  if (typeof item === 'object') return true;\n}", "/**\n## mapp.utils.paramString()\nThis module creates a parameter string for an XHR request.\n\n@module /utils/paramString\n*/\n\n/**\nCreates a parameter string for an XHR request based on the provided parameters object.\n\nThe function takes an object params as input and performs the following steps:\n1. It returns an empty string if params is falsy.\n2. It applies a series of filters to the entries of params:\n    - It filters out entries where the value is not 0 or truthy.\n    - It filters out entries where the value is an empty functional bracket string ('{}').\n    - It filters out entries where the value is an object with zero length or an object with empty object values.\n3. It maps the remaining entries to a string representation:\n    - If the value is a non-array object, it stringifies the value and encodes it as a URI component.\n    - Otherwise, it encodes the key-value pair as a URI string.\n4. It joins the mapped entries with '&' to create the parameter string.\n5. It returns the resulting parameter string.\n@function paramString\n@param {Object} params - The object containing the parameters.\n@returns {string} The parameter string.\n */\n// Create param string for XHR request.\nexport default params => {\n\n  if (!params) return ''\n\n  const paramsString = Object.entries(params)\n\n    // Value should be 0 or truthy\n    .filter(entry => entry[1] === 0 || !!entry[1])\n\n    // Value must not be empty functional brackets.\n    .filter(entry => entry[1] !== '{}')\n\n    // Filter out zero length array and objects with empty object values.\n    .filter(entry => typeof entry[1] !== 'object'\n      || entry[1].length\n      || Object.values(entry[1]).some(val => typeof val === 'object' && Object.keys(val).length))\n\n    .map(entry => {\n\n      // Stringify non array objects.\n      if (typeof entry[1] === 'object' && !Array.isArray(entry[1])) {\n\n        return `${entry[0]}=${encodeURIComponent(JSON.stringify(entry[1]))}`\n      }\n\n      return encodeURI(`${entry[0]}=${entry[1]}`)\n\n    }).join('&')\n\n  return paramsString\n}", "/**\n## mapp.utils.polygonIntersectFeatures()\n\n@module /utils/polygonIntersectFeatures\n*/\n\n/**\n * Checks if features intersect with a drawn polygon on a map view.\n * @function polygonIntersectFeatures\n * @param {Object} params - The parameters for the function.\n * @param {Object} params.mapview - The map view instance.\n * @param {Function} [params.drawendCallback] - Callback function to be called with intersecting features.\n * @param {Object} [params.interaction] - Additional interaction options to be merged with the default config.\n */\nexport function polygonIntersectFeatures(params) {\n\n  if (!params.mapview) return;\n\n  function getArrayDepth(arr) {\n    return Array.isArray(arr) ?\n      1 + Math.max(0, ...arr.map(getArrayDepth)) :\n      0;\n  }\n\n  // Config for mapview draw interaction.\n  let interaction = {\n\n    // Draw polygon.\n    type: 'Polygon',\n\n    drawend: e => {\n\n      const poly = e.feature\n\n      const polyGeom = poly.getGeometry()\n\n      let features = params.mapview.interaction.snap.source.getFeatures()\n\n      features = features\n        .filter(feature => {\n\n          let coordinates = feature.getGeometry().getCoordinates()//.flat(2)\n\n          coordinates = coordinates.flat(getArrayDepth(coordinates) - 2)\n\n          return coordinates.some(coord => polyGeom.intersectsCoordinate(coord))\n        })\n\n      if (params.drawendCallback) {\n\n        params.drawendCallback(features)\n      }\n    },\n    ...params\n  }\n\n  // Initiate drawing on mapview with config as interaction argument.\n  params.mapview.interactions.draw(interaction)\n}", "/**\n## mapp.utils.promiseAll{}\n\n@module /utils/promiseAll\n*/\n\nexport default promises => new Promise((resolveAll, rejectAll) => {\n\n  Promise\n    .all(promises)\n    .then(resolveAll)\n    .catch(error => {\n      console.error(error)\n      rejectAll(error)\n    })\n\n})", "/**\n## mapp.utils.queryParams()\n\n@module /utils/queryParams\n*/\n\nexport default _this => {\n\n  // If queryparams is not an object, return.\n  if (typeof _this.queryparams !== 'object') {\n    console.warn('queryparams must be an object')\n    return;\n  };\n\n  // The layer queryparam must be true to support viewport params.\n  _this.queryparams.layer = _this.queryparams.layer || _this.viewport\n\n  // Assign table from layer JSON or layer.tableCurrent() method. \n  _this.queryparams.table &&= typeof _this.queryparams.table === 'string'? _this.queryparams.table: getTable(_this)\n\n  // Get bounds from mapview.\n  const bounds = _this.viewport && _this.layer.mapview.getBounds();\n\n  // Get center from mapview.\n  const center = _this.queryparams.center && ol.proj.transform(\n    _this.layer.mapview.Map.getView().getCenter(),\n    `EPSG:${_this.layer.mapview.srid}`,\n    `EPSG:4326`)\n\n  return {\n\n    // Spread the queryparams object.\n    ..._this.queryparams,\n\n    // Queries will fail if the template can not be accessed in workspace.\n    template: encodeURIComponent(_this.query),\n\n    // Layer filter can only be applied if the layer is provided as reference to a layer object in the layers list.\n    filter: _this.queryparams.filter ? _this.layer.filter?.current : undefined,\n\n    // Locale param is only required for layer lookups.\n    locale: _this.queryparams.layer ? _this.layer.mapview.locale.key : undefined,\n\n    // Layer param is only required for layer lookups.\n    layer: _this.queryparams.layer ? _this.layer.key : undefined,\n\n    // ID will be taken if a location object is provided with the params.\n    id: _this.queryparams.id ? _this.location?.id : undefined,\n\n    // qID will be taken if a location object is provided with the params.\n    qID: _this.queryparams.qID ? _this.location?.layer?.qID : undefined,\n    \n    // Email will be taken if a location object is provided with the params.\n    email: _this.queryparams.email ? mapp.user.email : undefined,\n\n    // lat lng must be explicit or the center flag param must be set.\n    lat: center && center[1],\n    lng: center && center[0],\n\n    // z will be generated if the z flag is set in the params.\n    z: _this.queryparams?.z && _this.layer.mapview.Map.getView().getZoom(),\n\n    // Viewport will only be generated if the viewport flag is set on the params.\n    viewport: bounds && [bounds.west, bounds.south, bounds.east, bounds.north, _this.layer.mapview.srid],\n\n    // The fieldValues array entries should not be part of the url params.\n    fieldValues: undefined\n  }\n}\n\nfunction getTable(_this) {\n\n  return _this.location?.layer?.table\n    || _this.layer?.table\n    || _this.location?.layer?.tableCurrent?.()\n    || _this.layer?.tableCurrent?.()\n    || _this.location?.layer?.tableCurrent?.()\n    || _this.layer?.tables && Object.values(_this.layer.tables).find(table => !!table)\n    || _this.location?.layer?.tables && Object.values(_this.location?.layer.tables).find(table => !!table)\n}", "/**\n### /utils/olStyle\n\nThe olStyle utility module exports the default olStyle method.\n\n@module /utils/olStyle\n*/\n\n/**\n@global\n@typedef {Object} style\nA JSON mapp-style object.\n@property {string} [svg] The SVG source for the icon.\n@property {string} [type] The type of the icon.\n@property {Array|Object} [icon] The icon configuration or an array of icon configurations.\n@property {number} [width] The width of the icon or symbol.\n@property {number} [height] The height of the icon or symbol.\n@property {string} [strokeColor] The stroke color of the line symbol.\n@property {number} [strokeWidth] The stroke width of the line symbol.\n@property {string} [fillColor] The fill color of the polygon symbol.\n@property {number} [fillOpacity] The fill opacity of the polygon symbol.\n*/\n\n/**\n@function olStyle\n\n@description\nThe olStyle method takes a mapp-style JSON representation to create an Openlayers style object for rendering Openlayers features in the Openlayers mapview.Map.\n\n@param {style} style A JSON mapp-style object.\n\n@returns {Object} An Openlayers feature style object.\n*/\n\nexport default function olStyle(style, feature) {\n\n  if (!style) return;\n\n  // Array for OL Style objects.\n  const Styles = []\n\n  // The style object must always be processed as an array.\n  style = Array.isArray(style) ? style : [style]\n\n  // Iterate through style array.\n  style.forEach(style => {\n\n    // Only process icon for features if they are point geometries.\n    if (style.icon) {\n\n      // Iterate through icon style array.\n      if (Array.isArray(style.icon)) {\n\n        style.icon.forEach(icon => iconStyle(style, icon))\n      } else {\n\n        iconStyle(style, style.icon)\n      }      \n\n      function iconStyle(style, icon) {\n\n        // Calculate scale for icon render.\n        let scale = icon.scale || 1\n        scale *= style.scale || 1\n        scale *= style.clusterScale || 1\n        scale *= style.zoomInScale || 1\n        scale *= style.zoomOutScale || 1\n        scale *= style.highlightScale || 1\n\n        // Create icon url from svgSymbols method if not defined as url or svg source.\n        icon.url = icon.url || icon.svg || mapp.utils.svgSymbols[icon.type || 'dot'](icon, feature)\n\n        if (!icon.url) return;\n\n        // Push OL icon Style into Styles array.\n        Styles.push(new ol.style.Style({\n          image: new ol.style.Icon({\n            src: icon.url,\n            crossOrigin: 'anonymous',\n            scale: scale,\n            anchor: icon.anchor || [0.5, 0.5],\n          }),\n          zIndex: style.zIndex\n        }))\n      }\n    } \n    \n    if (style.fillColor || style.strokeColor) {\n\n      // Create OL fill.\n      let fill = style.fillColor && new ol.style.Fill({\n        color: mapp.utils.hexa(style.fillColor, style.fillOpacity)\n      })\n\n      // Create OL stroke.\n      let stroke = style.strokeColor && new ol.style.Stroke({\n        color: mapp.utils.hexa(style.strokeColor, style.strokeOpacity),\n        width: parseFloat(style.strokeWidth || 1)\n      })\n\n      // Push OL vector Style into Styles array.\n      Styles.push(new ol.style.Style({ fill, stroke, zIndex: style.zIndex }))\n    }\n\n    // Create label style if label text is not undefined.\n    if (typeof style.label?.text !== 'undefined') {\n\n      const text = new ol.style.Text({\n        font: style.label.font || '12px sans-serif',\n        text: String(style.label.text),\n        overflow: style.label.overflow,\n        offsetY: style.label.offsetY,\n        offsetX: style.label.offsetX,\n        stroke: style.label.strokeColor && new ol.style.Stroke({\n          color: style.label.strokeColor,\n          width: style.label.strokeWidth || 1\n        }),\n        fill: new ol.style.Fill({\n          color: style.label.fillColor || '#000'\n        })\n      })\n\n      // Push OL text Style into Styles array.\n      Styles.push(new ol.style.Style({ text, zIndex: style.zIndex }))\n    }\n\n  })\n\n  // Set Styles object to cache style.\n  feature?.set?.('Styles', Styles, true)\n  \n  return Styles\n}", "/**\n## mapp.utils.svgSymbols{}\n\n@module /utils/svgSymbols\n*/\n\nimport { svg } from 'uhtml'\n\nconst xmlSerializer = new XMLSerializer()\n\nconst memoizedIcons = {\n  dot: new Map()\n}\n\nexport function dot(style) {\n\n  let lookup = Object.values({\n    fillColor: style.fillColor\n  }).reduce((a, b) => a + b)\n  \n  if (memoizedIcons.dot.has(lookup)) return memoizedIcons.dot.get(lookup)\n\n  let icon = svg.node`\n    <svg width=24 height=24 viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n      <circle cx=13 cy=13 r=10 fill='#333'></circle>\n      <circle cx=12 cy=12 r=10 fill=${style.fillColor || '#fff'}></circle>`\n\n  icon = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n\n  memoizedIcons.dot.set(lookup, icon)\n\n  return icon\n}\n\nexport function target(style) {\n\n  const icon = svg.node`\n    <svg width=24 height=24 viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n      <circle cx=13 cy=13 fill='#333' r=10 opacity=0.4></circle>\n      <circle cx=12 cy=12 r=10 fill=${style.fillColor || '#FFF'}>`\n\n  style.layers && Object.entries(style.layers).forEach(layer => {\n\n    icon.appendChild(svg.node`<circle cx=12 cy=12 r=${parseFloat(layer[0]) * 10} fill=${layer[1]}>`)\n  })\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function triangle(style) {\n\n  const icon = svg.node`\n    <svg width=24 height=24 viewBox='${`0 0 24 24`}' xmlns='http://www.w3.org/2000/svg'>\n      <polygon\n        points=\"12,4.68 2,22 22,22\" \n        fill=\"#333\" stroke=\"#333\" opacity=0.4 stroke-opacity=0.4 stroke-width=3\n        stroke-linejoin=\"round\"/>`\n\n  icon.appendChild(svg.node`\n    <polygon\n      fill=${style.fillColor || '#FFF'} stroke=${style.fillColor || '#FFF'} stroke-width=2\n      points=\"12,4.68 2,22 22,22\"  stroke-linejoin=\"round\"/>`)\n\n  style.layers && Object.entries(style.layers).forEach(layer => {\n\n    function x(val, scale) {\n      return 12 + (val - 12) * scale\n    }\n\n    function y(val, scale) {\n      return 16 + (val - 16) * scale\n    }\n\n    let points = `${x(12, layer[0])},${y(4.68, layer[0])} ${x(2, layer[0])}, ${y(22, layer[0])} ${x(22, layer[0])}, ${y(22, layer[0])}`\n\n    icon.appendChild(svg.node`\n      <polygon\n        points=\"${points}\"\n        fill=${layer[1]}\n        stroke=${layer[1] || '#FFF'}\n        stroke-width=1\n        stroke-linejoin=\"round\"/>`)\n  })\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function square(style) {\n\n  const icon = svg.node`\n    <svg width=24 height=24 viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n      <rect fill='#333' opacity=0.3 width=20 height=20 x=2 y=2 rx=1></rect>\n      <rect fill=${style.fillColor || '#FFF'} width=20 height=20 x=0 y=0 rx=1></rect>`\n\n  style.layers && Object.entries(style.layers).forEach(layer => {\n\n    icon.appendChild(svg.node`\n      <rect fill=${layer[1]}\n        width=${parseFloat(layer[0]) * 20}\n        height=${parseFloat(layer[0]) * 20}\n        x=${10*(1-parseFloat(layer[0]))}\n        y=${10*(1-parseFloat(layer[0]))} rx=${parseFloat(layer[0])}></rect>`)\n  })\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function diamond(style) {\n\n  const icon = svg.node`\n    <svg width=24 height=24 viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n      <polygon\n        fill='#333'\n        opacity=0.3\n        points=\"12 0, 24 12, 12 24, 0 12\"></polygon>\n      <polygon\n        fill=${style.fillColor || '#FFF'}\n        points=\"12 0, 24 12, 12 24, 0 12\"></polygon>`\n\n  function s(val, scale) {\n    return 12 + (val - 12) * scale\n  }\n\n  style.layers && Object.entries(style.layers).forEach(layer => {\n    \n    let points = `${s(12, layer[0])} ${s(0, layer[0])},${s(24, layer[0])} ${s(12, layer[0])},${s(12, layer[0])} ${s(24, layer[0])}, ${s(0, layer[0])} ${s(12, layer[0])}`\n\n    icon.appendChild(svg.node`\n      <polygon\n        fill=${layer[1] || '#FFF'}\n        points=\"${points}\"></polygon>`)\n  })\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function semiCircle(style) {\n\n  const icon = svg.node`\n    <svg width=30 height=30 viewBox='0 0 20 24' xmlns='http://www.w3.org/2000/svg'>\n      <defs>\n        <clipPath id=\"cut-off-shade\">\n          <rect x=\"0\" y=\"0\" width=\"24\" height=\"11\"/>\n        </clipPath>\n        <clipPath id=\"cut-off\">\n          <rect x=\"0\" y=\"0\" width=\"24\" height=\"10\"/>\n        </clipPath>\n      </defs>\n      <circle cx=\"11\" cy=\"10\" r=\"10\" clip-path=\"url(#cut-off-shade)\" fill=\"#333\" opacity=0.4></circle>\n      <circle cx=10 cy=10 r=10 fill=${style.fillColor || '#FFF'} clip-path=\"url(#cut-off-shade)\">`\n\n  style.layers && Object.entries(style.layers).forEach(layer => {\n    \n    icon.appendChild(svg.node`\n      <circle cx=10 cy=10 r=${parseFloat(layer[0]) * 10} fill=${layer[1]} clip-path=\"url(#cut-off-shade)\">`)\n\n  })\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function markerLetter(style) {\n\n  const icon = svg.node`\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"${style.color}\"\n        d=\"M 12 1.969 C 7.878 1.969 4.813 5.239 4.813 9.328 C 4.813 10.554 5.222 12.189 6.244 14.028 C 8.289 17.504 12 22 12 22 C 12 22 16.055 17.504 18.099 14.028 C 19.122 12.189 19.341 10.963 19.341 9.328 C 19.341 5.239 16.054 1.969 12 1.969 Z\"/>\n      <circle cx=\"12.17192400568182\" cy=\"8.918683238636365\" r=\"5.109789772727275\" fill=\"rgb(255, 255, 255)\"/>\n      <text x=\"12\" y=\"12\" style=\"text-anchor: middle; font-weight: 600; font-size: 9px; font-family: sans-serif; fill: rgb(85, 85, 85);\">\n      ${style.letter}`\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function markerColor(style) {\n\n  const icon = svg.node`\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path style=\"opacity: 0.5;\" fill=\"${style.colorMarker}\"\n        d=\"M 10.797 1.238 C 6.308 1.238 2.716 4.83 2.716 9.32 C 2.716 11.116 3.165 12.463 4.287 14.483 C 6.532 18.3 9.952 23.234 9.952 23.234 C 9.952 23.234 15.063 18.3 17.308 14.483 C 18.43 12.463 18.879 11.116 18.879 9.32 C 18.879 4.83 15.287 1.238 10.797 1.238 Z\"/>\n      <path fill=\"${style.colorMarker}\"\n        d=\"M 10 1.238 C 5.51 1.238 2.144 4.83 2.144 9.32 C 2.144 10.667 2.593 12.463 3.716 14.483 C 5.961 18.3 10 23.238 10 23.238 C 10 23.238 14.491 18.3 16.736 14.483 C 17.859 12.463 18.1 11.116 18.1 9.32 C 18.1 4.83 14.49 1.238 10 1.238 Z\"/>\n      <circle cx=\"10.226\" cy=\"8.871\" r=\"5.612\" opacity=\"0.8\" fill=\"rgb(255, 255, 255)\"/>\n      <circle cx=\"10.226\" cy=\"8.871\" r=\"2.806\" opacity=\"0.8\" fill=\"${style.colorDot}\"/>`\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\nexport function circle(style) {\n\n  const icon = svg.node`\n    <svg width=24 height=24 viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'>\n      <circle cx=16 cy=16 r=10\n        stroke=\"${style.strokeColor || '#333'}\"\n        stroke-width=\"${style.strokeWidth || 1}\"\n        fill=\"#ffffff33\">`\n\n  return `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n}\n\n// Assign template method to svgSymbols.\nexport function template(icon) {\n\n  // Get svgString from svgSymbol.templates.\n  let svgString = mapp.utils.svgSymbols.templates?.[icon.template]\n\n  // Return undefined if svgString not found in templates.\n  if (!svgString) return;\n\n  // Iterate through the icon.substitute entries.\n  if (typeof icon.substitute === 'object') {\n\n    Object.entries(icon.substitute).forEach((entry) => {\n\n      // Replace substitute key with values.\n      svgString = svgString.replaceAll(entry[0], entry[1]);\n    });\n  }\n\n  // Return encoded string.\n  return `data:image/svg+xml,${encodeURIComponent(svgString)}`;\n}", "/** \n * ### mapp.utils.userIndexedDB\n * This [indexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology) implementation allows to store, get, and update a locale object from the 'locales' object store in a user indexedDB.\n * \n * There are many different operations that the indexedDB can handle. Typically the operations are CRUD.\n * \n * The `userIndexDB` methods have all been moved to the `mapp.utils` object.\n * \n * The logic for initialisation for the userIndexedDB object is the following:\n * - `userIndexedDB.open(store)` will open a DB with the following name `${mapp.user.email} - {mapp.user.title}.\n * - The database will not be created if there is a pre-existing DB. \n * - The creation will trigger the `onupgradeneeded` event which checks whether the request `store` exists in the userIndexedDB.\n * \n * The `process.env.TITLE` will be added to the user object in the cookie module.\n * The `user.title` is required to generate a unique indexedDB for each user[email/instance[title]]\n * \n * All object stores use the key value as a keypath for object indicies.\n * \n * Adding the url parameter `useridb=true` will ask the default script to get the keyed locale from the user indexedDB. \n * The userLocale will be assigned as locale if available.\n * \n * ```js\n *   if (mapp.hooks.current.useridb) {\n\n    let userLocale = await mapp.utils.userIndexedDB.get('locales', locale.key)\n\n    if (!userLocale) {\n      await mapp.utils.userIndexedDB.add('locales', locale)\n    } else {\n      locale = userLocale\n    }\n  }\n * ```\n *\n * The userIDB plugin adds a button to put [update] the locale in the user indexedDB.\n * \n * ```js\n * export function userIDB(plugin, mapview) {\n\n  // Find the btnColumn element.\n  const btnColumn = document.getElementById('mapButton');\n\n  if (!btnColumn) return;\n\n  // Append the plugin btn to the btnColumn.\n  btnColumn.append(mapp.utils.html.node`\n    <button\n      title=\"Update userIDB locale\"\n      onclick=${()=>{\n\n        mapp.utils.userIndexedDB.put('locales', mapview.locale)\n\n      }}>\n      <div class=\"mask-icon\" style=\"mask-image:url(https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsoutlined/rule_settings/default/24px.svg)\">`);\n}\n * ```\n * This can be tested but updating the mapview.locale in another plugin, e.g. dark_mode\n * \n * The enabled status will be stored with the local applying the setting when the locale is loaded with the useridb=true url param.\n * \n * ```js\n * mapp.plugins.dark_mode = (plugin, mapview) => {\n\n  // Get the map button\n  const mapButton = document.getElementById(\"mapButton\");\n\n  // If mapbutton doesn't exist, return (for custom views).\n  if (!mapButton) return;\n\n  // toggle dark_mode if enabled in config.\n  mapview.locale.dark_mode.enabled && toggleDarkMode()\n\n  // If the button container exists, append the dark mode button.\n  mapButton.append(mapp.utils.html.node`\n    <button\n      title=\"Color Mode\"\n      class=\"btn-color-mode\"\n      onclick=${()=>{\n        mapview.locale.dark_mode.enabled = toggleDarkMode()\n      }}>\n      <div class=\"mask-icon\">`);\n}\n * ```\n *  \n * @module /utils/userIndexedDB\n */\n\nlet IDB\n\n/**\n * @param {Object} store \n * @returns {Promise} OpenDBPromise\n */\nexport async function openDB(_store) {\n\n  const store = _store.toString()\n\n  const OpenDBPromise = new Promise((resolve, reject) => {\n\n    // will create a new database if db/version doesn't exist.\n    const IDBRequest = indexedDB.open(`${mapp.user.email} - ${mapp.user.title}`, 3);\n\n    IDBRequest.onerror = (event) => {\n      console.error(IDBRequest.error)\n      resolve(IDBRequest)\n    };\n\n    IDBRequest.onsuccess = (event) => {\n\n      if (!event.target.result.objectStoreNames.contains(store)) {\n\n        console.warn(`UserIDB doesn't contain \"${store}\" objectStore.`)\n\n        IDB = null\n        resolve()\n      }\n\n      IDB = event.target.result\n      resolve()\n    }\n\n    // will be called on database versioning.\n    IDBRequest.onupgradeneeded = (event) => {\n\n      // onsuccess method will be called after the object store is created.\n      event.target.result.createObjectStore(store, { keyPath: 'key' });\n    };\n  })\n\n  await OpenDBPromise\n\n  return OpenDBPromise\n}\n\n/**\n * - deletes the user indexedDB.\n * @function deleteDB\n */ \nexport function deleteDB() {\n\n  if (!mapp.user) return;\n\n  indexedDB.deleteDatabase(`${mapp.user.email} - ${mapp.user.title}`)\n\n  console.log('Database deleted')\n}\n\n/**\n * - Adds the keyed object to the named store.\n * - The key will be returned on success. \n * - Adding the same keyed object twice will result in an error.\n * @function add\n * @param {Object} store \n * @param {Object} obj \n * @returns {Promise} addPromise\n */\nexport async function add(store, obj) {\n\n  if (!IDB) await openDB(store)\n\n  const addPromise = new Promise((resolve, reject) => {\n\n    const IDBTransaction = IDB.transaction([store], 'readwrite');\n\n    const objectStore = IDBTransaction.objectStore(store)\n\n    const IDBRequest = objectStore.add(obj);\n\n    IDBRequest.onerror = (event) => {\n      console.error(IDBRequest.error)\n      resolve(IDBRequest)\n    };\n\n    IDBRequest.onsuccess = (event) => {\n      resolve(event.target.result)\n    };\n  })\n\n  await addPromise\n\n  return addPromise\n}\n\n/**\n * - Gets the keyed object from the named store.\n * @param {Object} store \n * @param {string} key \n * @returns {Promise} getPromise\n */\nexport async function get(store, key) {\n\n  if (!IDB) await openDB(store)\n\n  const getPromise = new Promise((resolve, reject) => {\n\n    const IDBTransaction = IDB.transaction([store], 'readwrite');\n\n    const objectStore = IDBTransaction.objectStore(store)\n\n    const IDBRequest = objectStore.get(key);\n\n    IDBRequest.onerror = (event) => {\n      console.error(IDBRequest.error)\n      reject(IDBRequest)\n    };\n\n    IDBRequest.onsuccess = (event) => {\n      resolve(IDBRequest.result)\n    };\n  })\n\n  await getPromise\n\n  return getPromise\n}\n\n/**\n * - puts the keyed object to the named store. \n * - This will override the existing keyed object. \n * - Updates work by replacing (put) the same keyed object into an user indexedDB.\n * @param {Object} store \n * @param {Object} obj \n * @returns {Promise} updatePromise\n */\nexport async function put(store, obj) {\n\n  if (!IDB) await openDB(store)\n\n  const updatePromise = new Promise((resolve, reject) => {\n\n    const IDBTransaction = IDB.transaction([store], 'readwrite');\n\n    const objectStore = IDBTransaction.objectStore(store)\n\n    const IDBRequest = objectStore.put(obj);\n\n    IDBRequest.onerror = (event) => {\n      console.error(IDBRequest.error)\n      reject(IDBRequest)\n    };\n\n    IDBRequest.onsuccess = (event) => {\n      resolve(IDBRequest.result)\n    };\n  })\n\n  await updatePromise\n\n  return updatePromise\n}\n", "/**\n## mapp.utils.gazetteer{}\n\n@module /utils/gazetteer\n*/\n\nexport function datasets(term, gazetteer) {\n\n  if (!gazetteer.provider) {\n\n    // The default gazetteer config is for a dataset search.\n    // Abort current dataset query. Onload will not be called.\n    gazetteer.xhr?.abort()\n    gazetteer.xhr = new XMLHttpRequest()\n    gazetteer.qterm && search(gazetteer)\n  }\n\n  // Search additional datasets.\n  gazetteer.datasets?.forEach(dataset => {\n\n    // Abort current dataset query. Onload will not be called.\n    dataset.xhr?.abort()\n    dataset.xhr = new XMLHttpRequest()\n\n    search({\n      layer: gazetteer.layer,\n      table: gazetteer.table,\n      query: gazetteer.query,\n      qterm: gazetteer.qterm,\n      label: gazetteer.label,\n      title: gazetteer.title,\n      limit: gazetteer.limit,\n      no_result: gazetteer.no_result,\n      leading_wildcard: gazetteer.leading_wildcard,\n      callback: gazetteer.callback,\n      maxZoom: gazetteer.maxZoom,\n      ...dataset\n    })\n  })\n\n  function search(dataset) {\n\n    const layer = gazetteer.mapview.layers[dataset.layer]\n\n    // Skip if layer defined in datasets is not added to the mapview\n    if (!layer) {\n\n      console.warn('No layer definition for gazetteer search.')\n      return;\n    }\n\n    // Skip if layer table is not defined and no table is defined in dataset or gazetteer.\n    if (!layer.table && !dataset.table) {\n\n      console.warn('No table definition for gazetteer search.')\n      return;\n    };\n  \n    dataset.xhr.open('GET', gazetteer.mapview.host + '/api/query?' +\n      mapp.utils.paramString({\n        template: dataset.query || 'gaz_query',\n        label: dataset.label || dataset.qterm,\n        qterm: dataset.qterm,\n        qID: layer.qID,\n        locale: gazetteer.mapview.locale.key,\n        layer: layer.key,\n        filter: layer.filter?.current,\n        table: dataset.table || layer.table,\n        wildcard: '*',\n        term: `${dataset.leading_wildcard ? '*' : ''}${term}*`,\n        limit: dataset.limit || 10\n      }))\n\n    dataset.xhr.setRequestHeader('Content-Type', 'application/json')\n    dataset.xhr.responseType = 'json'\n    dataset.xhr.onload = e => {\n\n      // The gazetteer input may have been cleared prior to the onload event.\n      if (!gazetteer.input.value.length) return;\n\n      if (e.target.status >= 300) return;\n\n      // No results\n      if (!e.target.response) {\n        if (dataset.no_result === null) return;\n        gazetteer.list.append(mapp.utils.html.node`\n          <li>\n            <span class=\"label\">${dataset.title || layer.name}</span>\n            <span>${dataset.no_result || mapp.dictionary.no_results}</span>`)\n        return;\n      }\n\n      // Ensure that response if a flat array.\n      [e.target.response].flat().forEach(row => {\n\n        gazetteer.list.append(mapp.utils.html.node`\n          <li onclick=${e => {\n\n            if (dataset.callback) return dataset.callback(row, dataset);\n\n            mapp.location.get({\n              layer,\n              id: row.id\n            }).then(loc => loc?.flyTo?.(dataset.maxZoom))\n\n          }}>\n            <span class=\"label\">${dataset.title || layer.name}</span>\n            <span>${row.label}</span>`)\n      })\n\n    }\n\n    dataset.xhr.send()\n  }\n}\n\nexport function getLocation(location, gazetteer) {\n\n  if (typeof gazetteer.callback === 'function') {\n    gazetteer.callback(location)\n    return;\n  }\n\n  const coord = ol.proj.transform(\n    [location.lng, location.lat],\n    `EPSG:4326`,\n    `EPSG:${gazetteer.mapview.srid}`\n  )\n\n  if (!ol.extent.containsCoordinate(gazetteer.mapview.extent, coord)) {\n    alert(mapp.dictionary.invalid_lat_lon);\n    return;\n  }\n\n  Object.assign(location, {\n    layer: {\n      mapview: gazetteer.mapview\n    },\n    Layers: [],\n    hook: location.label\n  })\n\n  const infoj = [\n    {\n      title: location.label,\n      value: location.source,\n      inline: true\n    },\n    {\n      type: 'pin',\n      value: [location.lng, location.lat],\n      srid: '4326',\n      class: 'display-none',\n      location\n    }\n  ]\n\n  if (gazetteer.streetview) {\n\n    gazetteer.streetview.key && infoj.push({\n      type: 'streetview',\n      key: gazetteer.streetview.key,\n      location\n    })\n\n  }\n\n  mapp.location.decorate(Object.assign(location, { infoj }))\n\n  gazetteer.mapview.locations[location.hook] = location\n\n  location.flyTo(gazetteer.maxZoom)\n}", "/**\n## mapp.utils.verticeGeoms()\n\n@module /utils/verticeGeoms\n*/\n\nexport default feature => {\n\n  const geometry = feature.getGeometry()\n\n  if (geometry.getType() === 'Point') return new ol.geom.Point(geometry.getCoordinates())\n\n  let coords = geometry.getCoordinates()\n\n  let depth = getDepth(coords)\n\n  // Line string will have a depth of 2.\n  if (depth === 2) {\n    return new ol.geom.MultiPoint(coords)\n  }\n\n  // Coords with a depth of more than 3 indicate multi geoms.\n  coords = depth > 3 ? coords.flat(2) : coords[0]\n\n  return new ol.geom.MultiPoint(coords)\n}\n\nfunction getDepth(arr) {\n  return Array.isArray(arr) ?\n    1 + Math.max(0, ...arr.map(getDepth)) :\n    0;\n}", "/**\n## mapp.utils.xhr(params)\n\nThe default method of the xhr module returns a promise which resolves with an response from a XMLHttpRequest.\n\n@module /utils/xhr\n\n*/ /**\n\nThe params object/string for the xhr utility method is required.\n\nThe params are assumed to the request URL if provided as a string argument.\n\nThe request params and response are stored in a Map() if the cache flag is set in the params object argument.\n\nThe method is assumed to be 'POST' if a params.body is provided.\n\n@function default\n@param {Object} params The object containing the parameters.\n@param {string} params.url The request URL.\n@param {string} [params.method=GET] The request method.\n@param {string} [params.responseType=json] The XHR responseType.\n@param {Object} [params.requestHeader={'Content-Type': 'application/json'}] The XHR requestHeader.\n@param {string} [params.body] A stringified request body for a 'POST' request.\n@param {boolean} [params.resolveTarget] Whether the target instead of target.response should be resolved.\n@param {boolean} [params.cache] Whether the response should be cached in a Map().\n@returns {Promise} A promise that resolves with the XHR.\n*/\n\nconst requestMap = new Map()\n\nexport default params => new Promise(resolve => {\n\n  // Return if params are falsy.\n  if (!params) {\n    console.error(`xhr params are falsy.`)\n    return;\n  }\n\n  // Set params as object with url from string.\n  params = typeof params === 'string' ? { url: params } : params\n\n  // A request url must be provided.\n  if (!params.url) {\n    console.error(`no xhr request url has been provided.`)\n    return;\n  };\n\n  // Check whether a request with the same params has already been resolved.\n  if (params.cache && requestMap.has(params)) return resolve(requestMap.get(params))\n\n  // Assign 'GET' as default method if no body is provided.\n  params.method ??= params.body ? 'POST' : 'GET'\n\n  const xhr = new XMLHttpRequest()\n\n  xhr.open(params.method, params.url)\n\n  // Use requestHeader: null to prevent assignment of requestHeader.\n  if (params.requestHeader !== null) {\n\n    // Butter (spread) over requestHeader.\n    const requestHeader = {\n      'Content-Type': 'application/json',\n      ...params.requestHeader\n    }\n\n    Object.entries(requestHeader).forEach(entry => xhr.setRequestHeader(...entry))\n  }\n\n  xhr.responseType = params.responseType || 'json'\n\n  xhr.onload = e => {\n\n    if (e.target.status >= 400) {\n      resolve(new Error(e.target.status))\n      return;\n    }\n\n    // Cache the response in the requestMap\n    params.cache && requestMap.set(params, e.target.response)\n\n    resolve(params.resolveTarget ? e.target : e.target.response)\n  }\n\n  xhr.onerror = (e) => resolve(new Error(e))\n\n  xhr.send(params.body)\n})", "/**\n@module /utils/numericFormatter\n*/\n\n/**\n@function formatNumericValue\n\n@description\nThe formatNumericValue method will attempt to format params.newValue or params.value as localeString by passing the formatterParams to the localeString() method.\n\n0 must be 0.\n\nNULL is a number and must be parsed as float to be not a number [!isNaN].\n\nThe prefix and suffix are concatenated with the localString as params.stringValue.\n\nUnless the formatterParams are NULL the mapp.language property will be assigned as locale for the localeString.\n\nThe maximumFractionDigits will be set to 0 for integer type params.\n\nThe maximumFractionDigits can be configured as params.round property.\n\n@param {Object} params The config object argument.\n@property {String} params.suffix Suffix appended to stringValue.\n@property {String} params.prefix Prefix prepended to stringValue.\n@property {Object} params.formatterParams Configuration for the localeString creation.\n@property {String} [params.type] \"integer\" type params must be formatted with maximumFractionDigits=0.\n@property {Integer} [params.round] The round value will be assigned as maximumFractionDigits for the localeString options argument.\n\n@returns {string} The concatenated stringValue.\n*/\nexport function formatNumericValue(params) {\n\n  // suffix and prefix should be empty string if undefined.\n  params.prefix ??= ''\n  params.suffix ??= ''\n\n  // numericValue must not be a number if either value is null.\n  const numericValue = params.newValue !== undefined\n    ? parseFloat(params.newValue)\n    : parseFloat(params.value)\n\n  params.localeString = ''\n\n  if (params.formatterParams === undefined) {\n\n    // Assign default formatterParams.\n    params.formatterParams = {\n      locale: mapp.language\n    }\n  }\n\n  if (params.formatterParams === null && !isNaN(numericValue)) {\n\n    // Assign numericValue as string if formatterParams are null.\n    params.localeString = numericValue.toString()\n\n  } else if (!isNaN(numericValue)) {\n\n    // Assign mapp.language as default locale.\n    params.formatterParams.locale ??= mapp.language;\n\n    params.formatterParams.options ??= {}\n\n    // \"integer\" type values must not have fraction digits.\n    params.formatterParams.options.maximumFractionDigits ??= params.round || params.type === 'integer' ? 0 : 2\n\n    params.localeString = numericValue.toLocaleString(\n      params.formatterParams.locale,\n      params.formatterParams.options)\n  }\n\n  // The trailing fraction character will be store by the unformatStringvalue method if present.\n  params.lastCharacter ||= ''\n\n  params.stringValue = `${params.prefix}${params.localeString}${params.lastCharacter}${params.suffix}`\n\n  return params.stringValue\n}\n\n/**\n@function unformatStringValue\n\n@description\nThe unformatStringValue will splice the suffix and prefix from a stringValue and remove seperators as defined by the localeString locale.\n\nThe numeric value will be returned as parsed float.\n\n@param {Object} params The config object argument.\n@property {String} params.suffix Suffix to be removed from stringValue.\n@property {String} params.prefix Prefix to be removed from stringValue.\n@property {Object} params.formatterParams Configuration for the localeString.\n\n@returns {numeric} A numeric value extracted from the stringValue.\n*/\nexport function unformatStringValue(params) {\n\n  if (!params.stringValue) return null;\n\n  let stringValue = params.stringValue\n\n  if (params.prefix) {\n\n    // Remove prefix string.\n    stringValue = stringValue.replace(params.prefix, '')\n  }\n\n  if (params.suffix) {\n\n    // Remove suffix string.\n    stringValue = stringValue.replace(params.suffix, '')\n  }\n\n  if (stringValue.length && params.formatterParams?.locale) {\n\n    // Determine decimal separator and fraction characters. \n    const chars = (1234.5).toLocaleString(params.formatterParams?.locale).match(/(\\D+)/g);\n\n    // Remove the decimal separator from stringValue.\n    stringValue = stringValue.split(chars[0]).join('');\n\n    delete params.lastCharacter\n\n    // Preserve fraction character at end of stringValue\n    if (stringValue.endsWith(chars[1])) {\n      params.lastCharacter = chars[1]\n    }\n\n    // Preserve 0 fraction at end of stringValue\n    if (stringValue.endsWith(chars[1]+0)) {\n      params.lastCharacter = chars[1]+0\n    }    \n    \n    // Replace the fraction character with dot in stringValue.\n    stringValue = stringValue.split(chars[1]).join('.');\n  }\n\n  if (stringValue === '') return null;\n\n  return parseFloat(stringValue);\n}\n", "/**\n## mapp.utils{}\n\n@module /utils\n*/\n\n// import from node modules\nimport {render, html, svg} from 'uhtml'\n\nimport * as stats from 'simple-statistics'\n\n/**\n## mapp.utils.areSetsEqual()\n@function areSetsEqual\n@memberof module:/utils\n*/\nconst areSetsEqual = (a, b) => a.size === b.size && [...a].every(value => b.has(value))\n\nimport csvDownload from './csvDownload.mjs'\n\n/**\n## mapp.utils.compose()\n@function compose\n@memberof module:/utils\n*/\nconst compose = (...fns) => {\n  return arg => fns.reduce((acc, fn) => {\n    return fn(acc);\n  }, arg)\n}\n\nimport convert from './convert.mjs'\n\nimport {copyToClipboard} from './copyToClipboard.mjs'\n\nimport {dataURLtoBlob} from './dataURLtoBlob.mjs'\n\nimport {default as hexa} from './hexa.mjs'\n\nimport loadPlugins from './loadPlugins.mjs'\n\nimport getCurrentPosition from './getCurrentPosition.mjs'\n\nimport merge from './merge.mjs'\n\nimport paramString from './paramString.mjs'\n\nimport {polygonIntersectFeatures} from './polygonIntersectFeatures.mjs'\n\nimport promiseAll from './promiseAll.mjs'\n\nimport queryParams from './queryParams.mjs'\n\nimport style from './olStyle.mjs'\n\nimport * as svgSymbols from './svgSymbols.mjs'\n\nimport * as userIndexedDB from './userIndexedDB.mjs'\n\nimport * as gazetteer from './gazetteer.mjs'\n\nimport {default as verticeGeoms} from './verticeGeoms.mjs'\n\nimport xhr from './xhr.mjs'\n\nimport { formatNumericValue, unformatStringValue } from './numericFormatter.mjs';\n\nexport default {\n  stats,\n  render,\n  html,\n  svg,\n  convert,\n  areSetsEqual,\n  compose,\n  copyToClipboard,\n  csvDownload,\n  dataURLtoBlob,\n  formatNumericValue,\n  unformatStringValue,\n  gazetteer,\n  getCurrentPosition,\n  hexa,\n  loadPlugins,\n  merge,\n  olScript: ()=>mapp.ol.load(),\n  paramString,\n  polygonIntersectFeatures,\n  promiseAll,\n  queryParams,\n  style,\n  svgSymbols,\n  userIndexedDB,\n  verticeGeoms,\n  xhr,\n}", "/**\n## mapp.hooks{}\n\nThe mapp.hooks{} module parses, updates, and stores URL parameter.\n\n```js\n{\n  current: {\n    layers: [],\n    locations: [],\n  },\n  set,\n  parse,\n  remove,\n  removeAll,\n  push,\n  filter,\n}\n```\n\n@module /hooks\n*/\n\nconst hooks = {\n  current: {\n    layers: [],\n    locations: [],\n  },\n  set,\n  parse,\n  remove,\n  removeAll,\n  push,\n  filter,\n}\n\nexport default hooks;\n\n/**\n## mapp.hooks.parse()\nThe method parses key/value pairs of URL searchParams from the document window.location.href.\n\n@function parse\n*/\n\nfunction parse() {\n  \n  const url = new URL(window.location.href);\n\n  // Iterate over the search parameters\n  for (const [key, value] of url.searchParams.entries()) {\n    // string 'false' should be boolean false\n    if (value === 'false') {\n      hooks.current[key] = false;\n      continue;\n    }\n    // string 'true' should be boolean true\n    if (value === 'true') {\n      hooks.current[key] = true;\n      continue;\n    }\n    // layers and locations should always be arrays\n    if (key === 'locations' || key === 'layers') {\n      hooks.current[key] = decodeURIComponent(value).split(',');\n      continue;\n    }\n\n    hooks.current[key] = value.includes(',') ? decodeURIComponent(value).split(',') : value;\n  }\n\n  // Strip token from url\n  if (hooks.current.token) {\n    url.searchParams.delete('token');\n    window.history.replaceState({}, document.title, url.toString());\n    delete hooks.current.token;\n  }\n}\n\n/**\n## mapp.hooks.set()\nThe set method will assign a URL params object to the hooks.current{} before calling the pushState() method.\n\n@function set\n\n@param {Object} _hooks\nA params object to be assigned to the hooks.current.\n*/\n\nfunction set(_hooks) {\n\n  Object.assign(hooks.current, _hooks)\n\n  pushState()\n}\n\n// Remove hook from mapp.hooks.current and URI.\nfunction remove(key) {\n\n  if (Array.isArray(hooks.current[key])) {\n\n    hooks.current[key].length = 0\n\n  } else {\n\n    delete hooks.current[key]\n  }\n\n  pushState()\n}\n\n// Remove all hooks.\nfunction removeAll() {\n\n  Object.keys(hooks.current).forEach(key => remove(key))\n\n  pushState()\n}\n\n// Push key into an array hook.\nfunction push(key, val) {\n\n  if (hooks.current[key]) {\n\n    if (hooks.current[key].indexOf(val) < 0) hooks.current[key].push(val)\n\n  } else {\n\n    hooks.current[key] = [val]\n  }\n\n  pushState()\n}\n\n// Filter key from an array hook.\nfunction filter(key, val) {\n\n  hooks.current[key] = hooks.current[key].filter(el => el !== val)\n\n  pushState()\n}\n\n// Pushes changes to the url parameter.\nfunction pushState() {\n\n  try {\n    window.history.pushState({},\n      document.title,\n      `?${mapp.utils.paramString(hooks.current)}`)\n\n  } catch (me) {\n    console.log(me)\n  }\n}", "export default {\n  save: 'Save',\n  cancel: 'Cancel',\n  confirm_delete: 'Are you sure you want to delete this feature? This cannot be undone.',\n  invalid_geometry: 'Invalid geometry',\n  no_results: 'No results for this search',\n};", "export default {\n  save: 'Speichern',\n  cancel: 'Abbrechen',\n  confirm_delete: 'Best\u00E4tigung des L\u00F6schvorgang',\n  invalid_geometry: 'Ung\u00FCltige Geometrie',\n  no_results: 'Suche ist ergebnislos',\n};", "export default {\n  save: 'Sauvegarde',\n  cancel: 'Annuler',\n  confirm_delete: '\u00CAtes-vous s\u00FBr de vouloir supprimer ? \u00C7a ne peut pas \u00EAtre annul\u00E9.',\n  invalid_geometry: 'G\u00E9om\u00E9trie non valide',\n  no_results: 'Pas de r\u00E9sultats pour cette recherche',\n};\n", "export default {\n  save: 'Zapisz',\n  cancel: 'Zrezygnuj',\n  confirm_delete: 'Czy jeste\u015B pewny, \u017Ce chcesz usun\u0105\u0107? To nie mo\u017Ce by\u0107 cofni\u0119te.',\n  invalid_geometry: 'Wadliwa geometria',\n  no_results: 'Brak wynik\u00F3w dla tego poszukiwania',\n};\n", "export default {\n  save: '\u4FDD\u5B58',\n  cancel: '\u30AD\u30E3\u30F3\u30BB\u30EB',\n  confirm_delete: '\u30D5\u30A3\u30FC\u30C1\u30E3\u3092\u672C\u5F53\u306B\u524A\u9664\u3057\u307E\u3059\u304B\u3002\u53D6\u308A\u6D88\u3057\u4E0D\u53EF',\n  invalid_geometry: '\u7121\u52B9\u306E\u30B8\u30AA\u30E1\u30C8\u30EA\u30FC',\n  no_results: '\u7D50\u679C\u306A\u3057',\n};\n", "export default {\n  save: '\u4FDD\u5B58',\n  cancel: '\u53D6\u6D88',\n  confirm_delete: '\u60A8\u786E\u5B9A\u8981\u5220\u9664\u5417\uFF1F \u8FD9\u5C06\u65E0\u6CD5\u64A4\u6D88\u3002',\n  invalid_geometry: '\u65E0\u6548\u56FE\u5F62',\n  no_results: '\u672A\u627E\u5230\u76F8\u5173\u7ED3\u679C',\n};", "export default {\n  save: '\u4FDD\u5B58',\n  cancel: '\u53D6\u6D88',\n  confirm_delete: '\u60A8\u78BA\u5B9A\u8981\u522A\u9664\u55CE\uFF1F \u9019\u5C07\u7121\u6CD5\u64A4\u92B7\u3002',\n  invalid_geometry: '\u7121\u6548\u5716\u5F62',\n  no_results: '\u672A\u627E\u5230\u76F8\u95DC\u7D50\u679C',\n};\n", "export default {\n  save: 'Salvar',\n  cancel: 'Cancelar',\n  confirm_delete: '\u00BFEstas seguro que quieres borrarlo? No se puede deshacer.',\n  invalid_geometry: 'Geometr\u00EDa no v\u00E1lida',\n  no_results: 'No hay resultados para esta b\u00FAsqueda',\n};\n", "export default {\n  save: 'Salva',\n  cancel: 'Cancella',\n  confirm_delete: 'Sei sicuro di voler eliminare questo elemento? Questa operazione non pu\u00F2 essere annullata. ',\n  invalid_geometry: 'Geometria non valida',\n  no_results: 'Nessun risultato per questa ricerca',\n};\n", "export default {\n  save: 'Kaydet',\n  cancel: 'Iptal Et',\n  confirm_delete: 'Bu sekli silmek istediginizden emin misiniz? Bu islem geri alinamaz.',\n  invalid_geometry: 'Gecersiz geometri',\n  no_results: 'Sonuc bulunamadi',\n};\n", "export default {\n  save: '\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01',\n  cancel: '\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01',\n  confirm_delete: '\u0E04\u0E38\u0E13\u0E41\u0E19\u0E48\u0E43\u0E08\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\u0E27\u0E48\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E04\u0E38\u0E13\u0E25\u0E31\u0E01\u0E29\u0E13\u0E30\u0E19\u0E35\u0E49 \u0E2A\u0E34\u0E48\u0E07\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01\u0E44\u0E14\u0E49',\n  invalid_geometry: '\u0E40\u0E23\u0E02\u0E32\u0E04\u0E13\u0E34\u0E15\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07',\n  no_results: '\u0E44\u0E21\u0E48\u0E21\u0E35\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E04\u0E49\u0E19\u0E2B\u0E32\u0E19\u0E35\u0E49',\n};\n", "// Importing language translations for each language\nimport en from './en.mjs'; // English\nimport de from './de.mjs'; // German\nimport fr from './fr.mjs'; // French\nimport pl from './pl.mjs'; // Polish\nimport ja from './ja.mjs'; // Japanese\nimport zh from './cn.mjs'; // Chinese (Simplified)\nimport zh_tw from './cn_trad.mjs'; // Chinese (Traditional)\nimport esp from './esp.mjs'; // Spanish\nimport it from './it.mjs'; // Italian\nimport tr from './tr.mjs'; // Turkish\nimport th from './th.mjs'; // Thai\n\n/**\n## mapp.dictionaries{}\nModule exporting language translations for various languages.\n\n@module /dictionaries\n\n@property {object} en English translations\n@property {object} de German translations\n@property {object} fr French translations\n@property {object} pl Polish translations\n@property {object} ja Japanese translations\n@property {object} zh Chinese (Simplified) translations\n@property {object} zh_tw Chinese (Traditional) translations\n@property {object} esp Spanish translations\n@property {object} it Italian translations\n@property {object} tr Turkish translations\n@property {object} th Thai translations\n*/\n\n// Exporting an object containing language translations for various languages\nexport default {\n  en: en,\n  de: de,\n  fr: fr,\n  pl: pl,\n  ja: ja,\n  zh: zh,\n  zh_tw: zh_tw,\n  esp: esp,\n  it: it,\n  tr: tr,\n  th: th\n}\n", "/**\n### mapp.layer.decorate()\nDecorates a layer object with additional properties and methods.\n\nA mapview must be assigned to the layer object in order to decorate a layer.\n\nThe layer decorator passes the layer to a defined format method which assigns the Openlayers layer object (L).\n\nCommon interface methods such as layer.show, and hide are assigned to the layer object.\n\nA blank layer.filter object will be set if the filter has not been defined in the JSON layer.\n\nThe first theme from the layer.style.themes array will be assigned as layer.style.theme if not already set.\n\nAny plugins matching layer keys will be executed with the layer being passed as argument to the plugin method.\n\nThe layer object is returned from the decorator.\n\n@module /layer/decorate\n*/\n\n/**\n@function decorator\n@async\n\n@description\nThe layer decorator method create mapp-layer typedef object from a json-layer.\n\n@param {object} layer JSON layer.\n\n@returns {layer} Decorated Mapp Layer.\n*/\n\nexport default async function decorate(layer) {\n\n  // Decorate layer format methods.\n  await mapp.layer.formats[layer.format]?.(layer);\n\n  // If layer does not exist, return.\n  if (!layer.L) return;\n\n  // Assign show, hide, and other methods to the layer object.\n  Object.assign(layer, {\n    show,\n    showCallbacks: [],\n    hide,\n    hideCallbacks: [],\n    tableCurrent,\n    geomCurrent,\n    zoomToExtent,\n  });\n\n  // Warn if outdated layer.edit configuration is used.\n  // Set layer.draw to layer.edit if it exists.\n  if (layer.edit) {\n    console.warn(`Layer: ${layer.key}, please update edit:{} to use draw:{} as layer.edit has been superseeded with layer.draw to be in line with the OL drawing interaction.`);\n    layer.draw = Object.assign(layer.draw || {}, layer.edit);\n  }\n\n  // Layer must have an empty draw config to allow for role-based assignment of drawing methods.\n  layer.draw ??= {};\n\n  // Warn if outdated layer.draw.delete configuration is used.\n  if (layer.draw?.delete) {\n    console.warn(`Layer: ${layer.key}, please move draw.delete to use layer.deleteLocation:true.`);\n  }\n\n  // Set layer filter.\n  layer.filter = {\n    current: {},\n    ...layer.filter\n  }\n\n  // Set layer opacity from style.\n  layer.L.setOpacity(layer.style?.opacity || 1);\n\n  // Check which infoj entries should be skipped.\n  if (Array.isArray(layer.infoj_skip)) {\n\n    layer.infoj\n      .filter(entry => [\n        entry.key,\n        entry.field,\n        entry.query,\n        entry.type,\n        entry.group]\n\n        // Some object property value is included in infoj_skip array.\n        .some(val => layer.infoj_skip.includes(val)))\n\n      // Set skipEntry flag if some entry property is included in infoj_skip array.\n      .forEach(entry => entry.skipEntry = true)\n  }\n\n  // Call layer and/or plugin methods.\n  Object.keys(layer).forEach((key) => {\n    typeof mapp.layer[key] === 'function' && mapp.layer[key]?.(layer);\n    typeof mapp.plugins[key] === 'function' && mapp.plugins[key]?.(layer);\n  });\n\n  return layer;\n}\n\n/**\nShows the layer on the map.\n@function show\n@memberof module:/layer/decorate\n*/\nfunction show() {\n\n  // Push the layer into the layers hook array.\n  this.mapview.hooks && mapp.hooks.push('layers', this.key);\n\n  this.display = true;\n\n  try {\n\n    // Add layer to map\n    this.mapview.Map.addLayer(this.L);\n  } catch {\n    // Will catch assertation error when layer is already added.\n  }\n\n  // Reload layer data if available.\n  this.reload instanceof Function && this.reload();\n\n  // Add layer attribution to mapview attribution.\n  this.mapview.attribution?.check();\n\n  // Execute showCallbacks\n  this.showCallbacks?.forEach(fn => fn instanceof Function && fn(this));\n}\n\n/**\n * Hides the layer from the map.\n * @memberof module:layer/decorate\n * @function hide\n */\nfunction hide() {\n\n  this.display = false;\n\n  // Remove OL layer from mapview.\n  this.mapview.Map.removeLayer(this.L);\n\n  // Remove layer attribution from mapview attribution.\n  this.mapview.attribution?.check();\n\n  // Filter the layer from the layers hook array.\n  if (this.mapview.hooks && !this.zoomDisplay) {\n    mapp.hooks.filter('layers', this.key);\n  }\n\n  // Execute hideCallbacks\n  this.hideCallbacks?.forEach(fn => fn instanceof Function && fn(this));\n}\n\n/**\n * Returns the current table associated with the layer.\n * @memberof module:layer/decorate\n * @function tableCurrent\n * @returns {string} - The current table associated with the layer.\n */\nfunction tableCurrent() {\n\n  // Return the current table if it exists.\n  if (!this.tables) return this.table;\n\n  let table;\n\n  // Get current zoom level from mapview.\n  const zoom = parseInt(this.mapview.Map.getView().getZoom());\n\n  // Get zoom level keys from layer.tables object.\n  const zoomKeys = Object.keys(this.tables);\n\n  // Get first zoom level key from array.\n  const minZoomKey = parseInt(zoomKeys[0]);\n  const maxZoomKey = parseInt(zoomKeys[zoomKeys.length - 1]);\n\n  // Get the table for the current zoom level.\n  table = this.tables[zoom];\n\n  // Get the first table if the current zoom level is smaller than the min.\n  table = zoom < minZoomKey ? this.tables[minZoomKey] : table;\n\n  // Get the last table if the current zoom level is larger than the max.\n  table = zoom > maxZoomKey ? this.tables[maxZoomKey] : table;\n\n  return table;\n}\n\n/**\n * Returns the current geometry associated with the layer.\n * @memberof module:layer/decorate\n * @function geomCurrent\n * @returns {string} - The current geometry associated with the layer.\n */\nfunction geomCurrent() {\n  // Return the current geometry if it exists.\n  if (!this.geoms) return this.geom;\n\n  let geom;\n\n  // Get current zoom level from mapview.\n  const zoom = parseInt(this.mapview.Map.getView().getZoom());\n\n  // Get zoom level keys from layer.tables object.\n  const zoomKeys = Object.keys(this.geoms);\n\n  // Get first zoom level key from array.\n  const minZoomKey = parseInt(zoomKeys[0]);\n  const maxZoomKey = parseInt(zoomKeys[zoomKeys.length - 1]);\n\n  // Get the geometry for the current zoom level.\n  geom = this.geoms[zoom];\n\n  // Get the first geometry if the current zoom level is smaller than the min.\n  geom = zoom < minZoomKey ? this.geoms[minZoomKey] : geom;\n\n  // Get the last geometry if the current zoom level is larger than the max.\n  geom = zoom > maxZoomKey ? this.geoms[maxZoomKey] : geom;\n\n  return geom;\n}\n\n/**\n * Zooms to a specific extent on the map.\n * @memberof module:layer/decorate\n * @async\n * @function zoomToExtent\n * @param {Object} params - Parameters for zooming to extent.\n * @returns {Promise<boolean>} - A promise that resolves with a boolean indicating the success of the operation.\n */\nasync function zoomToExtent(params) {\n  // Zooms to a specific extent.\n\n  // XMLHttpRequest to layer extent endpoint\n  let response = await mapp.utils.xhr(`${this.mapview.host}/api/query/layer_extent?` +\n    mapp.utils.paramString({ // build query string for the url\n      dbs: this.dbs,\n      locale: this.mapview.locale.key,\n      layer: this.key,\n      table: this.table || Object.values(this.tables)[0] || Object.values(this.tables)[1],\n      geom: this.geom,\n      proj: this.srid,\n      srid: this.mapview.srid,\n      filter: this.filter.current\n    })\n  );\n\n  // If failed to fetch response\n  if (!response) {\n    return false;\n  }\n\n  // re matches text in parentheses\n  const bounds = /\\((.*?)\\)/.exec(response.box2d)[1].replace(/ /g, ',');\n\n  this.mapview.fitView( // fit the map view within bounds \n    bounds.split(',').map( // get a float array of bounds\n      coords => parseFloat(coords)\n    ),\n    params\n  );\n\n  return true;\n}", "/**\n### mapp.layer.formats/mbtiles()\n\n@module /layer/formats/mbtiles\n*/\n\nlet promise, maplibregl = null\n\nasync function MaplibreGL() {\n\n  if (maplibregl) return new maplibregl.Map(...arguments);\n\n  if (!promise) promise = new Promise(async resolve => {\n\n    console.warn(`The mbtiles layer format uses an outdated version of the maplibre-gl library. Please change the format to maplibre`)\n\n    Promise\n      .all([\n        import('https://cdn.skypack.dev/pin/maplibre-gl@v1.15.3-OFxGDsJNZ70P0Qa7CzNE/mode=imports,min/optimized/maplibre-gl.js')\n      ])\n      .then(imports => {\n  \n        maplibregl = imports[0]\n\n        resolve()\n      })\n      .catch(error => {\n        console.error(error.message)\n        alert('Failed to load MaplibreGL library. Please reload the browser.')\n      })\n  \n  })\n\n  await promise\n\n  return new maplibregl.Map(...arguments);\n}\n\nexport default async layer => {\n\n  const className = `mapp-layer-${layer.key} mbtiles`\n\n  layer.container = mapp.utils.html.node`<div \n    class=${className}\n    style=\"visibility: hidden; position: absolute; width: 100%; height: 100%;\">`\n  \n  layer.mapview.Map.getTargetElement().prepend(layer.container)\n\n  layer.Map = await MaplibreGL({\n    container: layer.container,\n    style: layer.mbStyle,\n    accessToken: layer.accessToken,\n    attributionControl: false,\n    boxZoom: false,\n    doubleClickZoom: false,\n    dragPan: false,\n    dragRotate: false,\n    interactive: false,\n    keyboard: false,\n    pitchWithRotate: false,\n    scrollZoom: false,\n    touchZoomRotate: false,\n    preserveDrawingBuffer: layer.preserveDrawingBuffer\n  });\n\n  layer.L =  new ol.layer.Layer({\n    key: layer.key,\n    className: `mapp-layer-${layer.key}`,\n    zIndex: layer.zIndex,\n    render: frameState => {\n\n      if (!layer.display) return\n\n      layer.container.style.visibility = 'visible';\n      \n      // adjust view parameters in mapbox\n      layer.Map.jumpTo({\n        center: ol.proj.toLonLat(frameState.viewState.center),\n        zoom: frameState.viewState.zoom - 1,\n        bearing: (-frameState.viewState.rotation * 180) / Math.PI,\n        animate: false\n      })\n\n      return layer.container;\n    }\n  })\n\n  // The Maplibre Map control must resize with mapview Map targetElement.\n  layer.mapview.Map.getTargetElement().addEventListener('resize', ()=>layer.Map.resize())\n\n}", "export default async (layer) => {\n\n  layer.style ??= {}\n\n  layer.style.mapType ??= 'roadmap'\n\n  layer.L = new ol.layer.WebGLTile({\n    key: layer.key,\n    className: `mapp-layer-${layer.key}`,\n    zIndex: layer.zIndex,\n    source: new ol.source.Google({\n      key: layer.apiKey,\n      scale: 'scaleFactor2x',\n      highDpi: true,\n      mapType: layer.style.mapType,\n      layerTypes: layer.style.layerTypes\n    })\n  })\n\n}\n", "/**\n### mapp.layer.formats.maplibre()\n\n@module /layer/formats/maplibre\n*/\n\n// Assign maplibre from window if already loaded.\nlet promise, maplibregl = window.maplibregl\n\nasync function MaplibreGL() {\n\n  if (maplibregl) return new maplibregl.Map(...arguments);\n\n  // Create promise to load maplibre from esm.sh\n  if (!promise) promise = new Promise(async resolve => {\n\n    try {\n\n      const mod = await import('https://esm.sh/maplibre-gl@4.0.2')\n\n      maplibregl = mod.default\n\n      // Avoid loading RTL Text Plugin twice, else it will error\n      if (!['deferred', 'loaded'].includes(maplibregl.getRTLTextPluginStatus())) {\n        maplibregl.setRTLTextPlugin(\n          'https://unpkg.com/@mapbox/mapbox-gl-rtl-text@0.2.3/mapbox-gl-rtl-text.min.js',\n          true // Lazy load the plugin\n        );\n      }\n\n      resolve()\n\n    } catch {\n\n      console.error('Failed to load maplibre-gl library.')\n      resolve()\n    }\n  })\n\n  await promise\n\n  if (!maplibregl) return;\n\n  return new maplibregl.Map(...arguments);\n}\n\nexport default async layer => {\n\n  const className = `mapp-layer-${layer.key} maplibre`\n\n  layer.container = mapp.utils.html.node`<div \n    class=${className}\n    style=\"visibility: hidden; position: absolute; width: 100%; height: 100%;\">`\n\n  layer.mapview.Map.getTargetElement().prepend(layer.container)\n\n  layer.Map = await MaplibreGL({\n    container: layer.container,\n    pixelRatio: 1,\n    style: layer.style.URL,\n    attributionControl: false,\n    boxZoom: false,\n    doubleClickZoom: false,\n    dragPan: false,\n    dragRotate: false,\n    interactive: false,\n    keyboard: false,\n    pitchWithRotate: false,\n    scrollZoom: false,\n    touchZoomRotate: false,\n    preserveDrawingBuffer: layer.preserveDrawingBuffer,\n    transformRequest: (url, resourceType) => {\n\n      if (url.indexOf('mapbox:') === 0) {\n        return transformMapboxUrl(url, resourceType, layer.accessToken)\n      }\n\n      // Do any other transforms you want\n      return { url }\n    }\n  });\n\n  if (!layer.Map) return;\n\n  // The Maplibre Map control must resize with mapview Map targetElement.\n  layer.mapview.Map.getTargetElement().addEventListener('resize', () => layer.Map.resize())\n\n  // Handle layer.style.zIndex deprecation.\n  if (layer.style.zIndex) {\n    console.warn(`Layer: ${layer.key}, layer.style.zIndex has been deprecated. Use layer.zIndex instead.`);\n  }\n\n  layer.L = new ol.layer.Layer({\n    key: layer.key,\n    zIndex: layer.zIndex,\n    render: frameState => {\n\n      if (!layer.display) return\n\n      layer.container.style.visibility = 'visible';\n\n      // adjust view parameters in mapbox\n      layer.Map.jumpTo({\n        center: ol.proj.toLonLat(frameState.viewState.center),\n        zoom: frameState.viewState.zoom - 1,\n        bearing: (-frameState.viewState.rotation * 180) / Math.PI,\n        animate: false\n      })\n\n      return layer.container;\n    }\n  })\n}\n\n// transformMapboxUrl and supporting functions are taken from https://github.com/rowanwins/maplibregl-mapbox-request-transformer\n\nfunction transformMapboxUrl(url, resourceType, accessToken) {\n\n  if (url.indexOf('/styles/') > -1 && url.indexOf('/sprite') === -1) {\n    return {\n      url: normalizeStyleURL(url, accessToken)\n    }\n  }\n\n  if (url.indexOf('/sprites/') > -1) {\n    return {\n      url: normalizeSpriteURL(url, accessToken)\n    }\n  }\n\n  if (url.indexOf('/fonts/') > -1) {\n    return {\n      url: normalizeGlyphsURL(url, accessToken)\n    }\n  }\n\n  if (url.indexOf('/v4/') > -1) {\n    return {\n      url: normalizeSourceURL(url, accessToken)\n    }\n  }\n\n  if (resourceType === 'Source') {\n    return {\n      url: normalizeSourceURL(url, accessToken)\n    }\n  }\n}\n\nfunction parseUrl(url) {\n\n  const parts = url.match(/^(\\w+):\\/\\/([^/?]*)(\\/[^?]+)?\\??(.+)?/);\n\n  if (!parts) {\n    throw new Error('Unable to parse URL object');\n  }\n\n  return {\n    protocol: parts[1],\n    authority: parts[2],\n    path: parts[3] || '/',\n    params: parts[4] ? parts[4].split('&') : []\n  };\n}\n\nfunction formatUrl(urlObject, accessToken) {\n\n  const apiUrlObject = parseUrl('https://api.mapbox.com');\n\n  urlObject.protocol = apiUrlObject.protocol;\n  urlObject.authority = apiUrlObject.authority;\n  urlObject.params.push(`access_token=${accessToken}`);\n\n  const params = urlObject.params.length ? `?${urlObject.params.join('&')}` : '';\n\n  return `${urlObject.protocol}://${urlObject.authority}${urlObject.path}${params}`;\n}\n\nfunction normalizeStyleURL(url, accessToken) {\n\n  const urlObject = parseUrl(url);\n\n  urlObject.path = `/styles/v1${urlObject.path}`;\n\n  return formatUrl(urlObject, accessToken);\n}\n\nfunction normalizeGlyphsURL(url, accessToken) {\n\n  const urlObject = parseUrl(url);\n\n  urlObject.path = `/fonts/v1${urlObject.path}`;\n\n  return formatUrl(urlObject, accessToken);\n}\n\nfunction normalizeSourceURL(url, accessToken) {\n\n  const urlObject = parseUrl(url);\n\n  urlObject.path = `/v4/${urlObject.authority}.json`;\n  urlObject.params.push('secure');\n\n  return formatUrl(urlObject, accessToken);\n}\n\nfunction normalizeSpriteURL(url, accessToken) {\n\n  const urlObject = parseUrl(url);\n  const path = urlObject.path.split('.');\n\n  urlObject.path = `/styles/v1${path[0]}/sprite.${path[1]}`;\n\n  return formatUrl(urlObject, accessToken);\n}", "/**\n### mapp.layer.formats.tiles()\nThis module defines the tiles format for map layers.\n\n@module /layer/formats/tiles\n*/\n\n/**\nThe function takes a layer object as input and performs the following steps:\n\n1. It sets default values for `layer.source` and `layer.projection` if they are not already defined.\n2. It creates a parameter string (`layer.paramString`) using the `mapp.utils.paramString` function, passing `layer.params` as an argument.\n3. It creates a new `ol.layer.Tile` object and assigns it to `layer.L`. The tile layer is configured with the following properties:\n   - `source`: A new instance of the tile source based on layer.source. The source is created using `ol.source[layer.source]` and is configured with the projection, url, and transition properties.\n   - `layer`: The layer object itself, allowing access to layer properties within the tile layer.\n   - `zIndex`: The z-index of the layer.\n@function tiles\n@param {Object} layer - The layer object.\n@param {string} [layer.source='OSM'] - The source of the tile layer (e.g., 'OSM', 'XYZ').\n@param {string} [layer.projection='EPSG:3857'] - The projection of the tile layer.\n@param {string} [layer.paramString] - The parameter string for the tile layer URL.\n@param {Object} [layer.params] - Additional parameters for the tile layer.\n@param {string} layer.URI - The base URI for the tile layer.\n@param {Object} [layer.style] - The style configuration for the layer.\n@param {number} [layer.zIndex=0] - The z-index of the layer.\n@param {ol.layer.Tile} layer.L - The OpenLayers tile layer object.\n*/\nexport default layer => {\n\n  layer.source ??= 'OSM'\n\n  layer.projection ??= 'EPSG:3857'\n\n  layer.paramString ??= mapp.utils.paramString(layer.params)\n\n  layer.L = new ol.layer.Tile({\n    key: layer.key,\n    className: `mapp-layer-${layer.key}`,\n    zIndex: layer.zIndex,\n    source: new ol.source[layer.source]({\n      projection: layer.projection,\n      url: layer.URI+layer.paramString,\n      transition: 0\n    })\n  })\n\n  if (layer.style?.contextFilter) {\n\n    layer.L.on('prerender', (evt) => {\n      if (evt.context) {\n        evt.context.filter = layer.style.contextFilter;\n        evt.context.globalCompositeOperation = 'source-over';\n      }\n    });\n    \n    layer.L.on('postrender', (evt) => {\n      if (evt.context) {\n        evt.context.filter = 'none';\n      }\n    });\n  }\n}", "/**\n### mapp.layer.formats.mvt()\nThis module defines the MVT (MapBox Vector Tile) format for map layers.\n@module /layer/formats/mvt\n*/\n\n/**\n * Configures the MVT format for a map layer.\n  @function mvt\n  @param {Object} layer - The layer object.\n  @param {string} [layer.srid='3857'] - The spatial reference system identifier (SRID) for the layer.\n  @param {Object} [layer.style{}] - The style object for the layer.\n  @param {Object} [layer.params{}] - Additional parameters for the layer.\n  @param {Object} [layer.tables{}] - An object of zoom [key] and table [value] for the layer.\n  @param {string[]} [layer.wkt_properties] - An array of properties to be retrieved as WKT (Well-Known Text) format.\n  @param {number} [layer.transition] - The transition duration for the layer.\n  @param {number} [layer.cacheSize] - The cache size for the layer.\n  @param {Object} layer.mapview - The mapview object.\n  @param {Object} layer.filter - The layer filter object.\n  @param {function} layer.tableCurrent - A function that returns the current table for the layer.\n  @param {function} layer.geomCurrent - A function that returns the current geometry for the layer.\n  @param {ol.layer.VectorTile} layer.L - The OpenLayers vector tile layer.\n  @returns {void}\n */\nexport default layer => {\n\n  // Assign default SRID if nullish.\n  layer.srid ??= '3857'\n\n  // If 4326, return an error as this is not supported anymore. \n  if (layer.srid !== '3857') {\n    console.warn(`Layer ${layer.key} must be set to use SRID 3857.`)\n    return;\n  }\n\n  // Update feature style config.\n  mapp.layer.styleParser(layer)\n\n  // Set default layer params if nullish.\n  layer.params ??= {}\n\n  if (layer.mvt_cache) {\n\n    console.warn(`Layer ${layer.key} mvt_cache has been disabled.`)\n  }\n\n  // MVT query must not have a viewport, this is defined by the tile extent.\n  delete layer.params.viewport\n\n  // Assigns changeEnd event/method for zoom restricted layers.\n  mapp.layer.changeEnd(layer)\n\n  layer.reload = () => {\n\n    if (layer.wkt_properties) {\n      changeEndLoad(layer)\n      return;\n    }\n\n    layer.source.clear()\n    layer.source.refresh()\n    layer.featureSource.refresh()\n  }\n\n  layer.clones = new Set()\n\n  // The snapSource is required for snap interactions on vector tile layer.\n  // The featureClasss is detrimental to the render performance.\n  layer.featureSource = new ol.source.VectorTile({\n    format: new ol.format.MVT({\n      featureClass: ol.Feature,\n      //idProperty: 'id'\n    }),\n    transition: 0,\n    cacheSize: 0,\n    tileUrlFunction: tileUrlFunction(layer)\n  })\n\n  // Define source for mvt layer.\n  layer.source = new ol.source.VectorTile({\n    format: new ol.format.MVT(),\n    transition: layer.transition,\n    cacheSize: layer.cacheSize\n  })\n\n  // Assign wkt properties load method.\n  if (layer.wkt_properties) {\n    layer.source.setTileUrlFunction(wktTileUrlFunction(layer))\n    layer.mapview.Map.getTargetElement().addEventListener('changeEnd', () => changeEndLoad(layer));\n\n  } else {\n\n    layer.source.setTileUrlFunction(tileUrlFunction(layer))\n  }\n\n  layer.L = new ol.layer.VectorTile({\n    key: layer.key,\n    className: `mapp-layer-${layer.key}`,\n    zIndex: layer.zIndex,\n    source: layer.source,\n    renderBuffer: 200,\n    //renderMode: 'vector',\n    style: mapp.layer.featureStyle(layer)\n  })\n}\n\n/**\n * Returns a function that generates the tile URL for a WKT-based layer.\n @function wktTileUrlFunction\n @param {Object} layer - The layer object.\n @param {string} layer.mapview.host - The host URL for the API.\n @param {Object} layer.mapview.locale - The locale object.\n @param {string} layer.mapview.locale.key - The key for the locale.\n @param {string} layer.mapview.srid - The SRID for the mapview.\n @param {string} layer.key - The key for the layer.\n @param {function} layer.tableCurrent - A function that returns the current table for the layer.\n @param {function} layer.geomCurrent - A function that returns the current geometry for the layer.\n @param {boolean} layer.display - A flag indicating whether the layer is displayed.\n @param {Set} [layer.clones] - A set of cloned layers.\n @param {ol.source.VectorTile} layer.source - The OpenLayers vector tile source.\n @returns {function} A function that generates the tile URL for the given tile coordinate.\n */\nfunction wktTileUrlFunction(layer) {\n\n  return tileCoord => {\n\n    const table = layer.tableCurrent()\n\n    // The layer has no data for this zoom level.\n    if (!table) {\n      layer.source.clear();\n      return;\n    }\n\n    // The layer does not display and doesn't have clones.\n    if (!layer.display && !layer.clones?.size) {\n      layer.source.clear();\n      return;\n    }\n\n    const geom = layer.geomCurrent()\n\n    const url = `${layer.mapview.host}/api/query?${mapp.utils.paramString({\n      template: 'mvt',\n      z: tileCoord[0],\n      x: tileCoord[1],\n      y: tileCoord[2],\n      locale: layer.mapview.locale.key,\n      layer: layer.key,\n      srid: layer.mapview.srid,\n      table,\n      geom\n    })}`\n\n    return url\n  }\n}\n\n/**\n * Returns a function that generates the tile URL for an MVT layer.\n @function tileUrlFunction\n @param {Object} layer - The layer object.\n @param {string} layer.mapview.host - The host URL for the API.\n @param {Object} layer.mapview.locale - The locale object.\n @param {string} layer.mapview.locale.key - The key for the locale.\n @param {string} layer.key - The key for the layer.\n @param {function} layer.tableCurrent - A function that returns the current table for the layer.\n @param {function} layer.geomCurrent - A function that returns the current geometry for the layer.\n @param {boolean} layer.display - A flag indicating whether the layer is displayed.\n @param {Set} [layer.clones] - A set of cloned layers.\n @param {Object} [layer.params] - Additional parameters for the layer.\n @param {Object} [layer.style] - The style object for the layer.\n @param {Object} [layer.style.theme] - The theme style object.\n @param {string|string[]} [layer.style.theme.fields] - The field(s) for the theme style.\n @param {string} [layer.style.theme.field] - The field for the theme style.\n @param {Object} [layer.style.label] - The label style object.\n @param {string} [layer.style.label.field] - The field for the label style.\n @param {Object} [layer.filter] - The filter object for the layer.\n @param {function} [layer.filter.current] - The current filter function for the layer.\n @param {ol.source.VectorTile} layer.source - The OpenLayers vector tile source.\n @returns {function} A function that generates the tile URL for the given tile coordinate.\n */\nfunction tileUrlFunction(layer) {\n\n  return tileCoord => {\n\n    const table = layer.tableCurrent()\n\n    // The layer has no data for this zoom level.\n    if (!table) {\n      layer.source.clear();\n      return;\n    }\n\n    // The layer does not display and doesn't have clones.\n    if (!layer.display && !layer.clones?.size) {\n      layer.source.clear();\n      return;\n    }\n\n    const geom = layer.geomCurrent()\n\n    // Create a set of feature properties for styling.\n    layer.params.fields = [...new Set([\n      layer.params.default_fields,\n      Array.isArray(layer.style.theme?.fields) ?\n        layer.style.theme.fields : layer.style.theme?.field,\n      layer.style.theme?.field,\n      layer.style.label?.field\n    ].flat().filter(field => !!field))]\n\n    const url = `${layer.mapview.host}/api/query?${mapp.utils.paramString({\n      template: 'mvt',\n      z: tileCoord[0],\n      x: tileCoord[1],\n      y: tileCoord[2],\n      locale: layer.mapview.locale.key,\n      layer: layer.key,\n      table,\n      geom,\n      filter: layer.filter?.current,\n      ...layer.params\n    })}`\n\n    return url\n  }\n\n}\n\n/**\n * Loads the layer features and updates the layer display on map view change.\n @function changeEndLoad\n @param {Object} layer - The layer object.\n @param {XMLHttpRequest} [layer.xhr] - The XMLHttpRequest object used for fetching data.\n @param {function} layer.tableCurrent - A function that returns the current table for the layer.\n @param {boolean} layer.display - A flag indicating whether the layer is displayed.\n @param {Set} [layer.clones] - A set of cloned layers.\n @param {function} layer.geomCurrent - A function that returns the current geometry for the layer.\n @param {Object} [layer.params] - Additional parameters for the layer.\n @param {Object} [layer.style] - The style object for the layer.\n @param {Object} [layer.style.theme] - The theme style object.\n @param {string|string[]} [layer.style.theme.fields] - The field(s) for the theme style.\n @param {string} [layer.style.theme.field] - The field for the theme style.\n @param {Object} [layer.style.label] - The label style object.\n @param {string} [layer.style.label.field] - The field for the label style.\n @param {Object} layer.mapview - The mapview object.\n @param {string} layer.mapview.host - The host URL for the API.\n @param {Object} layer.mapview.locale - The locale object.\n @param {string} layer.mapview.locale.key - The key for the locale.\n @param {string} layer.mapview.srid - The SRID for the mapview.\n @param {ol.Map} layer.mapview.Map - The OpenLayers map object.\n @param {Object} layer.filter - The filter object for the layer.\n @param {function} [layer.filter.current] - The current filter function for the layer.\n @param {Object} [layer.featuresObject] - An object to store layer features.\n @param {ol.layer.VectorTile} layer.L - The OpenLayers vector tile layer.\n @returns {void}\n */\nfunction changeEndLoad(layer) {\n\n  layer.xhr?.abort()\n\n  const table = layer.tableCurrent()\n\n  if ((!table || !layer.display) && !layer.clones?.size) return layer.source.clear()\n\n  const geom = layer.geomCurrent()\n\n  // Create a set of feature properties for styling.\n  layer.params.fields = [...new Set([\n    layer.params.default_fields,\n    Array.isArray(layer.style.theme?.fields) ?\n      layer.style.theme.fields : layer.style.theme?.field,\n    layer.style.theme?.field,\n    layer.style.label?.field,\n  ].flat().filter(field => !!field))]\n\n  const bounds = layer.mapview.getBounds()\n\n  // Assign current viewport if queryparam is truthy.\n  let viewport = [bounds.west, bounds.south, bounds.east, bounds.north, layer.mapview.srid];\n\n  // Assign current viewport if queryparam is truthy.\n  let z = layer.mapview.Map.getView().getZoom();\n\n  layer.xhr = new XMLHttpRequest()\n\n  layer.xhr.responseType = 'json'\n\n  layer.xhr.onload = e => {\n\n    layer.featuresObject = {}\n\n    if (!e.target?.response) {\n      layer.L.changed()\n      return;\n    }\n\n    mapp.layer.featureFormats.wkt_properties(layer, e.target.response)\n\n    layer.L.changed()\n  }\n\n  layer.xhr.open('GET', `${layer.mapview.host}/api/query?${mapp.utils.paramString({\n    template: 'wkt',\n    locale: layer.mapview.locale.key,\n    layer: layer.key,\n    table,\n    geom,\n    no_geom: true,\n    viewport,\n    z,\n    filter: layer.filter?.current,\n    ...layer.params\n  })}`)\n\n  layer.xhr.send()\n}", "/**\n### mapp.layer.formats.vector()\n\nThis module defines the vector format for map layers.\n\n@module /layer/formats/vector\n*/\n\n/**\n@function vector\n\n@description\nCreates Openlayers layer and source for vector format mapp layer.\n\n@param {layer} layer The Mapp layer object.\n@property {string} [layer.srid] The spatial reference system identifier (SRID) for the layer.\n@property {Object} [layer.params={}] Parameters for the layer data query.\n@property {function} layer.setSource Method pass features to layer source.\n@property {function} layer.reload Method to reload layer data.\n@property {Array} [layer.features] An array of features for the layer.\n@property {boolean} [layer.fade] - Flag indicating whether to apply a fade effect to the layer.\n@property {layer-cluster} [layer.cluster] Point layer cluster configuration.\n@property {Object} [layer.source] OpenLayers vector source.\n@property {layer-style} layer.style The mapp-layer style configuration.\n@property {number} [layer.zIndex] The zIndex for the layer canvas element.\n*/\n\n/**\n@global\n@typedef {Object} layer-cluster\nPoint layer cluster configuration.\n@property {number} [distance] The distance threshold [pixel] for OL source clustering.\n@property {string} [label] The field used for labeling the clusters.\n@property {number} [resolution] The resolution parameter for PostGIS database cluster queries.\n@property {boolean} [hexgrid] Use hexgrid clustering query for PostGIS.\n*/\n\nexport default function vector(layer) {\n\n  if (!layer.srid) {\n\n    console.warn(`Vector Layer: ${layer.key} missing SRID.`)\n    return;\n  }\n\n  // Update feature style config.\n  mapp.layer.styleParser(layer)\n\n  if (layer.properties) {\n    console.warn(`Layer: ${layer.key}, layer.properties{} are no longer required for wkt & geojson datasets.`)\n  }\n\n  // Set default layer params if nullish.\n  layer.params ??= {}\n\n  clusterConfig(layer)\n\n  layer.setSource = (features) => {\n\n    // The layer datasource is empty.\n    if (features === null) {\n\n      layer.L.setSource(null)\n      mapp.layer.featureFields.reset(layer);\n      mapp.layer.featureFields.process(layer);\n      return;\n    }\n\n    if (!features) return;\n\n    layer.source = new ol.source.Vector({\n      features: mapp.layer.featureFormats[layer.format](layer, [features].flat())\n    })\n\n    delete layer.xhr\n\n    if (layer.fade) mapp.layer.fade(layer)\n\n    // Geojson is a cluster layer.\n    if (layer.cluster?.distance) {\n\n      // Create cluster source.\n      layer.cluster.source = new ol.source.Cluster({\n        distance: layer.cluster.distance,\n        source: layer.source\n      })\n\n      layer.L.setSource(layer.cluster.source)\n      return;\n    }\n\n    // Set source if not cluster\n    layer.L.setSource(layer.source)\n  }\n\n  // Assigns changeEnd event/method for zoom restricted layers.\n  mapp.layer.changeEnd(layer)\n\n  // Assign reload method to layer.\n  layer.reload = reload;\n\n  // Create Openlayer Vector Layer\n  layer.L = new ol.layer[layer.vectorImage && 'VectorImage' || 'Vector']({\n    key: layer.key,\n    className: `mapp-layer-${layer.key}`,\n    zIndex: layer.zIndex,\n    style: layer.styleFunction || mapp.layer.featureStyle(layer)\n  })\n\n  layer.setSource(layer.features)\n\n  // Add event listener to reload layer for viewport or layer.tables on changeEnd.\n  if (layer.tables || layer.params.viewport) {\n\n    layer.mapview.Map.getTargetElement().addEventListener('changeEnd', () => {\n\n      // Layer is outside of tables zoom range.\n      if (!layer.tableCurrent()) {\n        layer.L.setSource(null)\n        return;\n      }\n\n      if (!layer.display) return;\n\n      clearTimeout(layer.timeout)\n\n      layer.timeout = setTimeout(()=>layer.reload(), 100)\n    })\n  }\n\n  // Change method for the cluster feature properties and layer stats.\n  layer.cluster?.distance && layer.L.on('change', e => {\n\n    // To prevent layer.L.change() from crashing if called before data is loaded.\n    if (!layer.cluster.source) return;\n\n    delete layer.max_size;\n\n    const feature_counts = layer.cluster.source.getFeatures().map(F => {\n\n      const features = F.get('features')\n\n      // Set cluster feature id for highlight interaction.\n      F.set('id', features[0].get('id'), true)\n\n      if (features.length > 1) {\n\n        // Set cluster count.\n        F.set('count', features.length, true)\n\n      } else {\n\n        let fP = features[0].getProperties()\n\n        // Set feature properties for for single location cluster.\n        Object.entries(fP.properties || {}).forEach(entry => {\n          F.set(entry[0], entry[1], true)\n        })\n\n      }\n\n      // Return length for calculation of max_size.\n      return features.length\n    })\n\n    if (!feature_counts.length) return;\n\n    // Calculate max_size for cluster size styling.\n    layer.max_size = Math.max(...feature_counts)\n  })\n}\n\n/**\n@function reload\n\n@description\nThe layer.reload() method determines the table and geometry for the current zoom level. And uses the layer.params{} to create a request for layer features to be added to the layer source.\n\nThe xhr request is debounced by 100ms to prevent requests in quick succession on panning, scroll, and touch zooming.\n\nThe reload method is bound to the layer object and doesn't require any arguments.\n\n@property {Object} layer.params Parameter for data request.\n@property {Object} layer.timeout Timeout for the xhr request.\n*/\nfunction reload() {\n\n  const layer = this;\n\n  // Do not reload the layer if features have been assigned.\n  if (layer.features) return;\n\n  const table = layer.tableCurrent()\n\n  if (!table) return;\n\n  const geom = layer.geomCurrent()\n\n  if (layer.fade) mapp.layer.fade(layer, true)\n\n  // Create a set of feature properties for styling.\n  layer.params.fields = [...new Set([\n    layer.params.default_fields,\n    Array.isArray(layer.style.theme?.fields) ?\n      layer.style.theme.fields : layer.style.theme?.field,\n    layer.style.theme?.field,\n    layer.style.label?.field,\n    layer.cluster?.label,\n  ].flat().filter(field => !!field))]\n\n  const bounds = layer.mapview.getBounds()\n\n  // Assign current viewport if queryparam is truthy.\n  layer.params.viewport &&= [bounds.west, bounds.south, bounds.east, bounds.north, layer.mapview.srid];\n\n  // Assign current viewport if queryparam is truthy.\n  layer.params.z &&= layer.mapview.Map.getView().getZoom();\n\n  clearTimeout(layer.timeout)\n\n  layer.timeout = setTimeout(() => {\n\n    layer.xhr = mapp.utils.xhr(\n      `${layer.mapview.host}/api/query?${mapp.utils.paramString({\n        template: layer.params.template || layer.format,\n        locale: layer.mapview.locale.key,\n        layer: layer.key,\n        table,\n        geom,\n        srid: layer.srid,\n        filter: layer.filter?.current,\n        ...layer.params\n      })}`)\n      .then(features => {\n\n        // An error will be returned if the xhr fails with a bad request 400.\n        if (features instanceof Error) return;\n\n        layer.setSource(features)\n      })\n\n  }, 100)\n}\n\n/**\n@function clusterConfig\n\n@description\nConfigures the clustering options for a layer.\n\n@param {Object} layer The layer object.\n@property {string} layer.key The key of the layer.\n@property {string} layer.srid The spatial reference system identifier (SRID) for the layer.\n@property {Object} layer.params Parameter for data request.\n@property {Object} layer.cluster The clustering configuration for the layer.\n@property {number} [cluster.distance] The distance threshold for clustering.\n@property {number} [cluster.resolution] The resolution threshold for clustering.\n@property {boolean} [cluster.hexgrid] Flag indicating whether to use hexgrid clustering.\n*/\nfunction clusterConfig(layer) {\n\n  // The clusterConfig can not work without the layer having a cluster config object.\n  if (typeof layer.cluster !== 'object') return;\n\n  // Check if both cluster.distance and cluster.resolution are set.\n  if (layer.cluster.distance && layer.cluster.resolution) {\n    console.warn(`Layer: ${layer.key}, cluster.distance and cluster.resolution are mutually exclusive. You cannot use them both on the same layer. Please remove one of them. `)\n    return;\n  };\n\n  // Check if neither cluster.distance and cluster.resolution are set.\n  if (!layer.cluster.distance && !layer.cluster.resolution) {\n    console.warn(`Layer: ${layer.key}, cluster.distance or cluster.resolution must be set.`)\n    return;\n  };\n\n   // Check if distance is defined as <1 and layer is a format wkt\n   if (layer.cluster.distance < 1) {\n\n    console.warn(`Layer: ${layer.key}, cluster.distance is less than 1 [pixel]. The cluster config will be removed.`)\n    \n    // Remove the cluster object\n    delete layer.cluster; \n    return;\n  }\n\n  // If cluster.resolution is used, the layer srid must be set to 3857.\n  if (layer.cluster.resolution) {\n\n    // Check if resolution is numeric.\n    if (typeof layer.cluster.resolution === 'number') {\n      // Assign resolution as float.\n      layer.params.resolution = parseFloat(layer.cluster.resolution);\n    } \n    // Otherwise, warn and return.\n    else {\n      console.warn(`Layer: ${layer.key}, cluster.resolution must be a number.`)\n      return;\n    }\n\n    // Check if srid is set to 4326, not allowed for cluster layer\n    if (layer.srid === '4326') {\n      console.warn(`Layer: ${layer.key}, srid 4326 is not allowed for cluster.resolution layers.`)\n      return;\n    };\n\n    // Provide default params for resolution cluster.\n    layer.params.viewport = true;\n    layer.params.z = true;\n\n    // Format is cluster if resolution is set.\n    layer.format = 'cluster';\n\n    // Assign default template.\n    layer.params.template ??= layer.cluster.hexgrid ? 'cluster_hex' : 'cluster';\n  }\n}", "/**\n### mapp.layer.formats{}\nThe format function matching the layer's format key decorate the layer object with methods to load and style tiles and features.\n\n@module /layer/formats\n*/\n\nimport mbtiles from './mbtiles.mjs'\n\nimport googleMapTiles from './googleMapTiles.mjs'\n\nimport maplibre from './maplibre.mjs'\n\nimport tiles from './tiles.mjs'\n\nimport mvt from './mvt.mjs'\n\nimport vector from './vector.mjs'\n\nexport default {\n  mbtiles,\n  googleMapTiles,\n  maplibre,\n  tiles,\n  mvt,\n  cluster: vector,\n  geojson: vector,\n  wkt: vector,\n  vector\n}", "/**\n### mapp.layer.fade()\n\nThe `fade()` animation function implements linear interpolation to achieve a smooth transition between opacities on a the cluster layer format. \n\nThe fade will occur during the zoom in and out as well as changing the view port.\n\n### \uD83C\uDFAF Target Opacity Calculation: \nDepending on whether fading in or out, the target opacity is calculated. \nIf fading out, the opacity is reduced by 20% or brought to a minimum of 0. \nIf fading in, the opacity is increased by 20% or limited to a maximum of 1.\n\n### \u23F1\uFE0F Animation Duration and Timing: \nThe animation duration is set to 100 milliseconds (adjustable), and the start time of the animation is recorded.\n\n### \uD83D\uDCCA Opacity Update Function: \nThe `updateOpacity` function is used to calculate the current time and elapsed time since the animation started.\n\n### \uD83C\uDF1F Interpolation and Opacity Update:\nIf the elapsed time is less than the animation duration, interpolation is used to smoothly transition the opacity between `currentOpacity` and `targetOpacity`. \nThe `requestAnimationFrame` is used to schedule the next frame of the animation. \nWhen the animation duration has elapsed, the layer's opacity is set to the `targetOpacity`, concluding the animation.\n\n### \uD83D\uDE80 Starting the Animation: \nThe animation is triggered by calling the `updateOpacity` function.\n\n### \u23F3 Setting New Timeout:\nA new fade timeout is set for the next step of the fade animation after the specified duration has passed, ensuring the animation continues until the desired opacity is reached.\n\n@module /layer/fade\n@param {boolean} out - Indicates whether the layer should be faded out (`true`) or faded in (`false`).\n@example\n\"layer\": {\n  \"fade\": true\n}\n*/\n\nexport default function fade(layer, out) {\n\n  // Check if the layer has a fade property.\n  if (!layer?.fade) return;\n\n  // Clear current fade process.\n  clearTimeout(layer.fade);\n\n  // Get current opacity.\n  const currentOpacity = layer.L.getOpacity();\n\n  let targetOpacity;\n\n  if (out) {\n    // Layer is completely transparent.\n    if (currentOpacity <= 0) return;\n\n    // Reduce opacity by 20%.\n    targetOpacity = Math.max(currentOpacity - 0.2, 0);\n  } else {\n    // Layer is completely opaque.\n    if (currentOpacity >= 1) return;\n\n    // Increase opacity by 20%.\n    targetOpacity = Math.min(currentOpacity + 0.2, 1);\n  }\n\n  const duration = 100; // Animation duration in milliseconds\n\n  const startTime = Date.now();\n  const updateOpacity = () => {\n    // Current time used to calculate the elapsed time. \n    const currentTime = Date.now();\n\n    const elapsedTime = currentTime - startTime;\n\n    // If elapsed time is less than the animation duration, then we will use interpolation.\n    if (elapsedTime < duration) {\n      const progress = elapsedTime / duration;\n      const interpolatedOpacity = currentOpacity + (targetOpacity - currentOpacity) * progress;\n      layer.L.setOpacity(interpolatedOpacity);\n\n      // Continue updating opacity.\n      requestAnimationFrame(updateOpacity);\n    } else {\n      // Animation complete, set the final opacity.\n      layer.L.setOpacity(targetOpacity);\n    }\n  };\n\n  // Start the animation.\n  updateOpacity();\n\n  // Set the new fade timeout.\n  layer.fade = setTimeout(() => fade(layer, out), duration);\n}", "/**\n### mapp.layer.changeEnd(layer)\n\n@module /layer/featureFilter\n*/\n\nexport default function (layer) {\n\n  // The layer may be zoom level restricted.\n  layer.tables && layer.mapview.Map.getTargetElement().addEventListener('changeEnd', changeEnd)\n\n  function changeEnd() {\n\n    // Layer is out of zoom range.\n    if (!layer.tableCurrent()) {\n\n      if (layer.display) {\n\n        // Layer should be shown if possible.\n        layer.zoomDisplay = true\n        layer.hide()\n      }\n\n      return;\n    }\n\n    if (layer.zoomDisplay) {\n\n      // Prevents layer.show() being fired on zoom change within range.\n      delete layer.zoomDisplay\n\n      // Show layer if within zoomDisplay range.\n      layer.show()\n    }\n  }\n}\n", "/**\n### mapp.layer.featureHover()\n\n@module /layer/featureHover\n*/\n\nexport default function (feature, layer) {\n\n  // The hover method must only execute if the display flag is set.\n  if (!layer.style.hover.display) return;\n\n  // Store current highlight (feature) key.\n  const featureKey = layer.mapview.interaction?.current?.key?.toString()\n\n  if (!featureKey) return;\n\n  const paramString = mapp.utils.paramString({\n    dbs: layer.dbs,\n    locale: layer.mapview.locale.key,\n    layer: layer.key,\n    filter: feature.properties.count > 1 && layer.filter?.current,\n    template: layer.style.hover.query || 'infotip',\n    qID: layer.qID,\n    id: feature.properties.id,\n    table: layer.tableCurrent(),\n    geom: layer.geom,\n    field: layer.style.hover.field,\n    coords: feature.properties.count > 1\n      && ol.proj.transform(\n        feature.getGeometry().getCoordinates(),\n        `EPSG:${layer.mapview.srid}`,\n        `EPSG:${layer.srid}`)\n  })\n\n  mapp.utils.xhr(`${layer.mapview.host}/api/query?${paramString}`)\n    .then(response => {\n\n      // Check whether there is a response to display.\n      if (!response) return;\n\n      if (typeof layer.style.hover.render === 'function') {\n\n        const content = layer.style.hover.render(response)\n        layer.mapview.infotip(content)\n        return;\n      }\n\n      // Check whether the response label field has a value.\n      if (response.label == '') return;      \n\n      // Check whether highlight feature is still current.\n      if (layer.mapview.interaction?.current?.key !== featureKey) return;\n\n      // Display the response label as infotip.\n      layer.mapview.infotip(response.label)\n    })\n}", "/**\n### mapp.layer.featureFilter()\nThis module provides feature filtering functionality for map layers.\n\n@module /layer/featureFilter\n*/\n\nconst filter = {\n  ni\n}\n\n/**\n * Filters features based on the provided filters.\n * @function featureFilter\n * @param {Object} filters - The filters to apply to the features.\n * @param {Object} feature - The feature to filter.\n * @returns {boolean} - Returns true if at least one filter catches the feature, false otherwise.\n */\nexport default function(filters, feature) {\n\n  // check whether at least one filter catches feature.\n  return Object.keys(filters).some(key => {\n\n    // get feature type from first key.\n    let type = Object.keys(filters[key])[0]\n\n    // return filter method if exists.\n    return filter[type] && filter[type](key, filters[key][type], feature)\n  })\n}\n\n/**\n * Filters features based on the \"ni\" (not in) filter.\n * @function ni\n * @param {string} key - The property key to check in the feature.\n * @param {Array} ni - An array of values that the feature property should not be in.\n * @param {Object} feature - The feature to filter.\n * @returns {boolean} - Returns true if the feature property is not in the \"ni\" set, false otherwise.\n */\nfunction ni(key, ni, feature) {\n\n  // check whether feature properties key is in ni set.\n  return new Set(ni).has(feature.properties[key])\n}", "/**\n### mapp.layer.featureFormats{}\n\n@module /layer/featureFormats\n*/\n\nexport function geojson(layer, features) {\n\n  const formatGeojson = new ol.format.GeoJSON\n\n  mapp.layer.featureFields.reset(layer);\n\n  return features.map((feature) => {\n\n    const properties = feature.properties\n\n    if (layer.featureFields?.[layer.style?.theme?.field]) {\n\n      layer.featureFields[layer.style.theme.field].values.push(properties[layer.style.theme.field]);\n    }\n\n    return new ol.Feature({\n      id: feature.id,\n      geometry: formatGeojson.readGeometry(feature.geometry, {\n        dataProjection: 'EPSG:' + layer.srid,\n        featureProjection: 'EPSG:' + layer.mapview.srid,\n      }),\n      properties\n    })\n\n  })\n}\n\n/**\n@function wkt\n\n@description\nThe wkt featureFormat method processes an array of wkt features and returns a Openlayer features to be added to the layer source.\n\n@param {layer} layer A decorated mapp layer object.\n@param {array} features An array of WKT features.\n\n@returns {array} Array of openlayers features.\n*/\nexport function wkt(layer, features) {\n\n  if (!Array.isArray(features)) return;\n  \n  const formatWKT = new ol.format.WKT\n\n  mapp.layer.featureFields.reset(layer);\n\n  const olFeatures = features.map((feature) => {\n\n    const properties = {}\n\n    // Assign field key and value to properties object\n    layer.params.fields?.forEach((field, i) => {\n\n      if (layer.featureFields[field]) {\n\n        layer.featureFields[field].values.push(feature[i + 2]);\n      }\n\n      properties[field] = feature[i + 2]\n    })\n\n    // Return feature from geometry with properties.\n    return new ol.Feature({\n      id: feature.shift(),\n      geometry: formatWKT.readGeometry(feature.shift(), {\n        dataProjection: 'EPSG:' + layer.srid,\n        featureProjection: 'EPSG:' + layer.mapview.srid,\n      }),\n      properties\n    })\n\n  })\n\n  // Process featureFields for dynamic theming.\n  mapp.layer.featureFields.process(layer);\n\n  return olFeatures\n}\n\nexport function wkt_properties(layer, features) {\n\n  mapp.layer.featureFields.reset(layer);\n\n  for (const feature of features) {\n\n    const properties = {\n      id: feature[0]\n    }\n\n    // Assign field key and value to properties object\n    layer.params.fields?.forEach((field, i) => {\n\n      if (layer.featureFields[field]) {\n\n        layer.featureFields[field].values.push(feature[i + 1]);\n      }\n\n      properties[field] = feature[i + 1]\n    })\n\n    layer.featuresObject[feature.shift()] = properties\n  }\n\n  mapp.layer.featureFields.process(layer);\n}\n\nexport function cluster(layer, features) {\n\n  layer.max_size = 1\n\n  return features.map((vals, i) => {\n\n    const geometry = new ol.geom.Point(vals.shift())\n\n    const count = vals.shift()\n\n    layer.max_size = layer.max_size > count ? layer.max_size : count;\n\n    const id = vals.shift()\n\n    const properties = { count }\n\n    layer.params.fields.forEach((field, i) => {\n      properties[field] = vals[i]\n    })\n\n    return new ol.Feature({\n      id,\n      geometry,\n      ...properties\n    })\n\n  })\n}\n", "/**\n### /layer/featureFields\n\nThe featureFields module exports methods to calculate the distribution of feature field values for themes.\n\n@module /layer/featureFields\n*/\n\n/**\n@function reset\n\n@description\nfeatureFields.reset(layer) will reset the layer.featureFields values array for the current theme field.\n\n@param {layer} layer A decorated mapp layer object.\n*/\n\nexport function reset(layer) {\n\n  // Create featureFields object if nullish.\n  layer.featureFields ??= {};\n\n  if (!layer.style.theme?.field) return;\n\n  // Set empty values array.\n  layer.featureFields[layer.style.theme.field] = {\n    values: []\n  };\n}\n\n/**\n@function process\n\n@description\nfeatureFields.process(layer) method will calculate the distribution of featureFields values for the current theme.\n\n@param {layer} layer A decorated mapp layer object.\n*/\n\nexport function process(layer) {\n\n  // Check if the distribution method is defined in the distribution object.\n  if (Object.hasOwn(distribution, layer.style?.theme?.distribution)) {\n\n    // Call the corresponding distribution function.\n    distribution[layer.style.theme.distribution](layer);\n\n    // The legend method renders into the layer.style.legend\n    mapp.ui.layers.legends[layer.style.theme.type](layer)\n  }\n}\n\nexport const distribution = {\n  jenks,\n  count\n}\n\n/**\n@function jenks\n\n@description\nThe jenks distribution method requires the stats.jenks utility method to calculate natural breaks within the `featureFields.values[]` array.\n\n@param {layer} layer A decorated mapp layer object.\n*/\n\nfunction jenks(layer) {\n  let theme = layer.style.theme;\n\n  let n = Math.min(layer.featureFields[theme.field].values.length, theme.categories.length);\n\n  // Parse array values as float.\n  layer.featureFields[theme.field].values = layer.featureFields[theme.field].values.map(parseFloat);\n\n  // Compute Jenks natural breaks.\n  layer.featureFields[theme.field].jenks =\n    mapp.utils.stats.jenks(layer.featureFields[theme.field].values, n);\n\n  let val;\n\n  theme.categories.forEach((cat, i) => {\n    val = val === layer.featureFields[theme.field].jenks[i] ? undefined : layer.featureFields[theme.field].jenks[i];\n    cat.value = val;\n    cat.label = val;\n  });\n}\n\n/**\n@function count\n\n@description\nThe count distribution method counts values in the `featureFields.values[]` array.\n\n@param {layer} layer A decorated mapp layer object.\n*/\n\nfunction count(layer) {\n  let theme = layer.style.theme;\n\n  layer.featureFields[theme.field].values.forEach(val => {\n\n    // Increment count for each value.\n    layer.featureFields[theme.field][val] ??= 0;\n    layer.featureFields[theme.field][val]++;\n  });\n}\n", "/**\n### map.layer.featureStlye()\nThis module exports a style function for a layer\n@module /layer/featureStyle\n */\n\n/**\nCreates a style function for a layer.\n@function featureStyle\n@param {Object} layer - The layer object.\n@param {Object} layer.style - The style configuration for the layer.\n@param {boolean} [layer.style.cache=null] - Flag indicating whether to cache the styles.\n@param {Object} [layer.style.filter] - The filter configuration for the layer style.\n@param {Object} [layer.style.theme] - The theme configuration for the layer style.\n@param {Object} layer.filter - The filter configuration for the layer.\n@param {Object} layer.filter.current - The current filter applied to the layer.\n@param {Object} [layer.style.default] - The default style configuration for features.\n@param {Object} [layer.style.cluster] - The style configuration for cluster features.\n@param {number} [layer.style.cluster.clusterScale] - The scale factor for cluster icons.\n@param {boolean} [layer.style.logScale] - Flag indicating whether to use logarithmic scaling for cluster icons.\n@param {number} [layer.style.cluster.zoomInScale] - The scale factor for cluster icons when zooming in.\n@param {number} [layer.style.cluster.zoomOutScale] - The scale factor for cluster icons when zooming out.\n@param {number} [layer.max_size] - The maximum size of a cluster.\n@param {Object} [layer.style.highlight] - The style configuration for highlighted features.\n@param {string|number} [layer.highlight] - The ID of the currently highlighted feature.\n@param {Object} [layer.style.label] - The style configuration for feature labels.\n@param {boolean} [layer.style.label.display] - Flag indicating whether to display labels.\n@param {string} [layer.style.label.field] - The field to use for label text.\n@param {number} [layer.style.label.minZoom] - The minimum zoom level at which to display labels.\n@param {number} [layer.style.label.maxZoom] - The maximum zoom level at which to display labels.\n@param {Object} [layer.style.selected] - The style configuration for selected features.\n@param {Object} layer.mapview - The mapview object associated with the layer.\n@param {Object} layer.mapview.locations - The locations object containing selected features.\n@param {Object} layer.featuresObject - An object containing feature properties indexed by feature ID.\n@param {Array} [layer.featureLookup] - An array of lookup features used for styling.\n@param {string} [layer.featureLookupId='id'] - The ID property to use for feature lookup.\n@returns {function} The style function for the layer.\n */\nexport default layer => {\n\n  return function Style(feature) {\n\n    if (layer.style.cache !== null) {\n\n      // Check for and return existing Styles object.\n      const Styles = feature.get('Styles')\n\n      if (Styles) return Styles\n    }\n\n    featureProperties(feature)\n\n    if (feature.properties === null) {\n\n      // The feature will not be visible.\n      return null\n    }\n\n    // A filter flag is set either in the layer styles object or in the theme.\n    if ((layer.style.filter || layer.style.theme?.filter)\n\n      // The current filter contains field keys.\n      && layer.filter.current && Object.keys(layer.filter.current).length\n\n      // Check whether the feature should be caught by layer feature filter.\n      && mapp.layer.featureFilter(layer.filter.current, feature)) {\n\n      // The feature will not be visible.\n      return null\n    }\n\n    // Set style.default as feature.style.\n    feature.style = layer.style.default\n\n    if (Object.hasOwn(mapp.layer.themes, layer.style.theme?.type)) {\n\n      // Apply theme style to style object.\n      mapp.layer.themes[layer.style.theme?.type]?.(layer.style.theme, feature)\n    }\n\n    // Style cluster point features.\n    clusterStyle(feature)\n\n    // Assign highlight style if required.\n    highlightStyle(feature)\n\n    // Assign label style if required.\n    labelStyle(feature)\n\n    // Assign selected style if required.\n    selectedStyle(feature)\n\n    return mapp.utils.style(feature.style, feature)\n  }\n\n  /**\n   Assigns feature properties based on layer configuration.\n   @function featureProperties\n   @param {Object} feature - The feature object.\n   @returns {void}\n   */\n  function featureProperties(feature) {\n\n    // Assign MVT feature properties from the layer featuresObject.\n    if (layer.featuresObject) {\n\n      let id = feature.get('id').toString()\n\n      feature.properties = {\n        id,\n        ...layer.featuresObject[id]\n      }\n\n    } else {\n\n      feature.properties = feature.getProperties()\n    }\n\n    // Check whether feature is in lookup.\n    if (Array.isArray(layer.featureLookup)) {\n\n      // Find feature with matching ID property in the featureLookup\n      const lookupFeature = layer.featureLookup.find(f => f[layer.featureLookupId || 'id'] === feature.properties.id)\n\n      // Do not style features not found in the lookup array.\n      if (!lookupFeature) {\n        feature.properties = null\n        return\n      }\n\n      // Assign feature.properties from the lookupFeature for subsequent styling\n      Object.assign(feature.properties, lookupFeature)\n    }\n\n    // Geojson / WKT features may have a properties property\n    if (feature.properties?.properties) {\n\n      // This shouldn't happen anymore.\n      // console.warn(`Feature with properties.properties`)\n      // console.log(feature)\n      Object.assign(feature.properties, feature.properties.properties)\n      delete feature.properties.properties\n    }\n  }\n\n  /**\n  Applies cluster style to the feature based on layer configuration.\n  @function clusterStyle\n  @param {Object} feature - The feature object.\n  @returns {void}\n   */\n  function clusterStyle(feature) {\n\n    if (!feature.properties?.count) return;\n\n    if (feature.properties.count === 1) return;\n\n    if (!layer.style.cluster) return;\n\n    let clusterScale = parseFloat(layer.style.cluster.clusterScale)\n\n    // Spread cluster style into feature.style.\n    feature.style = {\n      ...feature.style,\n      ...layer.style.cluster\n    }\n\n    // Cluster icons will NOT scale different to single locations if the clusterScale is not set in the cluster style.\n    if (clusterScale) {\n\n      // The clusterScale will be added to the icon scale.\n      feature.style.clusterScale = layer.style.cluster.logScale ?\n\n        // A natural log will be applied to the cluster scaling.\n        Math.log(clusterScale) / Math.log(layer.max_size) * Math.log(feature.properties.size || feature.properties.count) :\n\n        // A fraction of the icon clusterScale will be added to the items scale for all but the biggest cluster location.\n        1 + (clusterScale / layer.max_size * (feature.properties.size || feature.properties.count))\n    }\n\n    // Setting a zoomInScale will INCREASE the scale of icons on higher zoom levels.\n    if (layer.style.cluster.zoomInScale) {\n\n      feature.style.zoomInScale = layer.style.cluster.zoomInScale * layer.mapview.Map.getView().getZoom()\n    }\n\n    // Setting a zoomOutScale will DECREASE the scale of icons on higher zoom levels.\n    if (layer.style.cluster.zoomOutScale) {\n\n      feature.style.zoomOutScale = layer.style.cluster.zoomOutScale / layer.mapview.Map.getView().getZoom()\n    }\n  }\n\n  /**\n  Applies highlight style to the feature based on layer configuration.\n  @function highlightStyle\n  @param {Object} feature - The feature object.\n  @returns {void}\n   */\n  function highlightStyle(feature) {\n\n    // Layer must have a highlight style.\n    if (!layer.style.highlight) return;\n  \n    // Layer must have a highlighted feature stored as layer.highlighted.\n    if (!layer.highlight) return;\n    \n    // The layer.highlight must be a match for the feature ID.\n    if (layer.highlight !== (feature.get('id') || feature.getId())) return;\n\n    feature.style = {\n      ...feature.style,\n      ...layer.style.highlight\n    }\n  }\n\n  /**\n  Applies label style to the feature based on layer configuration.\n  @function labelStyle\n  @param {Object} feature - The feature object.\n  @returns {void}\n   */\n  function labelStyle(feature) {\n\n    // A feature requires properties to create a label.\n    if (!feature.properties) return;\n\n    // Only styled features can be labelled.\n    if (!feature.style) return;\n\n    // The label must be displayed.\n    if (!layer.style.label?.display) {\n      delete feature.style.label\n      return;\n    }\n\n    feature.style.label = structuredClone(layer.style.label)\n\n    // Assign count value as text if label.count is truthy.\n    feature.style.label.text = feature.style.label.count && feature.properties.count > 1 && feature.properties.count || undefined\n\n    feature.style.label.text ??= feature.properties[feature.style.label.field] || feature.properties.label\n\n    // Delete style.label if minZoom exceeds current zoom.\n    feature.style.label?.minZoom > layer.mapview.Map.getView().getZoom() && delete feature.style.label;\n\n    // Delere style.label if current zoom exceeds maxZoom.\n    feature.style.label?.maxZoom < layer.mapview.Map.getView().getZoom() && delete feature.style.label;\n  }\n\n  /**\n  Applies selected style to the feature based on layer configuration.\n  @function selectedStyle\n  @param {Object} feature - The feature object.\n  @returns {void}\n   */\n  function selectedStyle(feature) {\n  \n    // Return before lookup in mapview.locations object.\n    if (layer.style.selected === undefined) return;\n\n    // Check whether the feature referenced in mapview.locations\n    if (layer.mapview?.locations[`${layer.key}!${feature.properties.id}`]) {\n\n      feature.style = layer.style.selected\n    }\n  }\n\n}", "/**\n### mapp.layer.styleParser()\n\nThe `styleParser` module method is responsible for parsing and validating the layer.style object for assigning feature styles.\n\nThe main tasks performed by the `styleParser` module include:\n\n1. Assigning default styles:\n  - It assigns a default highlight style to the layer if not explicitly provided.\n  - It sets the default `zIndex` value for the highlight style to `Infinity`.\n  - It assigns an empty object to `layer.style` if it doesn't exist.\n  - It assigns an empty object to `layer.style.default` if it doesn't exist.\n\n2. Parsing theme styles:\n  - If `layer.style.theme` exists, it calls the `parseTheme` function to process the theme style configuration.\n  - If `layer.style.themes` exists, it iterates over each theme and calls the `parseTheme` function for each theme.\n\n3. Handling multiple themes, hovers, and labels:\n  - If multiple themes are defined in `layer.style.themes`, it selects the appropriate theme based on the `layer.style.theme` value or the first theme in the object.\n  - If multiple hovers are defined in `layer.style.hovers`, it selects the appropriate hover style based on the `layer.style.hover` value or the first hover style in the object.\n  - If multiple labels are defined in `layer.style.labels`, it selects the appropriate label style based on the `layer.style.label` value or the first label style in the object.\n\n4. Handling warnings and deprecation notices:\n  - It calls the `warnings` function to handle warnings and deprecation notices related to the layer style configuration.\n  - It checks for deprecated properties and provides appropriate warnings or fallback values.\n\n5. Processing style objects:\n  - It calls the `styleObject` function to process individual style objects within themes or categories.\n  - It merges the category style with the default style and handles icon styles separately.\n\n6. Processing icon style objects:\n  - It calls the `iconObject` function to process icon style objects within the layer style.\n  - It moves icon-related properties into a separate `icon` object within the style.\n\nOverall, the `styleParser` module ensures that the layer style configuration is properly structured, applies default styles where necessary, handles multiple themes, hovers, and labels, and processes individual style objects and icon styles. It helps to maintain a consistent and valid style configuration for the layer in the mapping application.\n\n@module /layer/styleParser\n*/\n\n/**\n@global\n@typedef {Object} layer-style\n@property {object} theme The current theme to be rendered.\n@property {Object} [default] The default style for features.\n@property {Object} [highlight] The style for highlighted features.\n@property {Object} [theme] The theme style configuration.\n@property {Object} [themes] Multiple theme style configurations.\n@property {Object} [hover] The hover style configuration.\n@property {Object} [hovers] Multiple hover style configurations.\n@property {Object} [label] The label style configuration.\n@property {Object} [labels] Multiple label style configurations.\n*/\n\nconst iconKeys = new Set([\n  'anchor',\n  'scale',\n  'url',\n  'svg',\n  'type'])\n\nconst styleKeys = new Set([\n  'zIndex',\n  'strokeColor',\n  'strokeWidth',\n  'strokeOpacity',\n  'fillOpacity',\n  'fillColor',\n  'clusterScale',\n  'zoomInScale',\n  'zoomOutScale',\n  'highlightScale', ...iconKeys])\n\n/**\n@function styleParser\n\n@description\nThe styleParser method parses and validates the mapp.style object and its properties.\n\n@param {layer} layer A json layer object.\n@property {layer-style} layer.style The mapp-layer style configuration.\n@property {Object} [layer.cluster] Cluster configuration for a point layer.\n*/\n\nexport default function styleParser(layer) {\n\n  layer.style ??= {}\n\n  if (typeof layer.style.highlight === 'object') {\n\n    // Assign a default highlight style and ensure that zIndex is infinity if not implicit.\n    layer.style.highlight.zIndex ??= Infinity\n    layer.style.highlight.highlightScale = layer.style.highlight.scale\n    delete layer.style.highlight.scale\n  }\n\n  warnings(layer)\n\n  if (layer.style?.theme) {\n    parseTheme(layer.style.theme, layer)\n  }\n\n  if (layer.style?.themes) {\n    Object.keys(layer.style.themes).forEach(key => {\n      parseTheme(layer.style.themes[key], layer)\n    })\n  }\n\n  // Handle multiple themes in layer style.\n  if (layer.style?.themes) {\n    Object.keys(layer.style.themes).forEach(key => {\n      layer.style.themes[key].title ??= key;\n      if (layer.style.themes[key].skip) delete layer.style.themes[key];\n    });\n\n    layer.style.theme = typeof layer.style.theme === 'object'\n      ? layer.style.theme\n      : layer.style.themes[layer.style.theme || Object.keys(layer.style.themes)[0]];\n  }\n\n  // Handle multiple hovers in layer style.\n  if (layer.style?.hovers) {\n    layer.style.hover = typeof layer.style.hover === 'object' ? layer.style.hover : layer.style.hovers[layer.style.hover || Object.keys(layer.style.hovers)[0]];\n  }\n\n  // Set default featureHover method if not provided.\n  if (layer.style?.hover) {\n    layer.style.hover.method ??= mapp.layer.featureHover;\n  }\n\n  // Handle multiple labels in layer style.\n  if (layer.style?.labels) {\n    layer.style.label = typeof layer.style.label === 'object' ? layer.style.label : layer.style.labels[layer.style.label || Object.keys(layer.style.labels)[0]];\n  }\n\n  function warnings(layer) {\n\n    if (!layer.style.default) {\n\n      console.warn(`Layer: ${layer.key} has no implicit default style. Please add style.default.`)\n\n      // Assign default style for vector layer.\n      // Non cluster layer do not have a default icon style\n      layer.style.default = layer.cluster\n        ? {\n          icon: {\n            type: 'dot'\n          }\n        } : {\n          strokeColor: '#333',\n          fillColor: '#fff9',\n        }\n    }\n\n    if (layer.style.default.style) {\n\n      console.warn(`Layer: ${layer.key} has a style object within the default style configuration.`)\n\n      layer.style.default = layer.style.default.style\n\n      delete layer.style.default.style\n    }\n\n    iconObject(layer.style.default)\n\n    clusterChecks(layer)\n\n    // Handle deprecated layer.hover configuration.\n    if (layer.hover) {\n      console.warn(`Layer: ${layer.key}, layer.hover{} should be defined within layer.style{}.`);\n      layer.style.hover = layer.hover;\n      delete layer.hover;\n    }\n\n    // Handle deprecated layer.style.hover and layer.style.hovers.\n    if (layer.style?.hovers && layer.style?.hover) {\n      console.warn(`Layer: ${layer.key}, cannot use both layer.style.hover and layer.style.hovers. Layer.style.hover has been deleted.`);\n      delete layer.style.hover;\n    }\n\n    // Handle deprecated layer.style.label and layer.style.labels.\n    if (layer.style?.labels && layer.style?.label) {\n      console.warn(`Layer: ${layer.key}, cannot use both layer.style.label and layer.style.labels. Layer.style.label has been deleted.`);\n      delete layer.style.label;\n    }\n\n    // Handle layer.style.zIndex deprecation.\n    if (layer.style.zIndex) {\n      console.warn(`Layer: ${layer.key}, layer.style.zIndex has been deprecated. Use layer.zIndex instead.`);\n    }\n  }\n\n  function clusterChecks(layer) {\n\n    if (!layer.cluster) return\n\n    if (!layer.style.default.icon) {\n\n      layer.style.default = {\n        icon: {\n          type: 'dot'\n        }\n      }\n\n      console.warn(`Cluster Layer: ${layer.key} has no default icon. 'Dot' will be assigned.`)\n    }\n\n    // Cluster layer must not have stroke or fill styles.\n    Object.keys(layer.style.default)\n      .filter(key => !['icon', 'scale'].includes(key))\n      .forEach(key => {\n\n        console.warn(`Cluster Layer: ${layer.key}; ${key} key removed from default style.`)\n\n        delete layer.style.default[key]\n      })\n\n    // Define default style cluster icon\n    layer.style.cluster = {\n      clusterScale: 1,\n      icon: {\n        type: 'dot'\n      },\n      ...layer.style.cluster\n    }\n\n    if (!layer.style.cluster.icon) {\n\n      layer.style.cluster = { ...layer.style.cluster, ...layer.style.cluster.style }\n\n      delete layer.style.cluster.style\n\n      layer.style.cluster.icon = evalIconObject(layer.style.cluster)\n    }\n  }\n\n  function parseTheme(theme, layer) {\n\n    if (typeof theme === 'string') {\n\n      // Attempt theme lookup in themes from string[key]\n      theme = layer.style.themes?.[theme]\n    }\n\n    if (typeof theme.style === 'object') {\n\n      // Assign the default style to the theme.style\n      theme.style = {\n        ...structuredClone(layer.style.default),\n        ...theme.style\n      }\n    }\n\n    if (typeof theme.cat === 'object') {\n\n      theme.categories = Object.keys(theme.cat).map(key => {\n\n        const cat = theme.cat[key]\n\n        cat.label ??= key\n        cat.value ??= key\n\n        return cat\n      })\n\n      delete theme.cat\n    }\n\n    if (Array.isArray(theme.cat_arr)) {\n\n      theme.categories = theme.cat_arr\n\n      delete theme.cat_arr\n    }\n\n    // Check if graduated breaks is not defined, or is not less_than or greater_than.\n    if (theme.type === 'graduated') {\n\n      if (!['less_than', 'greater_than'].includes(theme.graduated_breaks)) {\n\n        console.warn(`You must provide a graduated_breaks value of either greater_than or less_than for graduated theme on layer: ${layer.key}; field: ${theme.field}. less_than is assumed.`);\n\n        theme.graduated_breaks ??= 'less_than';\n      }\n\n      if (theme.graduated_breaks === 'greater_than') {\n\n        // The cat array must be reversed when checking whether a value is supposed to be greater.\n        theme.categories.reverse()\n      }\n    }\n\n    theme.categories?.forEach(cat => {\n\n      cat.label ??= cat.value\n\n      if (cat.icon) {\n\n        cat.style = {\n          icon: cat.icon\n        }\n\n        delete cat.icon\n      }\n\n      styleObject(cat, structuredClone(layer.style.default))\n    })\n\n    // Check validity of categorized theme with multiple fields.\n    if (theme.type === 'categorized' && Array.isArray(theme.fields)) {\n\n      theme.categories.forEach(cat => {\n\n        if (!theme.fields.includes(cat.field)) {\n\n          console.warn(`Layer: ${layer.key}; Cat ${cat.label} missed valid field.`)\n        }\n\n        // Multiple field cat theme style must be icon.\n        if (!cat.style.icon) {\n\n          console.warn(`Layer: ${layer.key}; Cat ${cat.label} has invalid icon style.`)\n\n          cat.style.icon = { type: 'dot' }\n        }\n      })\n\n    }\n  }\n\n  function styleObject(cat, defaultStyle) {\n\n    cat.style ??= {}\n\n    // Style arrays are assumed to be valid.\n    if (Array.isArray(cat.style)) return;\n\n    if (cat.icon) {\n      cat.style = {\n        icon: cat.icon\n      }\n      delete cat.icon\n    }\n\n    if (cat.style.icon) {\n\n      // Do not merge default style into icon array.\n      if (Array.isArray(cat.style.icon)) return;\n\n      // Do not merge default style into icon with type definition.\n      if (cat.style.icon.type) return;\n\n      // Do not merge default style into svg [type] icons.\n      if (cat.style.icon.svg) return;\n\n      if (defaultStyle.icon && !Array.isArray(defaultStyle.icon)) {\n\n        cat.style.icon = {\n          ...defaultStyle.icon,\n          ...cat.style.icon\n        }\n      }\n      return;\n\n    }\n\n    // Create a mergeStyle from valid styleKeys\n    const mergeStyle = {}\n\n    Object.keys(defaultStyle)\n      .filter(key => styleKeys.has(key))\n      .forEach(key => mergeStyle[key] = defaultStyle[key])\n\n    cat.style = {\n      ...mergeStyle,\n      ...cat.style,\n    }\n\n    Object.keys(cat)\n      .filter(key => styleKeys.has(key))\n      .forEach(key => {\n        cat.style[key] = cat[key]\n        delete cat[key]\n      })\n\n    iconObject(cat.style)\n\n    // Assign default icon if no cat style icon could be created.\n    if (!cat.style.icon && defaultStyle.icon) {\n\n      console.warn(`Layer:${layer.key}, Failed to evaluate icon: ${JSON.stringify(cat)}. Default icon will be assigned.`)\n\n      cat.style.icon = defaultStyle.icon\n    }\n  }\n\n  function iconObject(style) {\n\n    // The style object already has an icon object.\n    if (style.icon) return;\n\n    Object.keys(style)\n      .filter(key => iconKeys.has(key))\n      .forEach(key => {\n        style.icon ??= {};\n        style.icon[key] = style[key]\n        delete style[key]\n      })\n  }\n\n  function evalIconObject(icon) {\n\n    if (Array.isArray(icon)) {\n\n      if (icon.length === 1) return evalIconObject(icon[0])\n    }\n\n    const chk = icon.svg || icon.url || Object.hasOwn(mapp.utils.svgSymbols, icon.type)\n\n    if (!chk) {\n\n      console.warn(`Layer:${layer.key}, Failed to evaluate icon: ${JSON.stringify(icon)}. Please check configuration.`)\n\n      // Return default icon\n      return {\n        type: 'dot'\n      }\n    }\n\n    return icon\n  }\n}", "/**\n## layer/themes/basic\nThis basic theme module exports a function to support a `type:basic` theme.\n\n@module /layer/themes/basic\n*/\n\n/**\n@function basic\n\n@description\nThe basic [theme] method spreads the theme.style object into the feature.style.\n\n@param {Object} theme The layer.style.theme object.\n@param {Object} feature - The feature object.\n*/\n\nexport default function basic(theme, feature) {\n\n  // Spread theme style to retain scale property\n  feature.style = {\n    ...feature.style,\n    ...theme.style\n  }\n}", "/**\n### mapp.layer.themes.categorized()\n\nThe module exports the categorized function as a mapp.layer.theme. \n\n@module /layer/themes/categorized\n*/\n\n/**\n@function categorized\n\n@description\nThe categorized theme method will assign a style from category matching the features properties.\n\nCluster features may not be styled by a categorized theme.\n\nA theme can have a fields array to apply an icon style array for the individual property fields.\n\n@param {Object} theme The theme configuration object.\n@param {string} [theme.field] The feature property field to theme.\n@param {array} [theme.fields] A fields array to style multiple feature properties.\n@param {Array} theme.categories\n@param {Object} feature\n@param {Object} feature.properties\n@param {Array} [feature.properties.features] A cluster feature will have a features array property.\n*/\n\nexport default function categorized(theme, feature) {\n\n  // The categorized theme requires feature.properties.\n  if (!feature.properties) return;\n\n  // Cluster features can not be styled by category.\n  if (feature.properties.features?.length > 1) return;\n\n  let flat;\n\n  // Theme is using multiple fields.\n  if (Array.isArray(theme.fields)) {\n\n    // Map different theme fields\n    feature.style.icon = theme.fields.map(field => {\n\n      // Get the field value from feature properties\n      const catValue = feature.properties[field]\n\n      // Find category matching field and catValue\n      const cat = theme.categories.find(cat => (cat.value === encodeURIComponent(catValue) || cat.value === catValue) && cat.field === field)\n\n      if (!cat) return;\n\n      flat ||= Array.isArray(cat.style.icon)\n\n      return cat.style.icon\n    \n    // Filter out empty icon entries from map response.\n    }).filter(icon => !!icon);\n\n    if (flat) {\n\n      feature.style.icon = feature.style.icon.flat()\n    }\n\n    return;\n  }\n\n  const catValue = feature.properties[theme.field]\n\n  const cat = theme.categories.find(cat => cat.value === encodeURIComponent(catValue) || cat.value === catValue)\n\n  if (!cat) return;\n\n  // Spread cat style to retain scale property\n  feature.style = {\n    ...feature.style,\n    ...cat.style\n  }\n}", "/**\n### mapp.layer.themes.distributed()\nThis module exports a function that applies a unique value theme to a feature based on a specified field value.\n@module /layer/themes/distributed\n */\n\n/**\n\n * @function distributed\n * @param {Object} theme - The theme configuration object.\n * @param {string} [theme.field='id'] - The field name used for determining the unique value.\n * @param {Object} [theme.lookup={}] - An object mapping unique values to their assigned styles.\n * @param {Array} [theme.boxes=[]] - An array of bounding boxes for the features.\n * @param {number} [theme.index=0] - The current index for assigning styles.\n * @param {Array} theme.categories - An array of category objects.\n * @param {Object} feature - The feature object.\n * @param {Object} feature.properties - The properties of the feature.\n * @returns {void}\n */\nexport default function(theme, feature) {\n\n  if (!theme.lookup) {\n    theme.lookup = {}\n    theme.boxes = []\n    theme.index = 0\n  }\n\n  let field = theme.field || 'id'\n\n  // Get feature identifier for theme.\n  const val = feature.properties[field]\n\n  // Assign theme.style if val is falsy.\n  if (!val) return;\n\n  // The feature field property value already has a style assigned.\n  if (theme.lookup[val]) {\n\n    feature.style = theme.lookup[val].style\n    return;\n  }\n\n  // Get feature bounding box from geometry extent.\n  const bbox = {\n    extent: feature.getGeometry().getExtent()\n  }\n\n  // Find intersecting bounding boxes with their assigned cat index.\n  const intersects = theme.boxes.filter(b => !(bbox.extent[0] > b.extent[2]\n    || bbox.extent[2] < b.extent[0]\n    || bbox.extent[1] > b.extent[3]\n    || bbox.extent[3] < b.extent[1]))\n\n  // Push the current bbox into the array.\n  theme.boxes.push(bbox)\n\n  // Create a set of cat indices from intersecting bounding boxes.\n  const set = new Set(intersects.map(b => b.themeIdx))\n\n  // Increase the current cat indix.\n  theme.index++\n\n  // Reset cat index to 0 if the index reaches the length of the cat array.\n  if (theme.index === theme.categories.length) theme.index = 0\n\n  // i is the cat index if not in set of intersecting boxes.\n  let i = !(set.has(theme.index)) && parseInt(theme.index)\n\n  // Current index is already in set of intersecting boxes.\n  if (i === false) {\n\n    // Iterate through the cat array.\n    for (let free = 0; free < theme.categories.length; free++) {\n\n      // Find an index which is not in set of intersecting bbox indices.\n      if (!set.has(free)) {\n\n        // Assign free index and break loop.\n        i = free;\n        break;\n      }\n    }\n  }\n\n  // Any index is in set of intersecting box indices.\n  if (i === false) {\n\n    // Just assign the current index. It is not possible to prevent some neighbouring cats.\n    i = parseInt(theme.index)\n  }\n\n  // Assign index to the bounding box which is stored in the array of bounding boxes.\n  bbox.themeIdx = i\n\n  // Assign the style to the lookup object for the feature field property value.\n  theme.lookup[val] = theme.categories[i]\n\n  feature.style = theme.lookup[val].style\n}", "/**\n### mapp.layer.themes.graduates()\nThis module exports a function that applies a graduated theme to a feature based on a specified field value.\n@module /layer/themes/graduated\n*/\n\n/**\n@function graduated\n@param {Object} theme - The theme configuration object.\n@param {string} theme.field - The field name used for determining the category.\n@param {Array} theme.categories - An array of category objects.\n@param {string} theme.graduated_breaks - The comparison operator (\"less\" or \"more\").\n@param {Object} feature - The feature object.\n@param {Object} feature.properties - The properties of the feature.\n@param {Array} [feature.properties.features] - An array of sub-features.\n@returns {void}\n */\nexport default function (theme, feature) {\n\n  // The graduated theme requires feature.properties.\n  if (!feature.properties) return;\n\n  let catValue = Array.isArray(feature.properties.features) ?\n\n    // Reduce array of features to sum catValue\n    feature.properties.features.reduce((total, F) => total + Number(F.getProperties().properties[theme.field]), 0) :\n\n    // Get catValue from cat or field property.\n    parseFloat(feature.properties[theme.field]);\n\n  if (!isNaN(catValue) && catValue !== null) {\n\n    const graduated_breaks = {\n      'less_than': val => cat => val <= cat.value,\n      'greater_than': val => cat => val >= cat.value\n    }\n\n    let index = theme.categories.findIndex(graduated_breaks[theme.graduated_breaks](catValue))\n\n    let cat = theme.categories.at(index)\n\n    // Spread cat style to retain scale property\n    feature.style = {\n      ...feature.style,\n      ...cat.style\n    }\n  }\n}", "/**\n## mapp.layer{}\n\nThe individual mapp layer modules are exported as mapp.layer{} object to the mapp library module.\n\n@module /layer\n*/\n\n/**\n@global\n@typedef {Object} layer\nA mapp-layer object is a decorated JSON layer object which has been added to a mapview.\n@property {object} layer.L Openlayers Layer object.\n@property {boolean} layer.display Whether the layer should be displayed.\n@property {layer-style} layer.style The mapp-layer style configuration.\n@property {string} layer.format The format of the layer data.\n@property {layer-cluster} [layer.cluster] Point layer cluster configuration.\n@property {string} [layer.table] Table name for layer features.\n@property {Array} [layer.tables] An array of tables for different zoom level.\n@property {number} [layer.zIndex] The zIndex for the layer canvas element.\n@property {Object} layer.mapview mapview typedef object.\n*/\n\nimport decorate from './decorate.mjs';\nimport formats from './format/_format.mjs';\nimport fade from './fade.mjs';\nimport changeEnd from './changeEnd.mjs'\nimport featureHover from './featureHover.mjs';\nimport featureFilter from './featureFilter.mjs';\nimport * as featureFormats from './featureFormats.mjs';\nimport * as featureFields from './featureFields.mjs';\nimport featureStyle from './featureStyle.mjs';\nimport styleParser from './styleParser.mjs';\nimport basic from './themes/basic.mjs';\nimport categorized from './themes/categorized.mjs';\nimport distributed from './themes/distributed.mjs';\nimport graduated from './themes/graduated.mjs';\n\nexport default {\n  decorate,\n  changeEnd,\n  formats,\n  featureFormats,\n  featureFields,\n  featureHover,\n  featureFilter,\n  featureStyle,\n  fade,\n  styleParser,\n  Style,\n  themes: {\n    basic,\n    categorized,\n    distributed,\n    graduated\n  }\n};\n\n/**\n@function Style\n@deprecated\n\n@description\nThe deprecated `mapp.layer.Style()` method will warn if used and return the `featureStyle()` method which supersedes this method.\n\n@param {Object} layer \n\n@return {Function} featureStyle\n*/\n\nfunction Style(layer) {\n  console.warn(`The mapp.layer.Style() method has been superseeded by the mapp.layer.featureStyle() method.`)\n  return featureStyle(layer)\n}", "/**\n### /location/create\n\n@module /location/create\n*/\n\n/**\n@function createLocation\n\n@description\nThe createLocation method creates a location from a JSON feature and stores the new Location in the layer data at rest.\n\nThe layer will be reloaded to show the new location in the mapview.\n\nDynamic tile generation for MVT layer may lag and not represent recently inserted rows. The feature will be checked for inclusion and the tile generation will be attempted at a 1 second interval until the feature is included in the generated tiles.\n\nThe method will attempt to get the location from the layer data at rest.\n\n@param {Object} feature JSON feature. \n@param {Object} interaction Mapview drawing interaction.\n@param {layer} layer Decorated Mapp Layer.\n\n@property {Object} feature.geometry GeoJSON geometry for new location.\n@property {Object} [interaction.defaults] defaults{} object properties are stored as field columns in the location record.\n@property {Object} [interaction.default_fields] default_fields{} object keys are assigned as interaction.defaults properties with the values used to lookup interaction object properties values.\n*/\n\nexport default async function createLocation(feature, interaction, layer) {\n\n  // If the feature is null, return.\n  if (!feature) return;\n\n  // Get the current table and set new to true.\n  const location = {\n    layer,\n    table: layer.tableCurrent(),\n    new: true\n  };\n\n  // Assign defaults from interaction[default_fields]\n  if (interaction.default_fields) {\n\n    interaction.defaults ??= {}\n\n    Object.entries(interaction.default_fields).forEach(entry => {\n\n      interaction.defaults[entry[0]] = interaction[entry[1]]\n    })\n  }\n\n  // Store location in database.\n  // The id must be returned from a serial ID field.\n  location.id = await mapp.utils.xhr({\n    method: 'POST',\n    url: `${layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'location_new',\n        locale: layer.mapview.locale.key,\n        layer: layer.key,\n        table: location.table\n      }),\n    body: JSON.stringify({\n      [layer.geom]: feature.geometry,\n\n      // Spread in defaults.\n      ...interaction?.defaults,\n      ...layer.draw?.defaults\n    })\n  });\n\n  // Check whether feature is loaded on MVT update.\n  if (layer.format === 'mvt') {\n    layer.features = [];\n    layer.source.on('tileloadend', concatFeatures);\n\n    function concatFeatures(e) {\n      layer.features = layer.features.concat(e.tile.getFeatures());\n    }\n\n    setTimeout(checkFeature, 1000);\n\n    function checkFeature() {\n      let found = layer.features?.find(F => F.properties?.id === location.id);\n      if (found) {\n        layer.source.un('tileloadend', concatFeatures);\n      } else {\n        layer.reload();\n      }\n    }\n  }\n\n  // Layer must be reloaded to reflect geometry changes.\n  layer.reload();\n\n  // Get the newly created location.\n  mapp.location.get(location);\n}\n", "/**\n### /location/decorate\n\n@module /location/decorate\n*/\n\n/**\n@function decorate\n\n@description\nThe location decorator method creates mapp-location typedef object from a JSON location.\n\n@param {object} location JSON location.\n\n@returns {location} Decorated Mapp Location.\n*/\n\nexport default function decorate(location) {\n\n  Object.assign(location, {\n    flyTo,\n    Layers: [],\n    remove,\n    removeCallbacks: [],\n    removeEdits,\n    restoreEdits,\n    trash,\n    update,\n    syncFields,\n    updateCallbacks: [],\n  })\n\n  return location;\n}\n\nfunction remove() {\n\n  // Checks may be performed after async oprations\n  // whether a location has already been removed.\n  delete this.remove\n\n  this.layer.mapview.hooks && mapp.hooks.filter('locations', this.hook)\n\n  delete this.layer.mapview.locations[this.hook]\n\n  this.view instanceof HTMLElement && this.view.remove()\n\n  this.Layers?.forEach(\n    L => this.layer.mapview.Map.removeLayer(L))\n\n  this.layer.mapview.interaction.type !== 'highlight'\n    && this.layer.mapview.interactions.highlight()\n\n  // Reload the layer if possible.\n  this.layer.reload && this.layer.reload()\n\n  this.removeCallbacks?.forEach(\n    fn => typeof fn === 'function' && fn(this))\n}\n\n/**\nUpdate a location from host\n@function update\n*/\n\nasync function update() {\n\n  if (this.infoj.some(entry => entry.invalid)) {\n\n    alert(`Unable to update location with invalid entry value.`)\n    return new Error('Unable to update.');\n  }\n\n  this.infoj\n  .filter(entry => entry.jsonb_key)\n  .filter(entry => entry.jsonb_field)\n  .filter(entry => typeof entry.newValue !== 'undefined')\n  .forEach(entry => {\n\n    entry.newValue = {\n      'jsonb': {\n        [entry.jsonb_field]: {\n          [entry.jsonb_key]: entry.newValue\n        }\n      }\n    }\n  })\n\n  this.infoj\n    .filter(entry => entry.json_field)\n    .filter(entry => entry.json_key)\n    .filter(entry => typeof entry.newValue !== 'undefined')\n    .forEach(entry => {\n\n      const fieldEntry = this.infoj.find(_entry => _entry.field === entry.json_field)\n\n      fieldEntry.newValue ??= fieldEntry.value || {}\n\n      fieldEntry.newValue[entry.json_key] = entry.newValue\n\n      delete entry.newValue\n    })\n\n  // Map new values into newValues object.\n  const newValues = Object.fromEntries(this.infoj\n    .filter(entry => typeof entry.newValue !== 'undefined')\n    .map(entry => [entry.field, entry.newValue]))\n\n  if (!Object.keys(newValues).length) return;\n\n  const location_update = await mapp.utils.xhr({\n    method: 'POST',\n    url:\n      `${this.layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'location_update',\n        locale: this.layer.mapview.locale.key,\n        layer: this.layer.key,\n        table: this.table,\n        id: this.id,\n      }),\n    body: JSON.stringify(newValues),\n  });\n\n  if (location_update instanceof Error) {\n    alert(`Location update has failed.`)\n    this.view?.classList.remove('disabled')\n    return;\n  }\n\n  // Update entry.values with newValues.\n  // Return dependents from updated entries.\n  const dependents = this.infoj\n    .filter(entry => typeof entry.newValue !== 'undefined')\n    .map(entry => {\n\n      entry.value = entry.newValue;\n      delete entry.newValue;\n\n      return entry.dependents\n    })\n    .flat()\n    .filter(dependents => dependents !== undefined)\n\n  // sync dependent fields\n  if (dependents.length) await this.syncFields([...new Set(dependents)])\n\n  // Reload layer.\n  this.layer.reload()\n\n  this.updateCallbacks?.forEach(fn => typeof fn === 'function' && fn(this))\n}\n\nasync function syncFields(fields) {\n\n  const response = await mapp.utils.xhr(\n    `${this.layer.mapview.host}/api/query?` +\n    mapp.utils.paramString({\n      template: 'location_get',\n      locale: this.layer.mapview.locale.key,\n      layer: this.layer.key,\n      table: this.table,\n      id: this.id,\n      fields: fields.join(),\n    }));\n\n  // Return if response is falsy or error.\n  if (!response || response instanceof Error) {\n    console.warn('No data returned from location_get request using ID:', this.id)\n    return\n  }\n  // Check if the response is an array.\n  else if (Array.isArray(response)) {\n    console.warn(`Location response returned more than one record for Layer: ${this.layer.key}.`)\n    console.log('Location Get Response:', response)\n    return\n  }\n\n  this.infoj\n    .filter(entry => typeof response[entry.field] !== 'undefined')\n    .forEach(entry => {\n      entry.value = response[entry.field];\n    })\n}\n\nfunction flyTo(maxZoom) {\n  const sourceVector = new ol.source.Vector();\n\n  this.Layers.forEach((layer) => {\n    const source = layer.getSource();\n    typeof source.getFeatures === 'function' && sourceVector.addFeatures(source.getFeatures());\n  });\n\n  this.layer.mapview.fitView(sourceVector.getExtent(), {\n    maxZoom\n  });\n}\n\nasync function trash() {\n\n  if (!confirm(mapp.dictionary.confirm_delete)) return;\n\n  await mapp.utils.xhr(`${this.layer.mapview.host}/api/query?` +\n    mapp.utils.paramString({\n      template: 'location_delete',\n      locale: this.layer.mapview.locale.key,\n      layer: this.layer.key,\n      table: this.table,\n      id: this.id\n    }))\n\n  this.remove()\n}\n\nfunction removeEdits() {\n\n  // Iterate through the location.infoj entries.\n  this.infoj.forEach(entry => {\n\n    if (!entry.edit) return;\n\n    // Remove newValue\n    // Unsaved edits will be lost.\n    delete entry.newValue\n\n    // Change edit key to _edit\n    entry._edit = entry.edit\n    delete entry.edit\n  })\n}\n\nfunction restoreEdits() {\n\n  // Restore edit in infoj entries\n  this.infoj.forEach(entry => {\n\n    if (!entry._edit) return;\n\n    entry.edit = entry._edit\n    delete entry._edit\n  })\n}", "/**\n## mapp.location.get()\n@module /location/get\n\n@param {Object} location\nA location object to be decorated.\n*/\nexport async function get(location, list = location.layer.mapview.locations) {\n\n  // A getLocation function has been set for the current mapview.interaction.\n  if (location.layer.mapview.interaction?.getLocation instanceof Function) {\n\n    location.layer.mapview.interaction?.getLocation(location)\n    return;\n  }\n\n  if (!location.layer || !location.id) return;\n\n  // Create location hook.\n  location.hook = `${location.layer.key}!${location.id}`;\n\n  // Return if hook exists in mapview.interaction.locations set.\n  if (location.layer.mapview.interaction?.locations?.has(location.hook)) return;\n\n  // Add hook to mapview.interaction.locations set.\n  location.layer.mapview.interaction?.locations?.add(location.hook)\n\n  // Remove location if already in list.\n  if (list[location.hook]) {\n    list[location.hook].remove()\n    delete list[location.hook]\n\n    // Remove hook to mapview.interaction.locations set.\n    location.layer.mapview.interaction?.locations?.delete(location.hook)\n    return;\n  }\n\n  location.locale = location.layer.mapview.locale.key\n\n  await getInfoj(location)\n\n  mapp.location.decorate(location)\n\n  // Assign location to mapview.\n  list[location.hook] = location\n\n  // Remove hook to mapview.interaction.locations set.\n  location.layer.mapview.interaction?.locations?.delete(location.hook)\n\n  // A location must have a record from a listview.\n  location.record\n\n    // Hooks must be enabled on the mapview.\n    && location.layer.mapview.hooks\n\n    // Push location hook to URL params.\n    && mapp.hooks.push('locations', location.hook)\n\n  return location\n}\n\nexport async function getInfoj(location) {\n\n  if (!location.layer) {\n    console.warn('No layer provided for getLocationInfoj()')\n    return;\n  }\n\n  // Location layer is provided as key.\n  if (typeof location.layer === 'string') {\n\n    location.layer = await mapp.utils.xhr(`${mapp.host}/api/workspace/layer?locale=${location.locale}&layer=${location.layer}`)\n  }\n\n  // Get table from layer if not provided.\n  location.table ??= location.layer.table\n    || Object.values(location.layer.tables).find(table => !!table)\n\n  // Request the location fields from layer json & id.\n  const response = await mapp.utils.xhr(`${mapp.host}/api/query?` + mapp.utils.paramString({\n    template: 'location_get',\n    locale: location.locale,\n    layer: location.layer.key,\n    table: location.table,\n    id: location.id,\n  }));\n\n  // Check if the response is empty.\n  if (!response || response instanceof Error) {\n    console.warn('No data returned from location_get request using ID:', location.id)\n    return\n  }\n  // Check if the response is an array.\n  else if (Array.isArray(response)) {\n    console.warn(`Location response returned more than one record for Layer: ${location.layer.key}.`)\n    console.log('Location Get Response:', response)\n    return\n  }\n\n  // Assign qID as default field if layer has no infoj.\n  location.layer.infoj ??= [{ field: location.layer.qID }]\n\n  // Parse and clone the infoj and response data.\n  location.infoj = location.layer.infoj?.map(_entry => ({\n    ...structuredClone(_entry),\n    title: _entry.title || response[_entry.field + '_label'],\n    value: response[_entry.field],\n    location\n  }))\n\n  return location.infoj\n}\n", "/**\n## mapp.location.nnearest()\n@module /location/nnearest\n\n@param {Object} params\n*/\n\nexport default async function (params) {\n\n  let\n    properties = params.feature.getProperties(),\n    geom = params.feature.getGeometry(),\n    _coords = geom.getCoordinates(),\n    coords = ol.proj.transform(\n      _coords,\n      'EPSG:' + params.mapview.srid,\n      'EPSG:' + params.layer.srid)\n\n  const response = await mapp.utils.xhr(\n    `${params.mapview.host}/api/query/get_nnearest?` +\n      mapp.utils.paramString({\n        locale: params.mapview.locale.key,\n        layer: params.layer.key,\n        geom: params.layer.geom,\n        qID: params.layer.qID,\n        label: params.layer.cluster?.label || params.layer.qID,\n        table: params.table,\n        filter: params.layer.filter?.current,\n        n: properties.count > (params.max || 99) ? (params.max || 99) : properties.count,\n        x: coords[0],\n        y: coords[1],\n        coords: coords,\n      })\n  );\n\n  const list = mapp.utils.html.node`\n    <div style=\"max-width: 66vw; max-height: 300px; overflow-x: hidden;\">\n      <ul>\n      ${response.map(li => mapp.utils.html.node`\n        <li\n          onclick=${e => {\n            params.mapview.popup(null)\n            mapp.location.get({\n              //mapview: params.mapview,\n              layer: params.layer,\n              table: params.table,\n              id: li.id,\n              marker: ol.proj.transform(\n                li.coords,\n                'EPSG:' + params.layer.srid,\n                'EPSG:' + params.mapview.srid),\n            })\n          }}>${li.label || '\"' + params.layer.cluster?.label + '\"'}`)}`;\n\n  params.mapview.popup({\n    coords: ol.proj.transform(\n      coords,\n      'EPSG:' + params.layer.srid,\n      'EPSG:' + params.mapview.srid\n    ),\n    content: list,\n    autoPan: true,\n  });\n\n}", "/**\n## /location\n\n@module /location\n*/\n\nimport create from './create.mjs'\n\nimport decorate from './decorate.mjs'\n\nimport {get, getInfoj} from './get.mjs'\n\nimport nnearest from './nnearest.mjs'\n\nexport default {\n  create,\n  decorate,\n  get,\n  getInfoj,\n  nnearest,\n}", "/**\n@module /mapview/attribution\n*/\n\nexport default function attribution(mapview) {\n\n  if (typeof mapview.attribution !== 'object') return;\n\n  mapview.attribution.target ??= mapview.target\n\n  mapview.attribution.node = mapp.utils.html.node`\n    <div class=\"map-attribution\">${mapview.attribution.logo}`\n\n  mapview.attribution.target.append(mapview.attribution.node)\n\n  mapview.attribution.linksTarget = mapp.utils.html.node`<div class=\"attribution-links\">`\n    \n  mapview.attribution.node.append(mapview.attribution.linksTarget)\n\n  mapview.attribution.links ??= {}\n\n  mapview.attribution.check = () => {\n\n    // Create clone of mapview.attribution.links which are always displayed.\n    const links = structuredClone(mapview.attribution.links)\n\n    // Assign layer.attribution for visible to layers to links.\n    Object.values(mapview.layers)\n      .filter(layer => !!layer.display)\n      .filter(layer => !!layer.attribution)\n      .forEach(layer => Object.assign(links, layer.attribution))\n\n    const elements = Object.entries(links)\n      .map(entry => mapp.utils.html`\n      <a target=\"_blank\" href=\"${entry[1]}\">${entry[0]}`)\n\n    // Render all links into mapview.attribution.target.\n    mapp.utils.render(\n      mapview.attribution.linksTarget,\n      mapp.utils.html.node`${elements}`)\n\n  }\n}", "/**\n## Mapview.addLayer()\n\n@module /mapview/addLayer\n*/\n\nexport default async function (layers) {\n\n  if (!Array.isArray(layers)) return;\n\n  const layersSet = this.hooks && new Set(mapp.hooks.current.layers);\n\n  for (let i = 0; i < layers.length; i++) {\n\n    const layer = mapp.utils.merge({}, this.locale.layer || {}, layers[i])\n\n    // The layer.err will be assigned from a failure to fetch a layer template.\n    if (layer.err) {\n      // Error for each of the array items.\n      layer.err.forEach(err => console.error(err))\n    }\n\n    layer.zIndex ??= i\n\n    layer.mapview = this;\n\n    // Only the layers in the layerset should be displayed.\n    // Will override the layer.display setting from the workspace\n    if (layersSet?.size) {\n      layer.display = layersSet.has(layer.key);\n    }\n\n    // Layer without format should not be decorated.\n    if (!layer.format) continue;\n\n    // Check the layer format.\n    if (!mapp.layer.formats[layer.format]) {\n      console.error(`Layer: ${layer.key}; Format: ${layer.format} is unknown.`)\n      continue;\n    }\n\n    await mapp.layer.decorate(layer);\n\n    if (!layer.L) continue;\n\n    this.layers[layer.key] = layer;\n\n    layer.display && layer.show();\n  }\n\n  // Will resolve once the map has completed render.\n  this.renderComplete = new Promise(resolve => {\n\n    this.Map.once('rendercomplete', resolve)\n  })\n\n  return layers;\n}", "/**\n## Mapview.fitView()\nFits the view to a given extent\n\n@module /mapview/fitView\n@param {Array} extent - geo extent, array of 4 numbers, must be [minX, minY, maxX, maxY]\n@param {Object} options - Defaults to empty object \n*/\n\nexport default function (extent, options = {}){\n\n  // Extent must be an array of finite values.\n  if (!Array.isArray(extent) || !extent.every(val => isFinite(val))) {\n    console.warn('Attempted to call fitView method with invalid extent');\n    return;\n  }\n\n  this.Map.getView().fit(extent, {\n    padding: [50, 50, 50, 50],\n    duration: 1000,\n    ...options\n  })\n}", "/**\n## Mapview.getBounds()\nReturns an object representing bounds\n\n@module /mapview/getBounds\n\n@param {string} srid\nOptional spatial reference identifier as string.\n\n@returns {{south: number, west: number, north: number, east: number}}\nBounds object\n*/\n\nexport default function(srid){\n  /**\n\n   */\n\n  const extent = this.Map.getView().calculateExtent();\n\n  if (!srid) return {\n    south: extent[1],\n    west: extent[0],\n    north: extent[3],\n    east: extent[2],\n  };\n\n  // transforms extent from source projection to destination projection\n  const extentTransformed = ol.proj.transformExtent(\n    extent,\n    `EPSG:${this.srid}`,\n    `EPSG:${srid}`\n  );\n\n  return {\n    south: extentTransformed[1],\n    west: extentTransformed[0],\n    north: extentTransformed[3],\n    east: extentTransformed[2],\n  }\n}", "/**\n## Mapview.geoJSON()\nThe mapview.geojson method creates and adds a geoJSON layer/source to the mapview.Map.\n\n@module /mapview/geometry\n\n@param {Object} params\nThe params object argument.\n*/\n\nlet format\n\nexport default function (params) {\n\n  if (typeof params.format === 'string' && Object.hasOwn(ol.format, params.format)) {\n\n    format = new ol.format[params.format]();\n  }\n\n  let feature;\n\n  // Parse geometry from string value if not provided.\n  const geometry = params.geometry || (typeof params.value === 'string' ? JSON.parse(params.value) : params.value)\n\n  // Create OL style object from params.style if not provided.\n  params.Style ??= mapp.utils.style(params.style)\n\n  if (!geometry) return;\n\n  try {\n\n    feature = format.readFeature({\n      type: 'Feature',\n      geometry\n    }, {\n      dataProjection: `EPSG:${params.dataProjection || params.srid || this.srid}`,\n      featureProjection: `EPSG:${this.srid}`\n    });\n\n  } catch (err) {\n\n    console.error(err)\n    return;\n  }\n\n  if (!feature) return;\n\n  const layerVector = new ol.layer.Vector({\n    source: new ol.source.Vector({\n      features: [feature]\n    }),\n    zIndex: params.zIndex,\n    style: params.Style\n  })\n\n  this.Map.addLayer(layerVector)\n\n  return layerVector\n}", "/**\n## Mapview.geoJSON()\nThe mapview.geojson method creates and adds a geoJSON layer/source to the mapview.Map.\n\n@module /mapview/geoJSON\n\n@param {Object} params\nThe params object argument.\n*/\n\nexport default function (params) {\n\n  params.format = 'GeoJSON'\n\n  return this.geometry(params)\n}", "/**\n## Mapview.infotip()\n\n@module /mapview/infotip\n\n@param {Object} content\n*/\n\nconst infotip = {}\n\nexport default function(content) {\n\n  const mapview = this;\n\n  // Remove infotip node element\n  infotip.node?.remove()\n\n  // The mapview must have a position to place the infotip.\n  if (!mapview.position) return;\n\n  // Remove infotip positioning event from mapview Map.\n  mapview.Map.un('pointermove', position)\n\n  // Just clears the infotip.\n  if (!content) return;\n\n  if (content instanceof HTMLElement) {\n\n    infotip.node = content\n\n  // Content type object but not HTMLElement cannot be rendered.\n  } else if (typeof content === 'object') {\n\n    console.warn(`Content type object cannot be rendered in infotip: ${JSON.stringify(content)}`)\n    return;\n\n  } else {\n\n    // Check for braces in content string.\n    if (mapview.locale.xss_check && /[()]/.test(content)) {\n\n      console.warn(`Potential XSS detected in infotip content ${content}`)\n    }\n\n    // Creates the infotip node.\n    infotip.node = mapp.utils.html.node`<div class=\"infotip box-shadow\">`\n\n    // Assigns the infotip content.\n    infotip.node.innerHTML = content\n  }\n\n  // Appends the infotip to the mapview.Map.\n  mapview.Map.getTargetElement().append(infotip.node)\n\n  // Assign infotip positioning event to mapview.Map.\n  mapview.Map.on('pointermove', position)\n\n  // Set the position of the infotip.\n  position()\n\n  function position() {\n\n    // The infotip class has a default opacity of 0, with transition effect.\n    infotip.node.style.opacity = 1;\n\n    // Set the infotip position from mapview pointerLocation.\n    infotip.node.style.left = mapview.pointerLocation.x - infotip.node.offsetWidth / 2 + 'px'\n    infotip.node.style.top = mapview.pointerLocation.y - infotip.node.offsetHeight - 15 + 'px'\n  }\n}", "/**\n## Mapview.locate()\n\n@module /mapview/locate\n\n@param {Object} params\nThe params object argument.\n*/\n\nexport default function (params) {\n\n  this._locate = this._locate || Object.assign({\n    icon: {\n      svg: `${this.host}/icons/locator.svg`,\n      scale: 0.05\n    },\n    feature: new ol.Feature({\n      geometry: new ol.geom.Point([0, 0])\n    }),\n  }, params || {})\n\n  this._locate.active = !this._locate.active\n\n  // Create the geolocation marker if it doesn't exist yet.\n  if (!this._locate.L) {\n\n    this._locate.L = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: [this._locate.feature]\n      }),\n      zIndex: 999,\n      style: mapp.utils.style({\n        icon: this._locate.icon\n      })\n    })\n  }\n\n  // Remove the geolocation marker if locate is not active.\n  if (!this._locate.active) {\n    this.Map.removeLayer(this._locate.L)\n    return;\n  }\n\n  this.Map.addLayer(this._locate.L)\n\n  mapp.utils.getCurrentPosition((pos) => {\n\n    const coords = ol.proj.fromLonLat([\n      parseFloat(pos.coords.longitude),\n      parseFloat(pos.coords.latitude)\n    ])\n\n    this._locate.feature.getGeometry().setCoordinates(coords)\n\n    // Fly to pos_ll and set flyTo to false to prevent map tracking.\n    this.Map.getView().animate({\n      center: coords,\n      zoom: this.locale.maxZoom\n    })\n  })\n\n}", "/**\n## Mapview.popup()\n\n@module /mapview/popup\n\n@param {Object} params\nThe params object argument.\n*/\n\nconst popup = {}\n\nexport default function(params) {\n\n  if (typeof params === 'undefined') {\n\n    // Returns undefined / falsy if popup.node has been removed.\n    return popup.node?.parentNode;\n  }\n\n  const mapview = this;\n\n  // Remove a current tooltip.\n  mapview.infotip(null)\n\n  // Remove infotip node element\n  popup.node?.remove()\n\n  // Just clears the infotip.\n  if (!params) return;\n\n  popup.node = mapp.utils.html.node `<div class=\"popup box-shadow\">`\n\n  popup.node.appendChild(params.content)\n  \n  popup.overlay && mapview.Map.removeOverlay(popup.overlay)\n\n  popup.overlay = new ol.Overlay({\n    element: popup.node,\n    position: params.coords || mapview.position,\n    positioning: 'bottom-center',\n    autoPan: params.autoPan,\n    insertFirst: true,\n    autoPanAnimation: {\n      duration: 250\n    }\n  })\n\n  mapview.Map.addOverlay(popup.overlay)\n\n}", "/**\n## Mapview.allFeatures()\n\n@module /mapview/allFeatures\n*/\n\nexport default function (e, mapview) {\n\n    // Remove popup from mapview.\n    mapview.popup(null)\n\n    const features = [];\n\n    // Find locations at pixel.\n    mapview.Map.forEachFeatureAtPixel(e.pixel,\n        (F, L) => {\n\n            const feature = {\n                F, L,\n                layer: mapview.layers[L.get('key')],\n                id: F.get('id') || F.getId()\n            }\n\n            features.push(feature)\n        },\n        {\n            layerFilter: mapview.interaction.layerFilter,\n            hitTolerance: mapview.interaction.hitTolerance,\n        })\n\n    // No features at pixel.\n    if (!features.length) return;\n\n    const content = mapp.utils.html.node`\n      <div style=\"max-width: 66vw; max-height: 300px; overflow-x: hidden;\">\n        <ul>\n        ${features.map(feature => mapp.utils.html.node`\n          <li onclick=${e => {\n            mapview.interaction.getFeature(feature)\n            mapview.popup(null)\n        }}\n        }}>${feature.L.get('key')} [${feature.id}]`)}`;\n\n    mapview.popup({\n        content,\n        autoPan: true,\n    });\n}", "/**\n## Mapview.interactions.highlight()\n\n@module /mapview/interactions/highlight\n\n@param {Object} params\nThe params object argument.\n*/\n\nexport default function (params) {\n\n  const mapview = this;\n\n  // Finish the current interaction.\n  mapview.interaction?.finish()\n\n  mapview.interaction = {\n\n    type: 'highlight',\n\n    finish,\n\n    clear,\n\n    highlight,\n\n    getFeature,\n\n    hitTolerance: 5,\n\n    candidates: {},\n\n    candidateKeys: new Set(),\n\n    locations: new Set(),\n\n    longClickMethod: mapview.allFeatures,\n\n    longClickMS: 500,\n\n    // Filter for layers which have a highlight style.\n    layerFilter: L => Object.values(this.layers)\n\n      // layer L matching the feature layer L must have a qID defined\n      .some(layer => layer.qID && layer.L === L),\n\n    // Spread params argument.\n    ...params\n  }\n\n  // pointerMove will highlight features.\n  mapview.Map.on('pointermove', pointerMove)\n\n  // click will select the highlighted feature.\n  mapview.Map.on('click', click)\n\n  mapview.Map.getTargetElement().addEventListener('mousedown', mouseDown)\n\n  mapview.Map.getTargetElement().addEventListener('touchstart', touchStart)\n\n  mapview.Map.getTargetElement().addEventListener('mouseup', mouseUp)\n\n  mapview.Map.getTargetElement().addEventListener('mouseleave', mouseleave)\n\n  function mouseleave() {\n\n    // Reset candidateKeys Set\n    mapview.interaction.candidateKeys = new Set();\n    clear()\n  }\n\n  // Prevent mouseDown event on touch input.\n  function touchStart(e) {\n    e.preventDefault()\n  }\n\n  function mouseDown() {\n\n    // Short circuit the mouseDown event method if the longClickMethod is falsy.\n    if (!mapview.interaction.longClickMethod) return;\n\n    // Remove longClick flag.\n    delete mapview.interaction.longClick\n\n    // Clear longClick timeout.\n    mapview.interaction.longClickTimeout && clearTimeout(mapview.interaction.longClickTimeout)\n\n    // Set longClick timeout.\n    mapview.interaction.longClickTimeout = setTimeout(\n\n      // Set longClick flag.\n      () => {\n        mapview.interaction.longClick = true\n        mapview.Map.getTargetElement().style.cursor = 'wait'\n      },\n\n      // 1000ms default timeout for longclick.\n      mapview.interaction.longClickMS)\n  }\n\n  function mouseUp() {\n    mapview.Map.getTargetElement().style.cursor = 'auto'\n  }\n\n  function pointerMove(e) {\n\n    // Clear longClick timeout.\n    mapview.interaction.longClickTimeout && clearTimeout(mapview.interaction.longClickTimeout)\n\n    let candidates = {};\n\n    mapview.Map.forEachFeatureAtPixel(e.pixel,\n      (F, L) => {\n\n        // Create candidate object.\n        let candidate = {\n          key: `${L.get('key') || ol.util.getUid(L)}!${F.get('id') || F.getId() || ol.util.getUid(F)}`,\n          F, L\n        }\n\n        // Assign to key in candidates object.\n        candidates[candidate.key] = candidate\n      },\n      {\n        layerFilter: mapview.interaction.layerFilter,\n        hitTolerance: mapview.interaction.hitTolerance,\n      })\n\n    // Check whether set of candidate keys is equal to mapview.interaction.candidateKeys\n    if (mapp.utils.areSetsEqual(mapview.interaction.candidateKeys, new Set(Object.keys(candidates)))) {\n\n      // The highlight hasn't changed.\n      return;\n\n    } else if (!Object.keys(candidates).length) {\n\n      // Reset candidateKeys Set\n      mapview.interaction.candidateKeys = new Set();\n      clear()\n      return;\n\n    }\n\n    // Find candidate from key which is not in candidates set.\n    const candidate = candidates[Object.keys(candidates).find(key => !mapview.interaction.candidateKeys.has(key))]\n\n      // Or assign candidate from first key\n      || mapview.interaction.current?.key && candidates[mapview.interaction.current?.key]\n      || candidates[Object.keys(candidates)[0]]\n\n    // Assign new Set of candidate keys to mapview.interaction.\n    mapview.interaction.candidateKeys = new Set(Object.keys(candidates))\n\n    // Don't highlight the highlighted candidate.\n    if (mapview.interaction.current?.key === candidate.key) return;\n\n    // Call highlight method.\n    mapview.interaction.highlight(candidate, e)\n  }\n\n  function highlight(feature, e) {\n\n    // Clear curent highlight before assigning new.\n    clear()\n\n    // Assign the layer and ID to the candidate object.\n    mapview.interaction.current = Object.assign(feature, {\n      layer: mapview.layers[feature.L.get('key')],\n      id: feature.F.get('id') || feature.F.getId()\n    })\n\n    // Assign the id to the layer highlight key.\n    // Required to determine in the style function whether the current feature should be styled as highlighted.\n    mapview.interaction.current.layer.highlight = feature.id\n\n    // Touch events should not highlight features since there is no cursor.\n    if (e.originalEvent.pointerType !== 'mouse') {\n\n      // Don't get location from touch pan or zoom pinch event.\n      e.type !== 'pointermove' && mapview.interaction.getFeature(mapview.interaction.current)\n\n      // Clear touch highlight.\n      clear()\n      return;\n    }\n\n    // Change cursor if the highlight is selectable.\n    if (mapview.interaction.current.layer.infoj) mapview.Map.getTargetElement().style.cursor = 'pointer'\n\n    // Execute hover method assigned to the current feature layer.\n    typeof mapview.interaction.current.layer.style?.hover?.method === 'function'\n      && mapview.interaction.current.layer.style.hover.method(feature.F, mapview.interaction.current.layer)\n\n    // Style the feature itself if possible.\n    if (mapview.interaction.current.layer.format !== 'mvt'\n      && mapview.interaction.current.layer.style.highlight\n      && typeof mapview.interaction.current.F.setStyle === 'function') {\n\n      // Unset cached OL Styles object.\n      feature.F.set('Styles', null, true)\n\n      feature.F.set('highlight', true, true)\n      mapview.interaction.current.F.setStyle()\n\n    } else if (mapview.interaction.current.layer.style.highlight) {\n\n      // Render unto canvas those things that are canvas'\n      mapview.interaction.current.layer.L.changed()\n    }\n  }\n\n  let clicked;\n\n  // Select the current highlighted feature.\n  function click(e) {\n\n    // Reset cursor.\n    mapview.Map.getTargetElement().style.cursor = 'auto'\n\n    // Clear longClick timeout.\n    mapview.interaction.longClickTimeout && clearTimeout(mapview.interaction.longClickTimeout)\n\n    if (mapview.interaction.longClick && typeof mapview.interaction.longClickMethod === 'function') {\n\n      mapview.interaction.longClickMethod(e, mapview)\n      return;\n    }\n\n    // Limit click event to 600ms\n    if (clicked) return;\n\n    clicked = setTimeout(() => { clicked = null }, 600);\n\n    // There is no current highlighted feature without pointerMove.\n    // Simulate pointermove on the touch click coordinates.\n    if (e.originalEvent.pointerType === 'touch') {\n\n      mapview.interaction.candidateKeys = new Set();\n      e.type = 'touchClick'\n      pointerMove(e)\n      return\n    }\n\n    // Remove any existing popup. e.g. Cluster select dialogue.\n    mapview.popup(null)\n\n    // Return if there is no current highlight to select.\n    if (mapview.interaction.current) {\n      mapview.interaction.getFeature(mapview.interaction.current);\n      return;\n    }\n\n    // Execute the noLocationClick method\n    if (typeof mapview.interaction.noLocationClick === 'function') {\n      mapview.interaction.noLocationClick(e)\n    }\n  }\n\n  function clear() {\n\n    // Highlight has already been cleared.\n    if (!mapview.interaction.current) return;\n\n    // Remove any infotip.\n    mapview.infotip(null)\n\n    // Reset cursor.\n    mapview.Map.getTargetElement().style.cursor = 'auto'\n\n    // Delete the highlight id from current layer.\n    delete mapview.interaction.current.layer.highlight\n\n    // Style the feature itself if possible.\n    if (mapview.interaction.current.layer.format !== 'mvt'\n      && typeof mapview.interaction.current.F.setStyle === 'function') {\n\n      // Unset cached style to allow for highlight style.\n      mapview.interaction.current.F.set('Styles', null, true)\n\n      mapview.interaction.current.F.set('highlight', false, true)\n      mapview.interaction.current.F.setStyle()\n\n    } else if (mapview.interaction.current.layer.style.highlight) {\n\n      // Render unto canvas those things that are canvas'\n      mapview.interaction.current.layer.L.changed()\n    }\n\n    // Delete the current highlight object.\n    delete mapview.interaction.current\n  }\n\n  function getFeature(feature) {\n\n    if (!feature.layer.infoj) return;\n\n    // Get the properties of the current highlight feature.\n    const properties = feature.F.getProperties();\n\n    // Return with a select dialogue for cluster feature.\n    if (properties.count > 1) {\n\n      // Get cluster features\n      const features = feature.F.get('features')\n\n      if (Array.isArray(features)) {\n\n        // Get list of cluster feature label and id.\n        let featuresList = features.map(f => {\n          let F = f.getProperties()\n          return {\n            id: F.id,\n            label: F.properties[feature.layer.cluster?.label]\n          }\n        })\n\n        // Create list to get cluster features\n        const list = mapp.utils.html.node`\n        <div style=\"max-width: 66vw; max-height: 300px; overflow-x: hidden;\">\n          <ul>\n          ${featuresList.map(li => mapp.utils.html.node`\n            <li\n              onclick=${e => {\n            mapview.popup(null)\n            mapp.location.get({\n              layer: feature.layer,\n              table: feature.layer.table || feature.layer.tableCurrent(),\n              id: li.id\n            })\n          }}>${li.label || li.id}`)}`;\n\n        // Create popup to select cluster features.\n        mapview.popup({\n          coords: feature.F.getGeometry().getCoordinates(),\n          content: list,\n          autoPan: true,\n        });\n\n        return;\n      }\n\n      mapp.location.nnearest({\n        mapview,\n        layer: feature.layer,\n        table: feature.layer.table || feature.layer.tableCurrent(),\n        feature: feature.F\n      })\n      return;\n    }\n\n    // Select the current highlight feature.\n    mapp.location.get({\n      layer: feature.layer,\n      table: feature.layer.table || feature.layer.tableCurrent(),\n      id: feature.id\n    })\n  }\n\n  // Finished the highlight mapview.interaction.\n  function finish() {\n\n    // Clear must be called before interaction is nulled.\n    clear()\n\n    // Remove popup from mapview.\n    mapview.popup(null)\n\n    // Remove event listener from mapview.\n    mapview.Map.un('pointermove', pointerMove)\n    mapview.Map.un('click', click)\n    mapview.Map.getTargetElement().removeEventListener('mousedown', mouseDown)\n    mapview.Map.getTargetElement().removeEventListener('touchstart', touchStart)\n    mapview.Map.getTargetElement().removeEventListener('mouseup', mouseUp)\n    mapview.Map.getTargetElement().removeEventListener('mouseleave', mouseleave)\n\n    mapview.interaction.callback?.()\n  }\n}", "/**\n## Mapview.interactions.draw()\n\n@module /mapview/interactions/draw\n\n@param {Object} params\nThe params object argument.\n*/\n\nexport default function(params){\n\n  const mapview = this;\n\n  // Finish the current interaction.\n  mapview.interaction?.finish()\n\n  // Assign params onto the defaults as mapview.interaction.\n  mapview.interaction = {\n\n    type: 'draw',\n\n    finish,\n\n    getFeature,\n  \n    format: new ol.format.GeoJSON(),\n\n    source: new ol.source.Vector(),\n  \n    // The Layer is required for generated features such as isolines.\n    Layer: new ol.layer.Vector({\n      zIndex: params.layer?.zIndex || 99\n    }),\n\n    // Bind context menu from mapp ui elements.\n    drawend: mapp.ui?.elements.contextMenu.draw.bind(this),\n\n    vertices: [],\n\n    // Whether the draw interaction event should be handled.\n    condition: e => {\n\n      if (mapview.interaction.wait) return false;\n\n      // Right click\n      if (e.originalEvent.buttons === 2) {\n\n        // Remove last vertex.\n        mapview.interaction.interaction.removeLastPoint()\n        mapview.interaction.vertices.pop()\n\n        const moveEvent = new ol.MapBrowserEvent('pointermove', mapview.Map, e.originalEvent)\n        mapview.interaction.interaction.handleEvent(moveEvent)\n\n        mapview.interaction.conditions?.forEach(fn => typeof fn === 'function' && fn(e))\n        return false;\n      }\n\n      // Left click.\n      if (e.originalEvent.buttons === 1) {\n\n        mapview.interaction.vertices.push(e.coordinate);\n        mapview.popup(null);\n        \n        mapview.interaction.conditions?.forEach(fn => typeof fn === 'function' && fn(e))\n        return true;\n      }\n    },\n  \n    // OL Style for sketch feature.\n    style: [\n      new ol.style.Style({\n        stroke: new ol.style.Stroke({\n          color: '#3399CC',\n          width: 1.25\n        })\n      }),\n      new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 5,\n          fill: new ol.style.Fill({\n            color: '#eee',\n          }),\n          stroke: new ol.style.Stroke({\n            color: '#3399CC',\n            width: 1.25\n          })\n        }),\n        geometry: mapp.utils.verticeGeoms\n      })\n    ],\n    \n    // Spread params argument.\n    ...params\n  }\n \n  // Change cursor style over mapview element.\n  mapview.Map.getTargetElement().style.cursor = 'crosshair'\n\n  // Set mapview.interaction.Layer source.\n  mapview.interaction.Layer.setSource(mapview.interaction.source)\n  \n  // Add mapview.interaction.Layer to mapview.\n  mapview.Map.addLayer(mapview.interaction.Layer)\n\n  document.addEventListener('keyup', escape)\n\n  function escape(e){\n\n    e.key === 'Escape' && mapview.interaction.finish()\n  }\n  \n  // Create OL draw interaction.\n  mapview.interaction.interaction = new ol.interaction.Draw(mapview.interaction)\n\n  // Set drawstart event method.\n  mapview.interaction.interaction.on('drawstart', e => {\n\n    // Get the draw feature geometry.\n    const geometry = e.feature.getGeometry()\n\n    async function onChange() {\n      mapview.popup({\n        content: mapp.utils.html.node`\n          <div style=\"padding: 5px\">\n          ${await mapp.utils.convert(\n              // Get the geometry metric figure.\n              mapview.metrics[mapview.interaction.tooltip.metric](geometry),\n\n              // Options argument for conversion.\n              mapview.interaction.tooltip)}`\n      })\n    }\n\n    // Assign an onchange method to the geometry for the tooltip.\n    mapview.interaction.tooltip && geometry.on('change', mapview.interaction.tooltip.onChange || onChange)\n\n    // Clear the source\n    mapview.interaction.source.clear()\n\n    // Remove the popup.\n    mapview.popup(null)\n  })\n  \n  if (typeof mapview.interaction.drawend === 'function') {\n\n    mapview.interaction.interaction.on('drawend', mapview.interaction.drawend)\n  }\n  \n  // Add OL interaction to mapview.Map\n  mapview.Map.addInteraction(mapview.interaction.interaction)\n\n  // Assign snap interaction.\n  mapview.interactions.snap(mapview)\n \n  // Get first feature from mapview.interaction.source as GeoJSON.\n  function getFeature() {\n      \n    // Return feature as geojson.\n    return JSON.parse(\n      mapview.interaction.format.writeFeature(\n        // Get first OL feature from source.\n        mapview.interaction.source.getFeatures()[0],\n        { \n          // Use mapview.interaction.srid as dataProjection if defined in params.\n          dataProjection: 'EPSG:' + mapview.interaction.layer?.srid || mapview.interaction.srid || mapview.srid,\n          featureProjection: 'EPSG:' + mapview.srid\n        })\n    )\n  }\n  \n  function finish(feature) {\n\n    document.removeEventListener('keyup', escape)\n\n    // Remove snap interaction.\n    mapview.interaction.snap?.remove?.()\n\n    // Reset the cursor style.\n    mapview.Map.getTargetElement().style.cursor = 'default'\n    \n    // Remove popup from mapview.\n    mapview.popup(null)\n    \n    // Remove interaction from mapview.Map.\n    mapview.Map.removeInteraction(mapview.interaction.interaction)\n  \n    // Remove draw Layer from mapview.Map.\n    mapview.Map.removeLayer(mapview.interaction.Layer)\n\n    mapview.interaction.callback?.(feature)\n  }\n}", "/**\n## Mapview.interactions.modify()\n\n@module /mapview/interactions/modify\n\n@param {Object} params\nThe params object argument.\n*/\n\nexport default function(params){\n\n  const mapview = this\n  \n  // Finish the current interaction.\n  mapview.interaction?.finish()\n\n  mapview.interaction = {\n\n    type: 'modify',\n\n    finish,\n  \n    format: new ol.format.GeoJSON(),\n\n    source: new ol.source.Vector(),\n\n    Layer: new ol.layer.Vector({\n      zIndex: Infinity\n    }),\n  \n    vertices: [],\n\n    modifyend: mapp.ui?.elements.contextMenu.modify.bind(this),\n  \n    getFeature,\n\n    Style: [\n      new ol.style.Style({\n        image: new ol.style.Circle({\n          stroke: new ol.style.Stroke({\n            color: '#3399CC',\n            width: 1.25\n          }),\n          radius: 5\n        }),\n        stroke: new ol.style.Stroke({\n          color: '#3399CC',\n          width: 1.25\n        })\n      }),\n      new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 5,\n          fill: new ol.style.Fill({\n            color: '#eee',\n          }),\n          stroke: new ol.style.Stroke({\n            color: '#3399CC',\n            width: 1.25\n          })\n        }),\n        geometry: mapp.utils.verticeGeoms\n      })\n    ],\n\n    deleteCondition: e => {\n\n      if (e.type === 'singleclick') {\n\n        const geom = mapview.interaction.Feature.getGeometry()\n\n        const geomType = geom.getType()\n\n        if (geomType === 'Point') return;\n\n        const coords = geom.getCoordinates()\n\n        // Return on point or line with 2 vertices.\n        if (geomType === 'LineString' && coords.length < 3) return;\n\n        // Return on polygon with less than 3 vertices.\n        if (geomType === 'Polygon' && coords[0].length <= 4) return;\n     \n        // Set popup to remove vertex.\n        mapview.popup({\n          coords: geom.getClosestPoint(e.coordinate),\n          content: mapp.utils.html.node`<ul>\n            <li\n              onclick=${() => {\n              mapview.interaction.interaction.removePoint()\n              mapview.interaction.vertices.push(mapview.interaction.Feature.getGeometry().getClosestPoint(e.coordinate))\n            }}>${mapp.dictionary.delete_vertex}`\n        })\n      }\n    },\n    \n    // Spread params argument.\n    ...params\n  }\n\n  mapview.Map.getTargetElement().style.cursor = 'crosshair'\n\n  mapview.interaction.source.addFeature(mapview.interaction.Feature)\n   \n  // Set mapview.interaction.Layer source.\n  mapview.interaction.Layer.setSource(mapview.interaction.source)\n\n  // Set mapview.interaction.Layer style\n  mapview.interaction.Layer.setStyle(mapview.interaction.Style)\n  \n  // Add mapview.interaction.Layer to mapview.\n  mapview.Map.addLayer(mapview.interaction.Layer)\n   \n  mapview.interaction.interaction = new ol.interaction.Modify(mapview.interaction)\n\n  // Will clear remove vertex popup.\n  mapview.interaction.interaction.on('modifystart', e => {\n    mapview.popup(null)\n  })\n\n  if (typeof mapview.interaction.modifyend === 'function') {\n\n    mapview.interaction.interaction.on('modifyend', mapview.interaction.modifyend)\n  }\n\n  // Add OL interaction to mapview.Map\n  mapview.Map.addInteraction(mapview.interaction.interaction)\n\n  // Assign snap interaction.\n  mapview.interactions.snap(mapview)\n \n  function getFeature() {\n     \n    return JSON.parse(\n      mapview.interaction.format.writeFeature(\n        mapview.interaction.Feature,\n        { \n          dataProjection: 'EPSG:' + mapview.interaction.srid || mapview.srid,\n          featureProjection: 'EPSG:' + mapview.srid\n        })\n    )\n  }\n  \n  function finish(feature) {\n\n    // Remove snap interaction.\n    mapview.interaction.snap?.remove?.()\n\n    // Reset the cursor style.\n    mapview.Map.getTargetElement().style.cursor = 'default'\n  \n    // Remove popup from mapview.\n    mapview.popup(null)\n    \n    // Remove interaction from mapview.Map.\n    mapview.Map.removeInteraction(mapview.interaction.interaction)\n\n    // Clear the modify source.\n    mapview.interaction.source.clear()\n  \n    // Remove draw Layer from mapview.Map.\n    mapview.Map.removeLayer(mapview.interaction.Layer)\n\n    mapview.interaction.callback?.(feature)\n  }\n}", "/**\n## Mapview.interactions.zoom()\n\n@module /mapview/interactions/zoom\n\n@param {Object} params\nThe params object argument.\n*/\n\nexport default function(params){\n\n  const mapview = this\n\n  // Finish the current interaction.\n  mapview.interaction?.finish()\n\n  mapview.interaction = {\n\n    finish: finish,\n\n    Layer: new ol.layer.Vector({\n      source: new ol.source.Vector()\n    }),\n\n     // Spread params argument.\n    ...params\n  }\n\n  mapview.interaction.Layer.getSource().clear()\n\n  mapview.Map.addLayer(mapview.interaction.Layer);\n\n  mapview.Map.getTargetElement().style.cursor = 'zoom-in';\n\n  mapview.interaction.interaction = new ol.interaction.Draw({\n    source: mapview.interaction.Layer.getSource(),\n    type: 'Circle',\n    geometryFunction: ol.interaction.Draw.createBox(),\n    style: {\n      'stroke-color': '#ddd',\n      'fill-color': '#fff9'\n    }\n  })\n\n  mapview.interaction.interaction.on('drawend', e => {\n\n    mapview.fitView(e.feature.getGeometry().getExtent())\n\n    finish()\n  })\n\n  mapview.Map.addInteraction(mapview.interaction.interaction)\n\n  function finish() {\n\n    mapview.Map.getTargetElement().style.cursor = 'auto';\n\n    mapview.Map.removeInteraction(mapview.interaction.interaction)\n\n    mapview.Map.removeLayer(mapview.interaction.Layer)\n\n    mapview.interaction.Layer.getSource().clear()\n\n    mapview.interaction.callback?.()\n  }\n}", "/**\n * ### mapview.interactions.snap()\n * This module sets up the snap interaction for the mapview.\n * @module /mapview/interactions/snap\n */\n\n/**\n * Sets up the snap interaction for the mapview.\n * @function snap\n * @param {Object} mapview - The mapview object.\n * @param {ol.Map} mapview.Map - The OpenLayers map object.\n * @param {Object} mapview.interaction - The interaction object.\n * @param {boolean|Object} mapview.interaction.snap - The snap interaction configuration.\n * @param {string} [mapview.interaction.snap.layer] - The key of the layer to snap to.\n * @param {ol.layer.Layer} mapview.interaction.layer - The interaction layer.\n * @param {Object} mapview.layers - The map layers object.\n */\nexport default function (mapview) {\n  // The current draw/modify interaction doesn't snap.\n  if (!mapview.interaction.snap) return;\n\n  if (mapview.interaction.snap === true) {\n    // Assign the interaction layer as snap layer if snap is true.\n    mapview.interaction.snap = {\n      layer: mapview.interaction.layer.key\n    }\n  }\n\n  if (typeof (mapview.interaction.snap) === 'string') {\n    // Assign the interaction layer as snap layer if snap is a string.\n    mapview.interaction.snap = {\n      layer: mapview.interaction.snap\n    }\n  }\n  // Assign mapview and interaction to be _this.\n  mapview.interaction.snap = {\n    /**\n     * Removes the snap interaction and related resources.\n     */\n    remove: () => {\n      if (mapview.interaction.layer.featureSource) {\n        // Detach tile load event,\n        mapview.interaction.layer.featureSource.un('tileloadend', tileloadend)\n\n        // Remove featureSource layer from mapview.Map,\n        mapview.Map.removeLayer(mapview.interaction.snap.vectorTileLayer)\n\n        // And clear featureSource.\n        mapview.interaction.layer.featureSource.clear()\n      }\n\n      mapview.Map.removeInteraction(mapview.interaction.snap.interaction)\n    },\n\n    ...mapview.interaction.snap\n  }\n\n  // Check if snap layer exists in mapview.layers.\n  if (!mapview.layers[mapview.interaction.snap.layer]) {\n    console.warn(`Unable to snap to layer:${mapview.interaction.snap.layer} as it is not found in mapview.layers.`)\n    return;\n  }\n\n  // Assign snap layer from key if defined.\n  mapview.interaction.snap.layer &&= mapview.layers[mapview.interaction.snap.layer] || mapview.interaction.layer\n\n  // Assign interaction as snap layer if undefined.\n  mapview.interaction.snap.layer ??= mapview.interaction.layer\n\n  mapview.interaction.snap.layer.show()\n\n  /**\n   * Callback function for the `tileloadend event of the feature source.\n   * Adds features from the loaded tile to the snap source.\n   * @param {ol.TileLoadEvent} e - The tile load event.\n   */\n  function tileloadend(e) {\n    const features = e.tile.getFeatures()\n\n    // Try adding features to prevent a crash adding the same feature twice.\n    try {\n      mapview.interaction.snap.source.addFeatures(features)\n    } catch { }\n  }\n\n  if (mapview.interaction.snap.layer.featureSource) {\n    // Create new Vector source for snap features.\n    mapview.interaction.snap.source = new ol.source.Vector()\n\n    // Assign loadend event to MVT layer featureSource.\n    mapview.interaction.snap.layer.featureSource.on('tileloadend', tileloadend)\n\n    mapview.interaction.snap.vectorTileLayer = new ol.layer.VectorTile({\n      source: mapview.interaction.snap.layer.featureSource,\n      opacity: 0\n    })\n\n    // Add invisible tile layer for the featureSource to trigger tile loads.\n    mapview.Map.addLayer(mapview.interaction.snap.vectorTileLayer)\n  } else {\n    // Assign vector source as snap source for vector layer.\n    mapview.interaction.snap.source = mapview.interaction.snap.layer.L.getSource()\n  }\n\n  // Create snap interaction with snap.source.\n  mapview.interaction.snap.interaction = new ol.interaction.Snap({\n    source: mapview.interaction.snap.source\n  })\n\n  // Add snap.interaction to mapview.Map\n  mapview.Map.addInteraction(mapview.interaction.snap.interaction)\n}", "/**\n### /mapview\n\n@module /mapview\n*/\n\n/**\n@global\n@typedef {Object} mapview\nA mapview object has an Openlayers Map element limited to the locale configuration.\n@property {object} Map Openlayers Map element.\n@property {object} locale The locale defintion for the mapview.\n*/\n\nimport attribution from './attribution.mjs'\n\nimport addLayer from './addLayer.mjs'\n\nimport fitView from './fitView.mjs'\n\nimport getBounds from './getBounds.mjs'\n\nimport geometry from './geometry.mjs'\n\nimport geoJSON from './geoJSON.mjs'\n\nimport infotip from './infotip.mjs'\n\nimport locate from './locate.mjs'\n\nimport popup from './popup.mjs'\n\nimport allFeatures from './allFeatures.mjs'\n\nimport _highlight from './interactions/highlight.mjs'\n\nimport _draw from './interactions/draw.mjs'\n\nimport _modify from './interactions/modify.mjs'\n\nimport _zoom from './interactions/zoom.mjs'\n\nimport snap from './interactions/snap.mjs'\n\n/**\n@function decorate\n\n@description\nThe mapview decorator method decorates the mapview object param as a typedef mapview object.\n\n@param {object} mapview JSON params for a new mapview.\n\n@returns {mapview} Decorated Mapview.\n*/\n\nexport default function decorate(mapview) {\n\n  // Assign host from mapp if not implicit.\n  mapview.host ??= mapp.host\n\n  Object.assign(mapview, {\n    srid: mapview.locale.srid || '3857',\n    addLayer,\n    fitView,\n    geometry,\n    geoJSON,\n    getBounds,\n    infotip,\n    locate,\n    metrics: {\n      distance: (geometry) => ol.sphere.getLength(\n        new ol.geom.LineString([geometry.getInteriorPoint().getCoordinates(), mapview.position])),\n      area: (geometry) => ol.sphere.getArea(geometry),\n      length: (geometry) => ol.sphere.getLength(geometry),\n    },\n    popup,\n    allFeatures,\n    layers: {},\n    locations: {},\n    interactions: {\n      highlight: _highlight.bind(mapview),\n      draw: _draw.bind(mapview),\n      modify: _modify.bind(mapview),\n      zoom: _zoom.bind(mapview),\n      snap\n    }\n  })\n\n  mapview.view ??= mapview.locale.view\n\n  // Get the initialZoom for the mapview.\n  const initialZoom = mapp.hooks?.current?.z\n    || mapview.view?.z\n    || mapview.locale.minZoom\n    || 0\n\n  // Get the initialCenter for the mapview.\n  const initialCenter = ol.proj.fromLonLat([\n    parseFloat(mapp.hooks?.current?.lng\n      || mapview.view?.lng\n      || 0),\n    parseFloat(mapp.hooks?.current?.lat\n      || mapview.view?.lat\n      || 0),\n  ])\n\n  // WARN!\n  mapview.locale.bounds && console.warn('locale.bounds have been renamed to locale.extent')\n\n  const north = parseFloat(mapview.locale.extent?.north || 90);\n  const south = parseFloat(mapview.locale.extent?.south || -90);\n  const east = parseFloat(mapview.locale.extent?.east || 180);\n  const west = parseFloat(mapview.locale.extent?.west || -180);\n\n  if ((north - south) >= 0 && (east - west) >= 0) {\n    mapview.extent = ol.proj.transformExtent([west, south, east, north], 'EPSG:4326', `EPSG:${mapview.srid}`);\n  } else {\n    console.warn('Invalid extent. Ensure north >= south and east >= west. Global extent is assumed.');\n    mapview.extent = ol.proj.transformExtent([-180, -90, 180, 90], 'EPSG:4326', `EPSG:${mapview.srid}`);\n  }\n\n  // Map\n  mapview.Map = new ol.Map({\n    target: mapview.target,\n    interactions: ol.interaction.defaults.defaults({\n      mouseWheelZoom: mapview.scrollWheelZoom && {\n        duration: 250, // default\n        timeout: 80 // default\n      } || false,\n      pinchRotate: mapview.pinchRotate && {\n        threshold: 3\n      } || false\n    }),\n    moveTolerance: 5,\n    controls: mapview.controls || [], //[new ol.control.Zoom()]\n    view: new ol.View({\n      projection: `EPSG:${mapview.srid}`,\n      zoom: initialZoom,\n      minZoom: mapview.locale.minZoom,\n      maxZoom: mapview.locale.maxZoom,\n      center: initialCenter,\n      extent: mapview.extent\n    })\n  })\n\n  // Observe whether the mapview.Map target element changes size.\n  // Method should debounce to account for manual resizing, ie. with a slider element.\n  let resizeObserverTimeout\n  new ResizeObserver(() => {\n\n    resizeObserverTimeout && clearTimeout(resizeObserverTimeout)\n\n    resizeObserverTimeout = setTimeout(() => {\n\n      mapview.Map.getTargetElement().dispatchEvent(new Event('resize'))\n\n      // This should happen automatically with later versions of OL.\n      // mapview.Map.updateSize()\n\n    }, 400)\n\n  }).observe(mapview.Map.getTargetElement())\n\n  // WARN!\n  mapview.locale.maskBounds\n    && console.warn('locale.maskBounds is set as mask:true in locale.extent')\n\n  // Extent mask\n  if (mapview.locale.extent?.mask) {\n\n    // Set world extent\n    const world = [\n      [180, 90],\n      [180, -90],\n      [-180, -90],\n      [-180, 90],\n      [180, 90],\n    ]\n\n    // Set locale extent\n    const extent = [\n      [mapview.locale.extent.east, mapview.locale.extent.north],\n      [mapview.locale.extent.east, mapview.locale.extent.south],\n      [mapview.locale.extent.west, mapview.locale.extent.south],\n      [mapview.locale.extent.west, mapview.locale.extent.north],\n      [mapview.locale.extent.east, mapview.locale.extent.north],\n    ]\n\n    // Create a maskFeature from the word and locale extent.\n    const maskFeature = new ol.Feature({\n      geometry: new ol.geom\n\n        // Use world and locale extent as polygon rings.\n        // The second ring will be subtracted.\n        .Polygon([world, extent])\n        .transform(`EPSG:4326`, `EPSG:${mapview.srid}`)\n    })\n\n    // Add masklayer with the maskFeature\n    // and infinite zIndex to mapview.Map\n    mapview.Map.addLayer(new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: [maskFeature]\n      }),\n      style: {\n        'fill-color': '#0004'\n      },\n      zIndex: Infinity\n    }))\n  }\n\n  // Check on old configuration of showScaleBar, scalebar and set to ScaleLine, and warn.\n  if (mapview.locale.showScaleBar) {\n    console.warn('locale.showScaleBar is deprecated. Use locale.ScaleLine.metric or locale.ScaleLine.imperial instead.')\n    // showScaleBar is set to true - so use metric default.\n    mapview.locale.ScaleLine = 'metric'\n  }\n\n  // scalebar \n  if (mapview.locale.scalebar) {\n    console.warn('locale.scalebar is deprecated. Use locale.ScaleLine.metric or locale.ScaleLine.imperial instead.')\n    mapview.locale.ScaleLine = mapview.locale.scalebar\n  }\n\n  // ScaleLine\n  mapview.locale.ScaleLine && mapview.Map.addControl(new ol.control.ScaleLine({\n    units: mapview.locale.ScaleLine === 'imperial' ? 'imperial' : 'metric',\n  }))\n\n  // Create mapview attribution.\n  attribution(mapview)\n\n  // Events\n\n  // pointermove\n  mapview.Map.on('pointermove', e => {\n\n    // The geographic coordinate.\n    mapview.position = e.coordinate\n\n    // The pixel coordinate.\n    mapview.pointerLocation = {\n      x: e.originalEvent.clientX,\n      y: e.originalEvent.clientY\n    }\n  })\n\n  // mouseout\n  mapview.Map.getTargetElement().addEventListener('mouseout', () => {\n\n    mapview.infotip(null)\n\n    // Set position on and pointerLocation to null.\n    mapview.position = null\n    mapview.pointerLocation = {\n      x: null,\n      y: null\n    }\n  })\n\n  // changeEnd\n  mapview.Map.getTargetElement().addEventListener('changeEnd', changeEnd)\n\n  function changeEnd() {\n\n    // Update URL params if enabled on mapview\n    if (!mapview.hooks) return;\n\n    // Get center from Map.View\n    const center = ol.proj.transform(\n      mapview.Map.getView().getCenter(),\n      `EPSG:${mapview.srid}`,\n      `EPSG:4326`)\n\n    // Set lat, lng, z URL params.\n    mapp.hooks.set({\n      lat: Math.round((center[1] + Number.EPSILON) * 100000) / 100000,\n      lng: Math.round((center[0] + Number.EPSILON) * 100000) / 100000,\n      z: Math.round((mapview.Map.getView().getZoom() + Number.EPSILON) * 100) / 100\n    })\n  }\n\n  // Timer to debounce changeEnd event.\n  let changeEndTimer\n\n  // moveend to call changeEnd event.\n  mapview.Map.on('moveend', () => {\n    clearTimeout(changeEndTimer)\n\n    changeEndTimer = setTimeout(() => {\n      mapview.Map.getTargetElement().dispatchEvent(new CustomEvent('changeEnd'))\n    }, 500)\n  })\n\n  changeEndTimer = setTimeout(() => {\n    mapview.Map.getTargetElement().dispatchEvent(new CustomEvent('changeEnd'))\n  }, 500)\n\n  if (mapview.loadPlugins) {\n\n    return (async (mapview) => {\n\n      await mapp.utils.loadPlugins(mapview.locale.plugins);\n\n      mapview.locale.syncPlugins ??= []\n\n      const syncPlugins = new Set(mapview.locale.syncPlugins)\n\n      for (const key of mapview.locale.syncPlugins) {\n\n        if (typeof mapp.plugins[key] !== 'function') continue;\n\n        await mapp.plugins[key](mapview.locale[key], mapview)\n      }\n\n      const asyncPlugins = Object.keys(mapview.locale)\n        .filter(key => !syncPlugins.has(key))\n        .filter((key) => typeof mapp.plugins[key] === 'function')\n        .map((key) => mapp.plugins[key](mapview.locale[key], mapview));\n\n      await Promise.all(asyncPlugins)\n\n      return mapview\n\n    })(mapview)\n  }\n\n  return mapview\n}", "/**\n### Admin Plugin\n@module /plugins/admin\n*/\n\n/**\nAdds an admin button to the map view if the user has admin privileges.\n@function admin\n@param {Object} plugin - The plugin configuration object.\n@param {Object} mapview - The mapview object.\n@returns {void}\n*/\nexport function admin(plugin, mapview) {\n\n  const btnColumn = document.getElementById('mapButton');\n\n  // the btnColumn element only exist in the default mapp view.\n  if (!btnColumn) return;\n\n  // Append user admin link.\n  if (!mapp.user?.admin) return;\n  \n  btnColumn.appendChild(mapp.utils.html.node`\n    <a\n      title=${mapp.dictionary.toolbar_admin}\n      href=\"${mapp.host + '/api/user/admin'}\">\n      <div class=\"mask-icon supervisor-account\">`);\n}", "/**\n@module /plugins/feature_info\n*/\n\n/**\n@function feature_info\n@description\nThe feature_info plugin method creates a button for the mapButton list.\n\nThe button will toggle a custom highlight interaction with the getFeature method displaying the feature info in a popup.\n\n@param {mapview} mapview The mapview for the highlight feature info interaction.\n@param {Object} plugin The plugin config object from the locale.\n\n@property {boolean} [plugin.log] Log the feature in the dev console.\n@property {boolean} [plugin.features] Include the cluster features[] label in the output.\n*/\n\nexport function feature_info(plugin, mapview) {\n\n  const btnColumn = document.getElementById('mapButton');\n\n  // The btnColumn element only exists in the default mapp view.\n  if (!btnColumn) return;\n\n  const btn = mapp.utils.html.node`\n      <button\n        title=${mapp.dictionary.toolbar_current_location}\n        onclick=${toggleFeatureInfoHighlight}><div class=\"mask-icon feature-info\">`;\n\n  btnColumn.append(btn);\n\n  function toggleFeatureInfoHighlight() {\n\n    if (btn.firstChild.classList.toggle('active')) {\n\n      mapview.interactions.highlight({\n        getFeature: feature => {\n\n          const properties = feature.F.getProperties()\n\n          // The OL Styles array is meaningless for the feature_info popup.\n          delete properties.Styles\n\n          if (!plugin.geometry) {\n\n            delete properties.geometry\n          }\n\n          // Check for cluster feature.\n          if (Array.isArray(properties.features)) {\n\n            // Reduce features to length or properties dependent on the flag.\n            properties.features = plugin.features\n              ? properties.features.map(F => F.getProperties().properties[feature.layer.cluster.label])\n              : properties.features.length\n          }\n\n          if (plugin.log) {\n\n            console.log(feature.F)\n          }\n\n          const feature_info = {\n            id: feature.id,\n            layer: feature.layer.key,\n            properties,\n          }\n\n          const content = mapp.utils.html.node`<pre\n            style=\"padding: 1em;\"\n            >${JSON.stringify(feature_info, undefined, 2)}`\n\n          mapview.popup({\n            content\n          })\n        },\n        callback: () => {\n          btn.firstChild.classList.remove('active')\n        }\n      });\n\n    } else {\n\n      mapview.interactions.highlight()\n    };\n\n  }\n}", "/**\n### Fullscreen Plugin\n@module /plugins/fullscreen\n */\n\n/**\nAdds a fullscreen toggle button to the map view.\n@function fullscreen\n@param {Object} plugin - The plugin configuration object.\n@param {Object} mapview - The mapview object.\n@param {ol.Map} mapview.Map - The OpenLayers map object.\n@param {Object} mapview.layers - The layers object containing map layers.\n@returns {void}\n*/\nexport function fullscreen(plugin, mapview) {\n  const btnColumn = document.getElementById('mapButton');\n\n  // The btnColumn element only exists in the default mapp view.\n  if (!btnColumn) return;\n\n  function toggleFullscreen(e) {\n    e.target.classList.toggle('active');\n    document.body.classList.toggle('fullscreen');\n    mapview.Map.updateSize();\n    Object.values(mapview.layers)\n      .forEach((layer) => layer.mbMap?.resize());\n  }\n\n  const btn = mapp.utils.html.node`\n    <button\n      class=\"mobile-display-none\"\n      title=${mapp.dictionary.toolbar_fullscreen}\n      onclick=${toggleFullscreen}>\n      <div class=\"mask-icon map\">`;\n\n  btnColumn.append(btn);\n}", "/**\n@module /plugins/keyvalue_dictionary\n*/\n\n/**\n@function keyvalue_dictionary\n\n@description\nReplaces key-value pairs in the mapview locale object with dictionary entries.\n\n@param {Array} keyvalue_dictionary An array of dictionary entries.\n@param {mapview} mapview The mapview object.\n@property {Object} mapview.locale The locale object of the mapview.\n*/\nexport function keyvalue_dictionary(keyvalue_dictionary, mapview) {\n\n  if (!mapview.locale) return;\n\n  parseObject(mapview.locale, keyvalue_dictionary);\n}\n\n/**\n@function parseObject\n\n@description\nParses an object and replaces its string values with dictionary entries.\n\n@param {Object} obj The object to parse.\n@param {Array} dictionary An array of dictionary entries.\n*/\nfunction parseObject(obj, dictionary) {\n  for (const [key, value] of Object.entries(obj)) {\n    if (isArrayObject(value, dictionary)) continue;\n    if (typeof value === 'string') replaceKeyValue(obj, key, value, dictionary);\n  }\n}\n\n/**\n@function isArrayObject\n\n@description\nChecks if an item is an array or an object and recursively applies the parsing logic.\n\n@param {*} item The item to check.\n@param {Array} dictionary An array of dictionary entries.\n@returns {boolean} Returns true if the item is an array or an object, false otherwise.\n */\nfunction isArrayObject(item, dictionary) {\n  if (Array.isArray(item)) {\n    item.forEach(val => isArrayObject(val, dictionary));\n    return true;\n  }\n  if (item instanceof Object) {\n    parseObject(item, dictionary);\n    return true;\n  }\n}\n\n/**\n@function replaceKeyValue\n\n@description\nReplaces a key-value pair in an object with a dictionary entry.\n\n@param {Object} obj The object containing the key-value pair.\n@param {string} key The key of the value to replace.\n@param {string} value The value to replace.\n@param {Array} dictionary An array of dictionary entries.\n*/\nfunction replaceKeyValue(obj, key, value, dictionary) {\n\n  // Find dictionary entry matching key and value.\n  const entry = dictionary\n    .filter(entry => entry.key === key)\n    .findLast(entry => entry.value === value);\n\n  if (!entry) return;\n\n  // Replace object key value with entry language lookup or default.\n  obj[key] = entry[mapp?.user?.language || mapp.language] || entry.default || value;\n}", "/**\n### Locator Plugin\n@module /plugins/locator\n */\n\n/**\nAdds a locator button to the map view for triggering geolocation.\n@function locator\n@param {Object} plugin - The plugin configuration object.\n@param {Object} mapview - The mapview object.\n@param {Function} mapview.locate - The locate function of the mapview.\n@returns {void}\n*/\nexport function locator(plugin, mapview) {\n  const btnColumn = document.getElementById('mapButton');\n\n  // The btnColumn element only exists in the default mapp view.\n  if (!btnColumn) return;\n\n  const btn = mapp.utils.html.node`\n    <button\n      title=${mapp.dictionary.toolbar_current_location}\n      onclick=${(e) => {\n        e.target.classList.toggle('active');\n        mapview.locate();\n      }}><div class=\"mask-icon gps-not-fixed\">`;\n\n  btnColumn.append(btn);\n}", "/**\n### Login Plugin\n@module /plugins/login\n */\n\n/**\nAdds a login/logout button to the map view.\n@function login\n@param {Object} plugin - The plugin configuration object.\n@param {Object} mapview - The mapview object.\n@returns {void}\n*/\nexport function login(plugin, mapview) {\n\n  const btnColumn = document.getElementById('mapButton');\n\n  // the btnColumn element only exist in the default mapp view.\n  if (!btnColumn) return;\n\n  // Append login/logout link.\n  if (!document.head.dataset.login) return;\n\n  const iconClass = `mask-icon ${mapp.user ? 'logout' : 'lock-open'}`\n\n  btnColumn.appendChild(mapp.utils.html.node`\n    <a\n      title=${mapp.user ? mapp.dictionary.toolbar_logout : mapp.dictionary.toolbar_login}\n      href=${mapp.user ? \"?logout=true\" : \"?login=true\"}>\n      <div class=${iconClass}>`);\n}", "/**\n### Svg Templates Plugin\n@module /plugins/svg_templates\n*/\n\n/**\nFetches and stores SVG templates for use in the application.\n@async\n@function svg_templates\n@param {Object} plugin - The plugin configuration object containing SVG template URLs.\n@param {Object} mapview - The mapview object.\n@returns {Promise<void>}\n*/\nexport async function svg_templates(plugin, mapview) {\n\n  if (typeof mapp.utils.svgSymbols.templates !== 'object') {\n    mapp.utils.svgSymbols.templates = {}\n  }\n\n  // Iterate through svg_templates entries.\n  const promises = Object.entries(plugin).map(entry => {\n\n    // Fetch entry value.\n    return fetch(entry[1])\n      .then(response => response.text())\n      .then(svgString => {\n\n        // Assign parsed svgString as entry key to templates object.\n        mapp.utils.svgSymbols.templates[entry[0]] = svgString\n      })\n  })\n\n  await Promise.all(promises)\n}", "export function userIDB(plugin, mapview) {\n\n  if (!mapp.user?.email) {\n\n    console.warn(`The userIDB plugin requires a mapp.user`)\n    return;\n  }\n\n  // Find the btnColumn element.\n  const btnColumn = document.getElementById('mapButton');\n\n  if (!btnColumn) return;\n\n  plugin.title ??= 'Update userIDB locale'\n\n  // Append the plugin btn to the btnColumn.\n  btnColumn.append(mapp.utils.html.node`\n    <button\n      title=${plugin.title}\n      onclick=${()=>{\n\n        const locale = mapp.utils.merge({}, mapview.locale)\n\n        locale.layers.forEach(layer => {\n\n          if (typeof layer !== 'object') return;\n\n          updateLayer(layer, mapview.layers[layer.key])\n        })\n        \n        mapp.utils.userIndexedDB.put('locales', locale)\n\n        alert(`User ${mapp.user.email} IndexedDB updated.`)\n\n      }}>\n      <div class=\"mask-icon\" style=\"mask-image:url(https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsoutlined/rule_settings/default/24px.svg)\">`);\n}\n\nfunction updateLayer(layer, _layer) {\n\n  if (!_layer) return;\n\n  Object.keys(_layer).forEach(key => {\n\n    if (_layer[key] === undefined) return;\n\n    if (_layer[key] === null) {\n      layer[key] = null;\n    }\n\n    if (typeof _layer[key] === 'function') return;\n\n    if (typeof _layer[key] === 'object') return;\n\n    layer[key] = _layer[key]\n  })\n\n  return layer;\n}", "/**\n### Zoom Btn Plugin\n@module /plugins/zoomBtn\n*/\n\n/**\nAdds zoom in and zoom out buttons to the map view.\n@function zoomBtn\n@param {Object} plugin - The plugin configuration object.\n@param {Object} mapview - The mapview object.\n@param {ol.Map} mapview.Map - The OpenLayers map object.\n@param {Object} mapview.locale - The locale object of the mapview.\n@param {number} mapview.locale.maxZoom - The maximum zoom level allowed.\n@param {number} mapview.locale.minZoom - The minimum zoom level allowed.\n@returns {void}\n*/\nexport function zoomBtn(plugin, mapview) {\n\n  const btnColumn = document.getElementById('mapButton');\n\n  // the btnColumn element only exist in the default mapp view.\n  if (!btnColumn) return;\n\n  // Add zoomIn button.\n  const btnZoomIn = btnColumn.appendChild(mapp.utils.html.node`\n    <button\n      id=\"btnZoomIn\"\n      .disabled=${mapview.Map.getView().getZoom() >= mapview.locale.maxZoom}\n      title=${mapp.dictionary.toolbar_zoom_in}\n      onclick=${(e) => {\n        const z = parseInt(mapview.Map.getView().getZoom() + 1);\n        mapview.Map.getView().setZoom(z);\n        e.target.disabled = z >= mapview.locale.maxZoom;\n      }}><div class=\"mask-icon add\">`)\n\n  // Add zoomOut button.\n  const btnZoomOut = btnColumn.appendChild(mapp.utils.html.node`\n    <button\n      id=\"btnZoomOut\"\n      .disabled=${mapview.Map.getView().getZoom() <= mapview.locale.minZoom}\n      title=${mapp.dictionary.toolbar_zoom_out}\n      onclick=${(e) => {\n        const z = parseInt(mapview.Map.getView().getZoom() - 1);\n        mapview.Map.getView().setZoom(z);\n        e.target.disabled = z <= mapview.locale.minZoom;\n      }}><div class=\"mask-icon remove\">`)\n\n  // changeEnd event listener for zoom button\n  mapview.Map.getTargetElement()\n    .addEventListener('changeEnd', () => {\n      const z = mapview.Map.getView().getZoom();\n      btnZoomIn.disabled = z >= mapview.locale.maxZoom;\n      btnZoomOut.disabled = z <= mapview.locale.minZoom;\n    });\n}", "/**\n### Zoom To Area Plugin\n@module /plugins/zoomtoArea\n*/\n\n/**\nAdds a \"Zoom to Area\" button to the map view for zooming to a specific area.\n@function zoomToArea\n@param {Object} plugin - The plugin configuration object.\n@param {Object} mapview - The mapview object.\n@param {Object} mapview.interactions - The interactions object of the mapview.\n@param {Function} mapview.interactions.highlight - The highlight interaction function.\n@param {Function} mapview.interactions.zoom - The zoom interaction function.\n@returns {void}\n*/\nexport function zoomToArea(plugin, mapview) {\n\n  const btnColumn = document.getElementById('mapButton');\n\n  // the btnColumn element only exist in the default mapp view.\n  if (!btnColumn) return;\n\n  function toggleZoomInteraction(e) {\n\n    // If active cancel zoom and enable highlight interaction.\n    if (e.target.classList.contains('active')) {\n\n      // Will remove the 'active' class in callback of zoom interaction.\n      mapview.interactions.highlight()\n      return;\n    }\n\n    // Add active class\n    e.target.classList.add('active')\n\n    // Make zoom interaction current.\n    mapview.interactions.zoom({\n\n      // The interaction callback is executed on cancel or finish.\n      callback: () => {\n        e.target.classList.remove('active');\n        delete mapview.interaction\n\n        // Set highlight interaction if no other interaction is current after 400ms.\n        setTimeout(() => {\n          !mapview.interaction && mapview.interactions.highlight()\n        }, 400)\n      }\n    })\n  }\n\n  const btn = mapp.utils.html.node`\n    <button\n      class=\"mobile-display-none\"\n      title=${mapp.dictionary.toolbar_zoom_to_area}\n      onclick=${toggleZoomInteraction}>\n      <div class=\"mask-icon pageview\">`\n\n  btnColumn.append(btn)\n}", "/**\n## /plugins/link_button\nThe module exports the link_button plugin method to mapp.plugins{}\n\n@module /plugins/link_button\n*/\n\n/**\n@function link_button\n\n@description\nThe link_button locale property is provided as the link_button function argument. This can be either a single object or an array of objects.\n```json\n\"link_button\": [\n  {\n    \"href\": \"/url/url\",\n    \"title\": \"TITLE HERE\",\n    \"css_style\": \"mask-image: url(https://geolytix.github.io/MapIcons/services/component_exchange.svg); -webkit-mask-image: url(https://geolytix.github.io/MapIcons/services/component_exchange.svg);\"\n  },\n  {\n    \"href\": \"/foo\",\n    \"title\": \"Foo\"\n  }\n]\n```\nThe link_button method will call the addButton method for each link_button object.\n\n@param {Object} link_button The link_button config, can be an array of objects.\n*/\nlet mapButton\nexport function link_button(link_button) {\n\n  mapButton = document.getElementById('mapButton');\n\n  if (!mapButton) return;\n\n  if (!link_button) return;\n\n  if (Array.isArray(link_button)) {\n\n    link_button.forEach(addButton)\n  } else {\n\n    addButton(link_button)\n  }\n};\n\n/**\n@function addButton\n@description\nThe addButton method creates a link element and appends the element to the mapButton.\n\n@param {Object} link The link object.\n@property {string} link.href The link URL.\n@property {string} link.title The link title, defaults to \"Link\".\n@property {string} link.target The link target, defaults to \"_blank\".\n@property {string} link.css_class The class for the div, defaults to \"mask-icon\".\n@property {string} link.css_style The style for the div.\n*/\nfunction addButton(link) {\n\n  if (!link?.href) {\n    console.warn(`You must provide a href for the link_button plugin.`);\n    return;\n  }\n\n  link.target ??= '_blank'\n\n  link.css_class ??= 'mask-icon'\n\n  link.title ??= mapp.dictionary.link\n\n  const node = mapp.utils.html.node`\n    <a\n      title=${link.title}\n      href=${link.href}\n      target=${link.target}><div\n      class=${link.css_class}\n      style=${link.css_style}>`;\n\n  mapButton.append(node);\n}", "/**\n## mapp.plugins{}\nThis module serves as a collection of plugin modules for the application.\n@module /plugins\n*/\n\nimport { admin } from './admin.mjs'\nimport { feature_info } from './feature_info.mjs'\nimport { fullscreen } from './fullscreen.mjs'\nimport { keyvalue_dictionary } from './keyvalue_dictionary.mjs'\nimport { locator } from './locator.mjs'\nimport { login } from './login.mjs'\nimport { svg_templates } from './svg_templates.mjs'\nimport { userIDB } from './userIDB.mjs'\nimport { zoomBtn } from './zoomBtn.mjs'\nimport { zoomToArea } from './zoomToArea.mjs'\nimport { link_button } from './link_button.mjs'\n/**\n@typedef {Object} plugins\n@property {function} admin The admin plugin module.\n@property {function} feature_info Show feature properties in popup.\n@property {function} fullscreen The fullscreen plugin module.\n@property {function} keyvalue_dictionary The keyvalue_dictionary plugin module.\n@property {function} locator The locator plugin module.\n@property {function} login The login plugin module.\n@property {function} svg_templates The svg_templates plugin module.\n@property {function} zoomBtn The zoomBtn plugin module.\n@property {function} zoomToArea The zoomToArea plugin module.\n@property {function} link_button The link_button plugin module.\n*/\n\nconst plugins = {\n  admin,\n  feature_info,\n  fullscreen,\n  keyvalue_dictionary,\n  locator,\n  login,\n  svg_templates,\n  userIDB,\n  zoomBtn,\n  zoomToArea,\n  link_button\n}\n\nexport default plugins", "/**\n## MAPP\n\nThe primary module for the MAPP API will import other MAPP modules and assign itself as the `window.mapp{}` object.\n\nThe `mapp.mjs` module is used as entry point for the esbuild process to bundle the MAPP API.\n\n@requires /mapview\n@requires /layer\n@requires /layer\n@requires /utils\n\n@module mapp\n*/\n\nimport utils from './utils/_utils.mjs'\n\nimport hooks from './hooks.mjs'\n\nimport dictionaries from './dictionaries/_dictionaries.mjs'\n\nimport layer from './layer/_layer.mjs'\n\nimport location from './location/_location.mjs'\n\nimport Mapview from './mapview/_mapview.mjs'\n\nimport plugins from './plugins/_plugins.mjs'\n\nhooks.parse();\n\nconst _ol = {\n  current: 10.0,\n  load: async () => await new Promise(resolve => {\n\n    const script = document.createElement('script')\n\n    script.type = 'application/javascript'\n\n    script.src = 'https://cdn.jsdelivr.net/npm/ol@v10.0.0/dist/ol.js'\n\n    script.onload = resolve\n\n    document.head.append(script)\n\n    console.warn('Openlayers library loaded from script tag.')\n  })\n}\n\nif (window.ol === undefined) {\n\n  console.warn(`Openlayers has not been loaded.`)\n\n} else {\n\n  let olVersion = parseFloat(ol?.util.VERSION)\n\n  console.log(`OpenLayers version ${olVersion}`)\n\n  if (olVersion < _ol.current) {\n\n    console.warn(`Update the current OpenLayers version:${ol?.util.VERSION} to ${_ol.current}.`)\n  }\n}\n\nself.mapp = {\n  ol: _ol,\n\n  version: '4.10.1\u03B1',\n\n  hash: '764bcdf453b6807e7192dde6f5bc872c3d0c2572',\n\n  host: document.head?.dataset?.dir || '',\n\n  language: hooks.current.language || 'en',\n\n  dictionaries,\n\n  dictionary: new Proxy({}, {\n    get: function (target, key, receiver) {\n\n      if (mapp.dictionaries[mapp.language][key]) {\n        return mapp.dictionaries[mapp.language][key];\n      }\n\n      return mapp.dictionaries.en[key];\n    }\n  }),\n\n  hooks,\n\n  layer,\n\n  location,\n\n  Mapview,\n\n  utils,\n\n  plugins\n}"],
  "mappings": "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MACN,KAAO,KACf,EACI,EAAG,CACC,KAAO,IACP,IAAM,IACN,KAAO,IACP,IAAM,KACN,GAAK,KACL,GAAK,KACL,GAAK,KACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,EAAG,CACC,KAAO,IACP,IAAM,IACN,KAAO,KACP,IAAM,KACN,GAAK,IACL,GAAK,KACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,EAAG,CACC,KAAO,IACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,KACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,EAAG,CACC,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,KACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,EAAG,CACC,KAAO,KACP,IAAM,KACN,KAAO,IACP,IAAM,KACN,GAAK,KACL,GAAK,KACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,KACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,IACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,IACP,IAAM,KACN,GAAK,IACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,IACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,IACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,MACL,GAAK,MACL,IAAM,GACN,KAAO,MACP,IAAM,MACN,KAAO,IACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,KACL,GAAK,MACL,GAAK,MACL,IAAM,KACN,KAAO,MACP,IAAM,GACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,IACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,KACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,KACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,KACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,EACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,IACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,IACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,IACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,KACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,KACP,IAAM,MACN,KAAO,KACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,KACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,KACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,KACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,MACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,MACL,IAAM,KACN,KAAO,MACP,IAAM,MACN,KAAO,KACf,EACI,GAAI,CACA,KAAO,MACP,IAAM,MACN,KAAO,MACP,IAAM,MACN,GAAK,MACL,GAAK,MACL,GAAK,KACL,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",
  "names": ["MapSet", "key", "value", "WeakMapSet", "empty", "elements", "attributes", "holes", "esm_default", "template", "prefix", "svg", "i", "_", "name", "attrs", "selfClosing", "ml", "hole", "ELEMENT_NODE", "nodeType", "remove", "firstChild", "lastChild", "range", "diffable", "node", "operation", "persistent", "fragment", "childNodes", "nodes", "isArray", "indexOf", "slice", "useForeign", "Foreign", "handler", "value", "args", "foreign", "aria", "node", "values", "key", "name", "getValue", "attribute", "oldValue", "orphan", "attributeNode", "newValue", "boolean", "data", "dataset", "event", "lower", "type", "info", "isArray", "ref", "setter", "text", "esm_default", "parentNode", "a", "b", "get", "before", "bLength", "aEnd", "bEnd", "aStart", "bStart", "map", "node", "i", "index", "sequence", "isArray", "prototype", "indexOf", "createDocumentFragment", "createElement", "createElementNS", "createTextNode", "createTreeWalker", "importNode", "_", "method", "createHTML", "html", "template", "xml", "createSVG", "svg", "content", "createContent", "text", "reducePath", "childNodes", "i", "diff", "comment", "oldNodes", "newNodes", "esm_default", "diffable", "handleAnything", "oldValue", "text", "nodes", "anyContent", "newValue", "createTextNode", "isArray", "value", "handleAttribute", "node", "name", "boolean", "setter", "event", "ref", "aria", "attribute", "handlers", "options", "type", "path", "createPath", "node", "path", "parentNode", "indexOf", "prefix", "cache", "WeakMapSet", "textOnly", "createCache", "createEntry", "type", "template", "content", "updates", "mapUpdates", "mapTemplate", "svg", "text", "esm_default", "createContent", "tw", "createTreeWalker", "nodes", "length", "i", "search", "fragment", "importNode", "handlers", "unroll", "info", "values", "unrollValues", "entry", "wire", "persistent", "stack", "hole", "Hole", "isArray", "tag", "type", "keyed", "WeakMapSet", "fixed", "cache", "template", "values", "unroll", "Hole", "ref", "id", "memo", "MapSet", "createCache", "render", "where", "what", "hole", "info", "wire", "html", "svg", "simple_statistics_exports", "__export", "BayesianClassifier", "PerceptronModel", "addToMean", "approxEqual", "mean", "meanSimple", "bernoulliDistribution", "binomialDistribution", "bisect", "chiSquaredDistributionTable", "chiSquaredGoodnessOfFit", "chunk", "ckmeans", "coefficientOfVariation", "combinations", "combinationsReplacement", "combineMeans", "combineVariances", "cumulativeStdLogisticProbability", "cumulativeStdNormalProbability", "epsilon", "equalIntervalBreaks", "errorFunction", "extent", "extentSorted", "factorial", "gamma", "gammaln", "geometricMean", "harmonicMean", "interquartileRange", "inverseErrorFunction", "jenks", "kMeansCluster", "kernelDensityEstimation", "linearRegression", "linearRegressionLine", "logAverage", "logit", "medianAbsoluteDeviation", "max", "maxSorted", "median", "medianSorted", "min", "minSorted", "mode", "modeFast", "modeSorted", "numericSort", "permutationTest", "permutationsHeap", "poissonDistribution", "probit", "product", "quantile", "quantileRank", "quantileRankSorted", "quantileSorted", "quickselect", "rSquared", "relativeError", "rootMeanSquare", "sample", "sampleCorrelation", "sampleCovariance", "sampleKurtosis", "sampleRankCorrelation", "sampleSkewness", "sampleStandardDeviation", "sampleVariance", "sampleWithReplacement", "shuffle", "shuffleInPlace", "sign", "silhouette", "silhouetteMetric", "standardDeviation", "standardNormalTable", "subtractFromMean", "sum", "sumNthPowerDeviations", "sumSimple", "tTest", "tTestTwoSample", "uniqueCountSorted", "variance", "wilcoxonRankSum", "zScore", "data", "let", "m", "b", "dataLength", "sumX", "sumY", "sumXX", "sumXY", "point", "x", "y", "i", "mb", "correction", "transition", "n", "const", "meanValue", "tempValue", "v", "func", "average", "sumOfSquares", "j", "err", "k", "sorted", "last", "value", "maxSeen", "seenThis", "a", "index", "modeCount", "newCount", "p", "idx", "arr", "left", "right", "z", "s", "sd", "newLeft", "newRight", "t", "swap", "tmp", "copy", "multiQuantileSelect", "results", "quantileIndex", "quantileSelect", "indices", "compare", "stack", "r", "l", "len", "lowerBound", "u", "upperBound", "mid", "lo", "hi", "sortedCopy", "q1", "q2", "medianValue", "medianAbsoluteDeviations", "chunkSize", "output", "start", "randomSource", "length", "temporary", "shuffled", "makeMatrix", "columns", "rows", "matrix", "column", "uniqueValueCount", "lastSeenValue", "ssq", "sums", "sumsOfSquares", "sji", "muji", "fillMatrixColumn", "iMin", "iMax", "cluster", "backtrackMatrix", "jlow", "jhigh", "sjlowi", "ssqjlow", "ssqj", "fillMatrices", "nValues", "shift", "shiftedValue", "nClusters", "uniqueCount", "clusters", "clusterRight", "clusterLeft", "jenksBreaks", "lowerClassLimits", "nClasses", "kclass", "countNum", "jenksMatrices", "varianceCombinations", "tmp1", "tmp2", "sumSquares", "w", "i4", "lowerClassLimit", "val", "matrices", "theMin", "theMax", "breaks", "breakSize", "xmean", "ymean", "besselsCorrection", "sumSquaredDeviationsValue", "sampleVarianceX", "cov", "xstd", "ystd", "xIndexes", "pair", "yIndexes", "xRanks", "yRanks", "sumSquaredDeviations", "sumCubedDeviations", "theSampleStandardDeviation", "cubedS", "secondCentralMoment", "fourthCentralMoment", "elements", "indexes", "permutations", "swapFrom", "temp", "subI", "combinationList", "subsetCombinations", "next", "newValue", "mean1", "n1", "mean2", "n2", "variance1", "variance2", "newMean", "reciprocalSum", "expectedValue", "sampleMean", "rootN", "sampleX", "sampleY", "difference", "meanX", "meanY", "sampleVarianceY", "weightedVariance", "pooledSamples", "rank", "tiedRanks", "replaceRanksInPlace", "rankSum", "item", "category", "odds", "oddsSums", "combination", "features", "score", "label", "prediction", "gradient", "accumulator", "seriesCoefficient", "seriesDenom", "seriesExpansion", "COEFFICIENTS", "g", "LOGSQRT2PI", "trials", "probability", "cumulativeProbability", "cells", "binomialCoefficient", "lambda", "factorialX", "distributionType", "significance", "inputMean", "chiSquared", "c", "hypothesizedDistribution", "observedFrequencies", "expectedFrequencies", "degreesOfFreedom", "SQRT_2PI", "kernels", "bandwidthMethods", "stddev", "iqr", "X", "kernel", "bandwidthMethod", "kernelFn", "bandwidth", "cumulativeDistribution", "absZ", "tau", "inv", "alternative", "testStatistic", "testStatDsn", "allData", "midIndex", "permLeft", "permRight", "permTestStatistic", "numExtremeTStats", "end", "maxIterations", "errorTolerance", "euclideanDistance", "diff", "points", "numCluster", "oldCentroids", "newCentroids", "labels", "change", "labelPoints", "calculateCentroids", "calculateChange", "centroids", "minDist", "dist", "dimension", "counts", "numPoints", "current", "centroid", "total", "groupings", "createGroups", "distances", "calculateAllDistances", "result", "meanDistanceFromPointToGroup", "meanDistanceToNearestGroup", "numGroups", "which", "d", "group", "values", "actual", "expected", "tolerance", "csvDownload", "data", "params", "rows", "record", "fieldsFunction", "field", "blob", "link", "fields", "val", "promise", "convert", "moduleImport", "resolve", "mod", "convert_default", "value", "params", "copyToClipboard", "str", "textArea", "dataURLtoBlob", "dataURL", "parts", "contentType", "raw", "uInt8Array", "hexa_default", "hex", "transparency", "loadPlugins", "plugins", "endsWith", "resolveAll", "promises", "plugin", "_this", "resolve", "reject", "mod", "err", "getCurrentPosition_default", "callback", "options", "err", "mergeDeep", "target", "sources", "source", "isObject", "proto", "key", "item", "paramString_default", "params", "entry", "val", "polygonIntersectFeatures", "params", "getArrayDepth", "arr", "interaction", "e", "polyGeom", "features", "feature", "coordinates", "coord", "promiseAll_default", "promises", "resolveAll", "rejectAll", "error", "queryParams_default", "_this", "getTable", "bounds", "center", "table", "olStyle", "style", "feature", "Styles", "iconStyle", "icon", "scale", "fill", "stroke", "text", "svgSymbols_exports", "__export", "circle", "diamond", "dot", "markerColor", "markerLetter", "semiCircle", "square", "target", "template", "triangle", "xmlSerializer", "memoizedIcons", "style", "lookup", "a", "b", "icon", "svg", "layer", "x", "val", "scale", "y", "points", "s", "svgString", "entry", "userIndexedDB_exports", "__export", "add", "deleteDB", "get", "openDB", "put", "IDB", "_store", "store", "OpenDBPromise", "resolve", "reject", "IDBRequest", "event", "obj", "addPromise", "key", "getPromise", "updatePromise", "gazetteer_exports", "__export", "datasets", "getLocation", "term", "gazetteer", "search", "dataset", "layer", "e", "row", "loc", "location", "coord", "infoj", "verticeGeoms_default", "feature", "geometry", "coords", "depth", "getDepth", "arr", "requestMap", "xhr_default", "params", "resolve", "xhr", "requestHeader", "entry", "e", "formatNumericValue", "params", "numericValue", "unformatStringValue", "stringValue", "chars", "areSetsEqual", "a", "b", "value", "compose", "fns", "arg", "acc", "fn", "utils_default", "simple_statistics_exports", "render", "html", "svg", "convert_default", "copyToClipboard", "csvDownload", "dataURLtoBlob", "formatNumericValue", "unformatStringValue", "gazetteer_exports", "getCurrentPosition_default", "hexa_default", "loadPlugins", "mergeDeep", "paramString_default", "polygonIntersectFeatures", "promiseAll_default", "queryParams_default", "olStyle", "svgSymbols_exports", "userIndexedDB_exports", "verticeGeoms_default", "xhr_default", "hooks", "set", "parse", "remove", "removeAll", "push", "filter", "hooks_default", "url", "key", "value", "_hooks", "pushState", "val", "el", "me", "en_default", "de_default", "fr_default", "pl_default", "ja_default", "cn_default", "cn_trad_default", "esp_default", "it_default", "tr_default", "th_default", "dictionaries_default", "en_default", "de_default", "fr_default", "pl_default", "ja_default", "cn_default", "cn_trad_default", "esp_default", "it_default", "tr_default", "th_default", "decorate", "layer", "show", "hide", "tableCurrent", "geomCurrent", "zoomToExtent", "entry", "val", "key", "fn", "table", "zoom", "zoomKeys", "minZoomKey", "maxZoomKey", "geom", "params", "response", "bounds", "coords", "promise", "maplibregl", "MaplibreGL", "resolve", "imports", "error", "mbtiles_default", "layer", "className", "frameState", "googleMapTiles_default", "layer", "promise", "maplibregl", "MaplibreGL", "resolve", "maplibre_default", "layer", "className", "url", "resourceType", "transformMapboxUrl", "frameState", "accessToken", "normalizeStyleURL", "normalizeSpriteURL", "normalizeGlyphsURL", "normalizeSourceURL", "parseUrl", "parts", "formatUrl", "urlObject", "apiUrlObject", "params", "path", "tiles_default", "layer", "evt", "mvt_default", "layer", "changeEndLoad", "tileUrlFunction", "wktTileUrlFunction", "tileCoord", "table", "geom", "field", "bounds", "viewport", "z", "e", "vector", "layer", "clusterConfig", "features", "reload", "e", "feature_counts", "F", "fP", "entry", "table", "geom", "field", "bounds", "format_default", "mbtiles_default", "googleMapTiles_default", "maplibre_default", "tiles_default", "mvt_default", "vector", "fade", "layer", "out", "currentOpacity", "targetOpacity", "duration", "startTime", "updateOpacity", "elapsedTime", "progress", "interpolatedOpacity", "changeEnd_default", "layer", "changeEnd", "featureHover_default", "feature", "layer", "featureKey", "paramString", "response", "content", "filter", "ni", "featureFilter_default", "filters", "feature", "key", "type", "featureFormats_exports", "__export", "cluster", "geojson", "wkt", "wkt_properties", "layer", "features", "formatGeojson", "feature", "properties", "formatWKT", "olFeatures", "field", "i", "vals", "geometry", "count", "id", "featureFields_exports", "__export", "distribution", "process", "reset", "layer", "jenks", "count", "theme", "n", "val", "cat", "featureStyle_default", "layer", "feature", "Styles", "featureProperties", "clusterStyle", "highlightStyle", "labelStyle", "selectedStyle", "id", "lookupFeature", "f", "clusterScale", "iconKeys", "styleKeys", "styleParser", "layer", "warnings", "parseTheme", "key", "iconObject", "clusterChecks", "evalIconObject", "theme", "cat", "styleObject", "defaultStyle", "mergeStyle", "style", "icon", "basic", "theme", "feature", "categorized", "theme", "feature", "flat", "field", "catValue", "cat", "icon", "distributed_default", "theme", "feature", "field", "val", "bbox", "intersects", "b", "set", "i", "free", "graduated_default", "theme", "feature", "catValue", "total", "F", "graduated_breaks", "val", "cat", "index", "layer_default", "decorate", "changeEnd_default", "format_default", "featureFormats_exports", "featureFields_exports", "featureHover_default", "featureFilter_default", "featureStyle_default", "fade", "styleParser", "Style", "basic", "categorized", "distributed_default", "graduated_default", "layer", "createLocation", "feature", "interaction", "layer", "location", "entry", "concatFeatures", "e", "checkFeature", "F", "decorate", "location", "flyTo", "remove", "removeEdits", "restoreEdits", "trash", "update", "syncFields", "L", "fn", "entry", "fieldEntry", "_entry", "newValues", "dependents", "fields", "response", "maxZoom", "sourceVector", "layer", "source", "get", "location", "list", "getInfoj", "table", "response", "_entry", "nnearest_default", "params", "properties", "geom", "_coords", "coords", "response", "list", "li", "e", "location_default", "createLocation", "decorate", "get", "getInfoj", "nnearest_default", "attribution", "mapview", "links", "layer", "elements", "entry", "addLayer_default", "layers", "layersSet", "i", "layer", "err", "resolve", "fitView_default", "extent", "options", "val", "getBounds_default", "srid", "extent", "extentTransformed", "format", "geometry_default", "params", "feature", "geometry", "err", "layerVector", "geoJSON_default", "params", "infotip", "infotip_default", "content", "mapview", "position", "locate_default", "params", "pos", "coords", "popup", "popup_default", "params", "mapview", "allFeatures_default", "mapview", "features", "F", "L", "feature", "content", "e", "highlight_default", "params", "mapview", "finish", "clear", "highlight", "getFeature", "L", "layer", "pointerMove", "click", "mouseDown", "touchStart", "mouseUp", "mouseleave", "e", "candidates", "F", "candidate", "key", "feature", "clicked", "features", "featuresList", "f", "list", "li", "draw_default", "params", "mapview", "finish", "getFeature", "e", "moveEvent", "fn", "escape", "geometry", "onChange", "feature", "modify_default", "params", "mapview", "finish", "getFeature", "e", "geom", "geomType", "coords", "feature", "zoom_default", "params", "mapview", "finish", "e", "snap_default", "mapview", "tileloadend", "e", "features", "decorate", "mapview", "addLayer_default", "fitView_default", "geometry_default", "geoJSON_default", "getBounds_default", "infotip_default", "locate_default", "geometry", "popup_default", "allFeatures_default", "highlight_default", "draw_default", "modify_default", "zoom_default", "snap_default", "initialZoom", "initialCenter", "north", "south", "east", "west", "resizeObserverTimeout", "world", "extent", "maskFeature", "attribution", "e", "changeEnd", "center", "changeEndTimer", "syncPlugins", "key", "asyncPlugins", "admin", "plugin", "mapview", "btnColumn", "feature_info", "plugin", "mapview", "btnColumn", "btn", "toggleFeatureInfoHighlight", "feature", "properties", "F", "content", "fullscreen", "plugin", "mapview", "btnColumn", "toggleFullscreen", "e", "layer", "btn", "keyvalue_dictionary", "mapview", "parseObject", "obj", "dictionary", "key", "value", "isArrayObject", "replaceKeyValue", "item", "val", "entry", "locator", "plugin", "mapview", "btnColumn", "btn", "e", "login", "plugin", "mapview", "btnColumn", "iconClass", "svg_templates", "plugin", "mapview", "promises", "entry", "response", "svgString", "userIDB", "plugin", "mapview", "btnColumn", "locale", "layer", "updateLayer", "_layer", "key", "zoomBtn", "plugin", "mapview", "btnColumn", "btnZoomIn", "e", "z", "btnZoomOut", "zoomToArea", "plugin", "mapview", "btnColumn", "toggleZoomInteraction", "e", "btn", "mapButton", "link_button", "addButton", "link", "node", "plugins", "admin", "feature_info", "fullscreen", "keyvalue_dictionary", "locator", "login", "svg_templates", "userIDB", "zoomBtn", "zoomToArea", "link_button", "plugins_default", "hooks_default", "_ol", "resolve", "script", "olVersion", "dictionaries_default", "target", "key", "receiver", "layer_default", "location_default", "decorate", "utils_default", "plugins_default"]
}
